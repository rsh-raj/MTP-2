Hash,Date,Author,Message,IsMerge
1d0281f8ce2194e17235f06455579b2275193c0f,2025-03-20 22:20:18,Phil Crosby,Bump version to 2.2.1,False
5dceb89b3b80dbda235c6d6c30e3456bead7be54,2025-03-20 22:17:23,Phil Crosby,Fix findSelected and findSelectedBackwards commands. Fixes #4655,False
705068924f376e59e33f6505a0fa0ffb2aad3d15,2025-03-20 22:15:12,Phil Crosby,Fix typo with pasteResponse. Fixes #4654,False
99d5f32c50f4fc4fadfccb09372665a0de57ec74,2025-03-19 23:43:12,Phil Crosby,Update version rollout info in changelog,False
50ddb637ffbb7ceb39fa2b4563245857dab0396a,2025-03-09 12:22:11,Phil Crosby,Bump version,False
ef6c30ccf4f3aea3c10ef5a42a7fc8ad92d101fa,2025-03-09 12:22:11,Phil Crosby,Update changelog,False
03712d32f8b68cddd6b89527f0932f4a7088171a,2025-03-09 12:13:15,Phil Crosby,Fix user-defined search engine logic error introduced in 14c9d2edf,False
1303927e8183afbadb19dcc1d21d26107b03772d,2025-03-02 10:31:30,Phil Crosby,Clean up code,False
aaed99277e73bff9992f3d168921a682af078fce,2025-03-02 10:31:30,Phil Crosby,"Tests: make vomnibar_test a unit test

This makes it easier to run and manipulate the environment -- no puppeteer involved.",False
a9529386e1b214a3215bdbd0bda747f723b061b0,2025-03-02 10:28:34,Phil Crosby,Tests: remove now-unnecessary document stub,False
ee51dba7ebf8c204a8b639b75984f490368a4e77,2025-03-02 10:28:34,Phil Crosby,ui_component: don't run logic when file is loaded,False
2f1430332ce3d4b787bf6ca5426e56d489217afa,2025-03-02 10:28:34,Phil Crosby,"dom_utils: don't run logic when the file is loaded

This makes the code easier to think about, and allows it to be used in a unit testing environment
where we don't have an actual document until one has been stubbed.",False
059ab111c61d5c9711278bff2002c6b23a3fd4c9,2025-03-02 10:28:34,Phil Crosby,"Simplify forTrusted(), and add a unit test",False
136249608522c517cbe17f18b60b05b216cebf24,2025-03-02 10:28:34,Phil Crosby,Tests: prepare to convert vomnibar_test to a unit test,False
219db1a1135bd00c7c75c7068690079df52e5111,2025-03-02 10:20:57,Phil Crosby,"Add jsdom dep

This will be used for setting up a synthetic DOM and BOM environment within Deno for some tests,
so we don't have to resort to using Puppeteer for those tests.",False
904cd3761422f04703515739fa229c7a53236ffc,2025-03-02 10:20:57,Phil Crosby,Vomnibar: add a test for ctrl-enter,False
0a804b2ff5e5d32ea0a7cf80ab06565089eb743b,2025-03-02 10:20:57,Phil Crosby,Vomnibar: fix tests mistakenly mutating test state,False
193d6bcf4268e19e8c14637fd566aa66a4658e18,2025-03-02 10:20:57,Phil Crosby,Fixup code,False
f9b2fe0988b0913c7611567c919a9bdf6da93dd3,2025-02-25 11:25:56,Phil Crosby,deno fmt,False
14c9d2edf5dd9b79d1185b217072139d38ba2952,2025-02-25 11:25:56,Phil Crosby,"Vomnibar: don't treat javascript keywords as user-defined search engines

Fixes #4396.",False
a023a65049ce674edf3021edff02c156010bd935,2025-02-13 23:23:07,philg-dev,fixed comments to adhere to style guide,False
8eac2d21b6077155e744ef020c34141ff77d6f5e,2025-02-13 23:23:07,philg-dev,fixed comments to adhere to style guide,False
036bcb0cdba58ce24595d422566d640952d1d2d4,2025-02-13 23:23:07,philg-dev,"Fix 'w' and 'e' not working in Caret Mode

- fixes #3075
- fixes #3772
- fixes #4615

Since forward movements for 'word' and 'vimword' use char-by-char custom logic which extends the selection range, we need to collapse the selection to the end, if we're in Caret Mode instead of Visual Mode.

Also removed dead code section for 'backward vimword', as there is no binding that ever uses that and the implemented logic is equal to 'backward word' ('b' key).",False
4efe18347be1e8e48850c9f38c43fe5cdeec8179,2025-02-13 23:23:07,philg-dev,"fixes #4629 SyntaxError in Selection.modify

- fix SyntaxError on Selection.modify() due to invalid granularity parameter 'vimword' due to missing return statements",False
29061f1f50a080a7a021525806b8af8e27d11b13,2025-02-13 03:38:20,Phil Crosby,Visual mode: remove unnecessary return statements,False
2743b46453fbe6563eb37f226edd5e5d5670824b,2025-02-13 03:38:02,peterdanwan,refactor: rm early return in isSelected(),False
7e6066dbb48bfe77a129d9647933509ff9584f88,2025-02-13 03:38:02,peterdanwan,refactor: remove references to getSelectionType(),False
f1b78e853023b79e8838eebf43096e067b612ca1,2025-02-13 03:38:02,peterdanwan,refactor: remove Selection.type polyfill,False
83750cd30ab521afc99ef0d555e133ee43c6be5f,2025-02-12 00:32:17,Phil Crosby,Update changelog,False
4231e8f6feea634e32a06a026281c7e95b3f071b,2025-02-12 00:31:57,Phil Crosby,"HUD: show a warning when clipboard actions fail on non-HTTPS sites

Fixes #4572",False
2c92384ab91c8aec490d4b709a3a69c5ce567500,2025-02-12 00:31:01,Phil Crosby,HUD: minor cleanups,False
0eab1efed70a7d80dda817e39d70e4902ca244a7,2025-02-12 00:31:01,Phil Crosby,"HUD: allow for longer messages

This is a lazy version of this change. A more powerful approach would be to resize the HUD based on
the message's length. This requires posting messages across iframes, so I didn't bother for now.",False
be80ab4f5fbd423f12c8330acfec4aaf3a27c053,2025-02-12 00:31:01,Phil Crosby,HUD: make it explicit which functions are message handlers,False
12c4c3aed0a14fc8b822e3ab2c66b1b84b12a4f4,2025-02-12 00:30:47,Phil Crosby,Tests: add missing await; fix broken test,False
b3cc736015d9a81a4ece46eb9b58ddc883d06f43,2025-02-04 08:18:33,Phil Crosby,Options page: update validation errors when reset button is clicked,False
1e20bc3fd7212d053ef5d6e97511390cccb87bcc,2025-02-04 08:14:54,Phil Crosby,"Options page: require two or more chars for linkHintCharacters

Also, don't busy-wait in linkhints.js if we have fewer than two. That's a bad failure mode.
Fixes #3522.",False
02852818186d9cc7980db0777c95a498b1525528,2025-02-04 07:48:55,Phil Crosby,Clean up comments,False
8be8ede9dd8385b7a5082d06d650849bba71ff41,2025-02-04 07:06:06,Phil Crosby,"Help dialog: ensure sans serif font family on Firefox

I'm not sure why Firefox needs this and Chrome doesn't.",False
f757f7b55ad0f7f653ca324458e957d7ae440289,2025-01-22 09:26:34,Phil Crosby,Options page: remove debugging statement,False
66d102ee16c8bb76ff2f5f6adfe7b6d2e259eda8,2025-01-22 09:22:31,Phil Crosby,"Options page: fix tab index on page

The current behavior is that tabbing off of the key mappings textarea focuses the start of the page,
rather than the next field.",False
0b8ad183920347d26054feba42d38b101e9f9e1a,2025-01-22 09:21:51,Phil Crosby,Options page: show validation errors in the UI,False
e09dae475641ceeebce8f0ee6f2efaceafce2dbc,2025-01-22 09:21:51,Phil Crosby,Options page: produce validations when parsing search engine config,False
0e0ebad824d5ff8e6f18d6ef6a2858efbd97e0bc,2025-01-22 09:12:26,Phil Crosby,Options page: produce validation errors when parsing the key mapping config,False
e775d77846d1a57e275aa4927d69e9702c9a12e9,2025-01-21 11:36:39,Phil Crosby,"Options page: don't blur the current field after ctrl-enter to save options

This has been in from the beginning. I'm not sure why. One reason not to have this is that now that
we're going to show validation errors on the options page, one can save the options to check the
syntax of their key mapping config by typing ctrl-enter, see if there are any validation
messages, and then continue typing.",False
1103f94853bc0766100d034c180ddeb0ae428cb5,2025-01-21 10:35:11,Phil Crosby,Fix malformed options.html and run deno fmt,False
6779ea4e2c5940dec4c30a69df8a5ecf3c4bb0df,2025-01-21 10:35:11,Phil Crosby,Fix some malformed HTML files and deno fmt them,False
9a156a5a85a26b91a076b723075b4b08be99a428,2025-01-21 10:35:11,Phil Crosby,Run deno fmt on everything else,False
096e3df50110ba66ff1a55d00619fd4895283ba8,2025-01-21 10:26:05,Phil Crosby,"Remove forward slash in all <br> tags

They're unnecessary.",False
12d7321ce8f190ce8eb4b44e2fcd492726323866,2025-01-21 10:26:05,Phil Crosby,Run deno fmt on HTML,False
19159d75d1cda3636526053de944def2f6b051c7,2025-01-21 10:24:43,Phil Crosby,"Commands: remove some tests

These are broken by the recent ""reload hard"" addition.

I'm not quite sure what these tests are testing, and I couldn't easily get them to work with the
reload hard command, so I've deleted them.",False
41623873fe5107fe88688392e1537459c6f58109,2025-01-21 10:24:23,Phil Crosby,Add a missing import,False
cbf963be556a5896bc1fff237b256908fc917bab,2025-01-21 07:26:28,Caleb Marcoux,Fix code readability concerns from PR.,False
8db85eac79bafc07b14506ad2536b73c3db99f5b,2025-01-21 07:26:28,Caleb Marcoux,Fix advanced check styling.,False
bd53e83f38369f9f766a7a064652305b0632e6c7,2025-01-21 07:26:28,Caleb Marcoux,Allow commands with options to be advanced (for hard reload).,False
3e56a4d9042f095ef92341755d69a477030f4f51,2025-01-21 07:26:28,Caleb Marcoux,"Change truncating logic to full description length and fmt.

This truncation method is that requested by philc.",False
8c1df11a54b9117c2f67ce5d38c62653aa4f1bdc,2025-01-21 07:26:28,Caleb Marcoux,Remove hardReload command and replace it with `reload hard`,False
1ebed177acb4deba26505792d1fe8676f3c8c325,2025-01-21 07:26:28,Caleb Marcoux,Initial implementation of command options help messages.,False
2588d8e7f0a84c314bedea71e27489085cd0fa22,2025-01-21 07:26:28,Caleb Marcoux,Change zoom command description to match mapping intuition.,False
e304d0a2383e9622ebf2ea4f5c1512bd01b7ad6b,2025-01-12 11:23:33,Victor Andr√© Gris Costa,"fix: fix find mode not searching inside elements with `display` property set to `contents`

made the find mode dom node traversal algorithms search for visible nodes inside elements with display property set as contents. This had to be done because the `checkVisibility` method considers these elements as not visible, however the children of these elements are visible.",False
bf0bdda96066cba9c9fce86fdc34c1a90143ed69,2025-01-12 11:16:40,Phil Crosby,"Use a vendored version of shoulda.js. Fixes the tests.

We use a vendored version of shoulda, rather than jsr:@philc/shoulda, because shoulda.js is used in
dom_tests.js which is loaded by Puppeteer, which doesn't have access to Deno's module system.",False
b739224657afabd091a37dfaabfd05645b889005,2025-01-12 11:07:50,Phil Crosby,deno fmt options.css,False
55f49f8ecde7f19e492f03e8cafae0923c6492a9,2025-01-12 08:09:31,Phil Crosby,Add findSelected to changelog,False
23ab6954e7411eb714739239ec0e06dd1394faa0,2025-01-12 08:09:31,Phil Crosby,Add findSelected and findSelectedBackwards to advanced commands,False
a35a87d4f2b672a2ac0b868b26dd74d881ba8df3,2025-01-12 08:09:31,Phil Crosby,Improve code for findSelected,False
e9fed444cfb1d2ab204c3bd591ffc54ca4d2c2c8,2025-01-12 08:06:29,twio142,avoid passing in a query to `FindMode.findNext`,False
bea32d7a9a88cd7c523bd6d06931f46af119877c,2025-01-12 08:06:29,twio142,find mode: support matching for selected text,False
a21838de303c0108220299e1f167009ad8d2be6e,2025-01-07 11:21:56,Phil Crosby,"Options page: remove unnecessary hover style

It's subtle in light mode, and it's ugly in dark mode.",False
579ff10de8824c63c379cb8e67c90740b4e95660,2025-01-07 11:20:06,Phil Crosby,Options page: small CSS improvements for dark mode,False
f516251ed0460043ce22d26326762a237c3c6f46,2025-01-07 11:20:01,Phil Crosby,Options page: format CSS with prettier,False
61bcaeb44311870343d3c0c6abbd728c2b1d912d,2025-01-07 11:19:20,Phil Crosby,"Options page: use a grid instead of tables; allow page to resize

Now that the page resizes, the text fields can become wider, which improves the experience of
editing the key mappings, custom search engines, and CSS textareas.",False
caf27abede883c4738b6281aa6faf49f0f6b537e,2025-01-07 07:28:41,Phil Crosby,Options page: allow dark-colored scrollbars when in dark mode,False
9d17c889e12353e6705ac69f03b197236f68a263,2025-01-05 07:44:52,Phil Crosby,"Remove many now-unused lines from deno.lock

I did this by deleting deno.lock and running make.js",False
712cb5e3485ebc1318d6f55174c706de56444a27,2025-01-05 07:41:31,Phil Crosby,"Remove deno.land/x/port dependency and implement it ourselves

We need a small amount of functionality from this (now unmaintained?) module.",False
73ecc959b4af8c3de73e995bdd168f4a292ba9e2,2025-01-05 07:37:41,Phil Crosby,Use JSR versions of modules when available,False
03dc8dadee2dcb4f238837d2da3d44989459cf51,2025-01-05 05:16:21,Phil Crosby,"Fix Firefox can't click on links: rename globalThis to window

Introduced in f5a0a262686d9590f053c19bba0973ffdcb08975

This happens in Firefox but not Chrome when clicking a link with link hints:

TypeError: MouseEvent constructor: 'view' member of UIEventInit does not implement interface Window.",False
2588786a3aaeef3aa8ccfac090cd437a32711831,2025-01-05 05:02:27,Phil Crosby,"Ensure dom_tests don't request favicon.ico

This causes our tests to fail, because our tests assert that our background scripts made no requests
to missing URLs.

This was not previously needed, so I think it's a result of upgrading to the latest version of
Puppeteer.",False
dd4e1814bd372dd7e490fdbf332d1f0e993ac63b,2025-01-05 05:01:27,Phil Crosby,"Add --allow-sys to make.js

This seems to be required by puppeteer (and possibly any npm dependency?).

‚îè ‚ö†Ô∏è   Deno requests sys access to ""homedir"".
‚î†‚îÄ Requested by `node:os.homedir()` API.
‚îÉ  ‚îú‚îÄ Object.homedir (node:os:94:10)
‚îÉ  ‚îú‚îÄ Object.<anonymous> (file:///Users/phil/Library/Caches/deno/npm/registry.npmjs.org/env-paths/2.2.1/index.js:5:20)
‚îÉ  ‚îú‚îÄ Object.<anonymous> (file:///Users/phil/Library/Caches/deno/npm/registry.npmjs.org/env-paths/2.2.1/index.js:76:4)
‚îÉ  ‚îú‚îÄ Module._compile (node:module:745:34)
‚îÉ  ‚îú‚îÄ loadMaybeCjs (node:module:770:10)
‚îÉ  ‚îú‚îÄ Object.Module._extensions..js (node:module:755:12)
‚îÉ  ‚îú‚îÄ Module.load (node:module:662:32)
‚îÉ  ‚îú‚îÄ Function.Module._load (node:module:534:12)
‚îÉ  ‚îú‚îÄ Module.require (node:module:681:19)
‚îÉ  ‚îî‚îÄ require (node:module:812:16)",False
df62859e08d40fb163fa8ff3e1ac83c89e7287e6,2025-01-05 05:01:27,Phil Crosby,"Change json5 dep from deno.land to npm

The deno.land version uses the import API for some reason, which makes it hard to track that
dependency and requires another permission:",False
f5a0a262686d9590f053c19bba0973ffdcb08975,2025-01-05 05:01:27,Synthaxion,Updated deno and puppeteer version,False
ddd5770486be656b79c7d6939b385e5b7287e4c2,2025-01-05 03:33:01,Phil Crosby,Update broken link to article about Working in Public,False
ffc32f5a481869a55849b48f81bdf3a26d587c20,2025-01-05 00:31:12,Jose Alvarez,Add Kagi search suggestions,False
9557cff12ca1c650f1ae1f05edc1aef2a98156b7,2025-01-05 00:21:45,Caleb Marcoux,Rename mkRepeatCommand TODO complete.,False
8d23c6f57c527b9fc6801f81feecb7da39a93cbb,2025-01-05 00:21:45,Caleb Marcoux,Fix Deno fmt changes.,False
654edf25a365ef7ef91c1bd4f471042ecc70b176,2024-09-05 01:23:48,Phil Crosby,Inline a function,False
28c94f0b9848118b9eb6ec8e485bd539c882e2e5,2024-09-05 01:22:03,Phil Crosby,"Remove strange function overloading

Removing this behavior caused one test to fail, and the test was sending an array to a function
which expected a string.

I did some light live testing and didn't notice any breakage.",False
fcb29600514d552b824d233de443ca542d12e9a3,2024-09-05 01:14:49,Phil Crosby,Add missing imports for test,False
0bab852563d4b3561a30ecffcd9b05288dc0ba1b,2024-09-05 01:08:02,Phil Crosby,Vomnibar: add test,False
d800f7ea43b2ba8b6912326e3351dbddba9cc489,2024-09-05 01:08:02,Phil Crosby,Add the ability to run several DOM test pages,False
3e8adbee8aae4c111c86179b2d5fea5250e60d07,2024-09-05 01:08:02,Phil Crosby,Fix a bug where console messages from puppeteer appear out of order,False
46386275fd8f594262fcafb6ab98731726cd30bb,2024-09-05 01:08:02,Phil Crosby,Formatting,False
b449e27d0e4b4827a3dcb18dc2b3ab2510e46262,2024-09-05 01:08:02,Phil Crosby,"Vomnibar: add await statements, so the tests can run synchronously",False
3b4483138ee1c4e5dee3b19111de01f84cf097ac,2024-09-05 01:08:02,Phil Crosby,"Make Vomnibar a class rather than a singletone, for unit testing",False
72f20ae4a33439482a968705b633a5fb7eee3bee,2024-09-05 01:08:02,Phil Crosby,Vomnibar: add a dom test (WIP),False
9eb8b64c585f06343b7274fe1f6a9854f2eb8bee,2024-09-05 01:08:02,Phil Crosby,"Use module imports in pages/vomnibar.html

This is so the script itself can import its own dependencies, making it easier to create unit test
pages.",False
4f148f9ef12ba5e8e8c64526720cc46931fb2725,2024-09-05 01:07:54,Phil Crosby,"Fix: typing in a URL in the vomnibar initiates a search

This fixes a bug reported in the discussion of #4439",False
179d804761b852f6a7887cba01d6955679f5a4a3,2024-09-04 05:41:59,Phil Crosby,Remove duplicate Utils.hasJavascriptProtocol function,False
4856327056592ad107bcf94e5960dbfe87ad46f2,2024-09-04 05:39:19,Phil Crosby,"Rename some URL functions to be clearer

Inline one of them",False
3d03dd184b9b3c132eb3420d498cedf3253a74de,2024-08-05 10:35:38,Phil Crosby,Document why we're excluding PNG icons from the Firefox build.,False
4b1491f0172223b750f22fa9f251b789a9123138,2024-08-05 10:34:00,Leo Heitmann Ruiz,"Exclude Chrome specific icons from Firefox build

Firefox uses the SVG icons directly, which Chrome can't.",False
5c359ea2f98e5efeb038cad0eaac858a36ae9b70,2024-08-05 10:33:34,Leo Heitmann Ruiz,Update action icons,False
0a73d4ce848fec07d7d5b2600d14411bbf93f761,2024-08-05 10:33:34,Leo Heitmann Ruiz,Use SVG action icons in Firefox,False
f73cdaab6b494fcd2c4e41a3445b292a27033b0c,2024-08-01 10:15:39,Caleb Marcoux,Add missing 110% Firefox zoom level.,False
7ff8cb6fa225134b9dfd189734c3db027b35be46,2024-07-17 03:26:09,Phil Crosby,Remove redundant vimium.png,False
9801fa99b7827419aa4d0b70b1a9a7fb3730beab,2024-07-17 03:25:21,Leo Heitmann Ruiz,Use SVG icon in Firefox,False
a7b53cfc660a0ae89aff09ec594804e8cca8965f,2024-07-17 03:25:21,Leo Heitmann Ruiz,Update icons,False
57651892cd0217b2f273332ca4c943c82d1784f9,2024-07-17 03:25:21,Leo Heitmann Ruiz,Remove unused icons,False
2bae2f842dbb506f4c553e4b82d684bde225159b,2024-07-17 03:12:17,Caleb Marcoux,Remove old comment about Chrome breaking.,False
1738a905b6baf7e48d3009ec33e40a6e91ab666a,2024-07-17 03:12:17,Caleb Marcoux,Remove unneccessary setZoom bounds check.,False
056c5285fbfb1cfb8e07dc0bcaf4870aeb9c292a,2024-07-17 03:12:17,Caleb Marcoux,Solve PR Suggestions: comments/docstring,False
979f775950b23830281038210b0fd897ed08d52a,2024-07-17 03:12:17,Caleb Marcoux,Deno fmt changed this new line. I don't see the difference.,False
aded95e9cd2d35bf05b893fce448345f0f176da0,2024-07-17 03:12:17,Caleb Marcoux,Add setZoom command and better handle zooming edge cases.,False
e302d64ddc188411d4c430b22838cb84895150e6,2024-07-17 03:12:17,Caleb Marcoux,Fix floating point zoom in errors on Chrome.,False
08b78e6b0983f1b61200fdb46eff4209576f2fac,2024-07-17 03:12:17,Caleb Marcoux,Refactor zoom methods and add unit tests.,False
70f94841080280712bcfaaf37d4d3ff5ddd9efa8,2024-07-17 03:12:17,Caleb Marcoux,Remove console log and correct formatting.,False
ecebba4b0f627d20a51be144252539e26391fad2,2024-07-17 03:12:17,Caleb Marcoux,"Initial zoom in/out/reset implementation.

Fixes the issues with the previous PR and brings
the implementation style closer to that of the
existing project. Uses Chrome's zoom levels instead
of a set increment. Resets to the user's default
zoom level instead of always 1. Uses primises instead
of callbacks.",False
f0f454c2d968ca5d772fdbb1be5767bee14c3241,2024-07-17 03:12:17,Caleb Marcoux,Add zoom commands,False
47c85e97dd0388bd4c64bb8598558ded6e53f596,2024-07-05 10:30:12,Phil Crosby,Make it clear that forCountTabs is async,False
5d9a4d0e72b84eeb78c7cd92d2e647d636ab1080,2024-07-05 10:16:28,Phil Crosby,"Use hoisted functions at the top level, for style consistency",False
4331ffdb029460c85a797e4d1933f242612890bb,2024-07-05 09:40:40,Phil Crosby,Remove unnecessary return value in some commands,False
5fc9348aa3866c7bd3f1fd40664abd5eb166ff6e,2024-07-05 09:33:45,Phil Crosby,Fix test for hard reload; cleanups,False
973445400c179970ee6a0112f22d81338d804e1b,2024-07-05 09:29:41,Phil Crosby,A few cleanups for Firefox hidden tabs,False
e9a7a799e72a9289ae48033db55743ad34f191a3,2024-07-05 09:29:27,Caleb Marcoux,Use forCountTabs in relad and hardReload.,False
f0f6d9ea5f58bb1ba38bda961eb6ceb8ae781bb5,2024-07-05 09:29:27,Vincent A. Barkman,"Refactor `hardReload` function

- Replaced nested position finding function with `findIndex`.
- Eliminated array reordering; implemented looping with modulo for tab cycling.
- Added error handling for non-existent `tabId`.

/Vincent A. Barkman",False
044a1a462727ca75bfa0cf21afedf0d1a0507349,2024-07-05 09:29:27,Tribhuwan Kumar,add 'R' for hard reload,False
29e1fc347edf1459224f27f548c52f42e2606d92,2024-06-01 08:59:49,Caleb Marcoux,"Solve PR suggestions.

* Move visible tabs query to background_scripts/main.
* Provide explanation for tabIndex.
* Revert binary search to linear search.",False
d126a450ece26d8fb439e83bd23f257d7c385336,2024-06-01 08:59:49,Caleb Marcoux,Fix background_scripts formatting mistakes.,False
c7c4fabe1f4bbda52fc817f4457b6ecd0731a7f1,2024-06-01 08:59:49,Caleb Marcoux,"Use binary search for tabIndex

Since all indices are in order, we can binary search.
This will significantly improve the performance for many tabs.",False
50200e7d411d6e3adc3876d39e62ed96db88c154,2024-06-01 08:59:49,Caleb Marcoux,"Firefox hidden tabs.

Correctly handle Firefox hidden tabs.
The operations which I implemented were:

* remove tabs
* select tabs
* move tabs

I have manually tested all of this functionality with hidden tabs and it appears to work correctly. This includes moving tabs to new windows and removing tabs relatively. All tests were also done with counts. I have also tried to update all relevent functions so that all operations will work in the future. The unit tests also still pass.",False
76fea7addfb22be61f0fce80b65a8449f56ed501,2024-05-30 10:45:35,Phil Crosby,Clarify instructions for installing from source on Firefox,False
3589bb5fe6e2be9f7c5252e5aec926a838dfa1a2,2024-05-30 10:42:54,MonsterPi,fix: browser info loading condition,False
445486e20f410fcfbbe8b0a186242bc9f4368511,2024-05-09 00:22:54,hugehope,"chore: remove repetitive words

Signed-off-by: hugehope <cmm7@sina.cn>",False
8f3097eb2d538c8e6ca4d2cf38fce84d2cbc9788,2024-04-11 08:30:54,Phil Crosby,"Remove util fn addElementsToPage, and rename refactors

This utils function wasn't pulling its weight.",False
13b2bc97c16d3d1c3ba7aeb62acc3c962742c8ce,2024-04-11 07:34:41,Julian Diehl,Vimium is now using top z-index layer,False
0fec0888f20c3104a5196c774faa1d043106f560,2024-04-11 07:24:13,Phil Crosby,"Fix custom search behavior when no entry is selected

This is a regression from 231379c2196403a9087dd652cc01c47111c5cf4b.

Also improve some function names and comments.",False
bfe6dc53b4d6820515fc5684ad46bcaca30874d2,2024-04-11 07:20:03,Phil Crosby,Fix error when loading options now that searchUrl has been removed,False
cddfbd1262515bb880cefb4ebdb6063c2317f3c9,2024-04-11 06:49:26,Phil Crosby,Clean up gitignore: only ignore ignorable files specific to Vimium,False
49b39b183bd56d87e403a8ecba56e9141783b2ad,2024-04-11 06:45:18,ayn2op,Remove .vscode entry from .gitignore,False
e79e4875ef7939eadb7d58d9cb8aab454d6505a5,2024-04-11 06:45:18,ayn2op,Remove default search engine option,False
231379c2196403a9087dd652cc01c47111c5cf4b,2024-04-11 06:45:18,ayn2op,Search using browser default engine,False
cf0c5cf5cbb291eb4023ca232938bbfcfa1b75a3,2024-04-11 06:45:18,ayn2op,Add .vscode to .gitignore,False
665d2679cdd3ef9ee7313e33d6e034287fa0df98,2024-04-04 05:41:32,Phil Crosby,Bump version to v2.1.2,False
4fd42ad269e4a37f98cf8b603a940a6c63678d69,2024-04-04 05:32:09,Richard Macklin,"Remove unused `tabId` variable in `openUrlInCurrentTab`

This variable became unused in 10524a0c1f0fc732e1f9df3497b026e17edf3728
so we can remove it.",False
bd3aca85ec834bd4afcf34d4815f523f1fe51d11,2024-04-02 11:24:46,Phil Crosby,"TabRecency: delete inactive code

this.tabIdToCounter is always empty at the time of execution, so this loop is unnecessary.",False
c83e0b952f8bf7ea7a52789271549198d210c25c,2024-04-02 11:17:13,Phil Crosby,"TabRecency: disallow operations until state is loaded from storage

This approach eliminates edge cases and race conditions, and is easier to follow.",False
8b01abe9fa41fd71a43ec04fe73d41457f324cc0,2024-04-02 10:19:35,Phil Crosby,TabRecency: fix a counter bug when loading recency from storage,False
a697efeea57f8c1b1ec7715d3e39baedfb8d2360,2024-04-02 09:41:40,Phil Crosby,Document the link hints fix for github enterprise,False
609836a83e123e0096446b5b7833c50d37d836d9,2024-04-02 09:39:05,Ben Baum,add display style attribute in popover cases,False
9780226bf472eae93f49ee9d8984e6f2f12668ed,2024-03-30 06:37:05,Phil Crosby,"Fix regression where createTab options are not parsed

Fixes #4450",False
6a270b714a344b752f16c834e6bb00bc77963be0,2024-03-29 20:53:06,Phil Crosby,Bump version to v2.1.1,False
ea94f758f5bc3f8e2d100ceb9b66469829c77935,2024-03-29 20:43:39,sudonick,"fix(#4447): Fix Key Exlusion Bug
Load tab_recency module before loading bg_utils
in action page.",False
75513dec05579efd5dd77a52397152c1b93a4646,2024-03-27 23:22:15,Phil Crosby,Bump version to v2.1.0,False
9e53f44db7a67bc19e5bf30030049fc6136957fa,2024-03-27 23:05:51,Phil Crosby,TabRecency: persist state to storage.session,False
412cc37621a578ee260925f31e0722539af33f39,2024-03-27 21:34:12,Phil Crosby,"Show link hint markers inside of a popover

This fixes #4408 on browsers which support popover (Chrome 114, and soon Firefox).",False
3d430dd48b4361f6c927f6733198cfc0f467d1ca,2024-03-26 09:38:13,Phil Crosby,"TabRecency: remove nil check on chrome.windows

I think this was originally here because Firefox didn't support it pre Firefox 45.",False
c1bd89d01c10c1a5f700e0699ad6d5c33368de9b,2024-03-26 09:38:13,Phil Crosby,Remove unused functions,False
029546463c1d413d0f32baf605d94b524abbca17,2024-03-26 09:38:12,Phil Crosby,"TabRecency: simplify code

We don't need to keep track of how long a tab was visible for, because despite what the comment
says, the command ""5J"" does not visit 5 tabs, just 1.",False
77bae1be300b6fcef34d4baf995ddc67a8131685,2024-03-26 09:37:50,Phil Crosby,TabRecency: move to its own file,False
131e2404268322aaa25f99fd23032f6d06d820f8,2024-03-03 02:45:16,Phil Crosby,"Remove unstable flag in make.js

This was previously required for puppeteer, but some some reason now it's not.

This fixes a warning in recent versions of Deno.",False
07e26002fe74ac252110079b63e5a257bd48b3d6,2024-03-02 06:50:18,Phil Crosby,Mouse out of last clicked element when ESC is typed,False
dd7c045b1930a37293ffaa7f4a025c99c47d7f0c,2024-03-02 06:50:18,Phil Crosby,Minor cleanups,False
e1b559192cfe8401cd0c4a17a2f800dd1b75a2eb,2024-02-05 11:55:04,Phil Crosby,Clean up selectSpecificTab fn,False
75bee8c870c322aae8ac0e01425036458aca30e7,2024-02-05 11:28:22,Phil Crosby,"Correctly fetch tlds.txt file, fixing vomnibar

This worked in Firefox, but not Chrome.",False
fe04da1be0bc511369c62ff077e0ba7e37f65d42,2024-02-05 02:46:48,Phil Crosby,"Remove some unnecessary return values

I believe these aren't important...",False
5b761c0e5fb0343e73e1b65bf8b95c459f8a59b2,2024-02-05 02:46:48,Phil Crosby,Remove a now-unused Firefox workaround in simulateClick,False
839c38ed21f36cec0d10d1bf726f748d185311f9,2024-02-05 02:21:05,Phil Crosby,"Use the tab's URL to check if the Vimium is enabled

Previously we were accessing the top frame's URL, which fails due to cross-origin restrictions if
the frames are from different origins.",False
38278b8370d2f397e63a21c2c25085ca33fa2a98,2024-02-05 02:21:05,Phil Crosby,Add a harness for testing cross origin iframes,False
4fe548455ec2c2eb00a35080115c16ad5765db63,2024-02-05 02:21:05,Phil Crosby,"Exclusions: exclude keys based on the top frame URL, not subframe URLs

This fixes #3254, #3960, #4375",False
5be5fc1487a6b554d7e66952b07418181fafc3b6,2024-01-11 10:25:24,Phil Crosby,Minor cleanups,False
3908c4f99d3de628b21370204ba9e00c9666a162,2024-01-11 09:55:21,Phil Crosby,Vendor the latest version of shoulda.js,False
9c74e6f70f4af9c20fe3feb5c3b17c7d28d96318,2024-01-11 09:54:32,Phil Crosby,"Throw Error rather than strings, for clarity and consistency",False
1e00ac50c36561b99bea769a533c43fd996b1527,2024-01-11 09:54:32,Phil Crosby,Completion: Use %20 rather than + when forming a URL from a user query,False
5a65f24f97cbd72eb6b068e944cac01913d15863,2024-01-11 09:54:32,Phil Crosby,Completion: fix broken test,False
feabfcce4df2f0dee7214c63d9fab7df2e1177a9,2024-01-09 10:11:00,Phil Crosby,Rename variable in make.js,False
dfc099a503b3053f90e7f873819a1ac73d4768ae,2023-12-10 08:51:13,Phil Crosby,"Remove unnecessary text/javascript type on script tags

If omitted, the value is assumed to be text/javascript.",False
f6d650155eadc4b87e0ad0022623ee89ae39e89a,2023-12-10 08:47:49,Phil Crosby,"Tests: word wrap vomnibar harness

I'm not sure if this harness still works, but it needed formatting.",False
975e0d5eaa283ee4602e7937092280e76e1c0430,2023-12-10 08:47:03,Phil Crosby,"Tests: add blank favicons to every test harness

This removes a spurious error printed to the JS console.",False
ed4ab38e027ae18a12f28df283795353466e55d1,2023-12-10 08:44:08,Phil Crosby,Move a field from Utils to TabOperations,False
65544979822353d5e61483dce818dd0c57232c82,2023-12-10 08:42:05,Phil Crosby,Tests: remove outdated TODO,False
46f65107245bf8181fe2c135056aceb30725b337,2023-12-10 08:37:50,Phil Crosby,"Tests: remove intricate injection of shoulda in dom tests

This is no longer necessary now that we're serving the dom tests from a local web server rather than
over a file:// URL.",False
8ff4dcde93981aa73bdfdfcf4d3aebe087c86e5b,2023-12-10 08:37:50,Phil Crosby,"Tests: stop using ""disable web security"" flat in puppeteer

We no longer need this since we're not loading the tests via files.",False
1e9b179fefdb2861b5fc3b3f08e97cd7e6653086,2023-12-10 08:37:50,Phil Crosby,Tests: load shoulda and dom test cases as modules,False
2526e8a44f9914a2ddc28d8f4a1fb2accd93f1b4,2023-12-10 08:37:50,Phil Crosby,Update deno.lock,False
fde520141a895fe80c2af59cda1b2cae516bc40b,2023-12-10 08:37:50,Phil Crosby,"Tests: remove test_runner in dom tests

This was used long ago to run our tests in a real browser environment. Now we use puppeteer instead.

If we wanted to run the tests in a non-headless browser, then we can use shoulda's output to the JS
console.",False
cef2b84c86ede12bdb3f8e6a345900e5c91a8e08,2023-12-10 08:37:50,Phil Crosby,"Tests: use closure rather than ""this"" to store test state

It's clearer and shorter, and `this` isn't available in JS modules.",False
257e99656fe58b6ac3c27be70656130593d48836,2023-12-10 08:37:50,Phil Crosby,"Tests: serve DOM tests from a local web server

This cleans up the ugly injection of shoulda that we have in make.js.

This may also pave the way for using modules throughout the code base.",False
16cd877c387c63c0c7effdd82ebb3f9fa535643f,2023-12-10 08:37:50,Phil Crosby,Tests: improve the error reporting from tests in make.js,False
fe6a13bbbe26a30fd2dde12b9a58c34bd96b0c44,2023-12-10 08:37:50,Phil Crosby,Tests: remove unnecessary await,False
d181d45b06e04b16c91847feb391b0c0126ce608,2023-12-10 08:37:50,Phil Crosby,Update deno lock,False
8905d090bb37ce8dc471b045fd8f073d7b33bcb7,2023-12-10 08:37:50,Phil Crosby,Add a task to download and parse list of TLDs,False
dea254636553bdc63141aac18f221aec95fede75,2023-12-10 08:37:50,Phil Crosby,"Use an official list of TLDs for detecting a URL

Also move URL-related utils into UrlUtils",False
5360591d5918d8c6296853f22f319a409708f2b0,2023-12-09 11:44:35,Phil Crosby,"Add list of all tlds as of Dec 8 2023

Fixes #3268.",False
38e74e7c18ac8e7e613e9927ab8e1b24be8f6155,2023-12-09 06:16:36,Phil Crosby,Link to the Edge addons site from the README,False
b96f2e7b0c2aa0c20cdec59ddce2eb35e505d0aa,2023-12-09 06:15:50,Phil Crosby,"In Firefox, make the removeTab command ignore pinned tabs",False
4b0e76b5b187a8587c27d2fc50c9586667ed4582,2023-11-28 12:01:25,Konstantin Kreft,fix: correct mouse click event sequence order,False
75d21241e57c0d4337e3f3642f710acbc1c6c54c,2023-11-28 12:01:25,Konstantin Kreft,feat: fire all events that a real mouse would fire,False
ca82138df678b15b844a867937dd62f037168a5a,2023-11-28 12:01:25,Konstantin Kreft,feat: use pointer events for better compatibility,False
2eb815571515e61fd6d7ceb90f925d61619665f9,2023-11-07 07:35:31,Phil Crosby,Bump version to v2.0.6,False
54a513510a511b536141e9230590fddae5125a1a,2023-11-07 07:35:12,Phil Crosby,Include a link to the wiki in the action popup,False
37b1e734bd519ed890cd522c7cf31efc4c7d82d2,2023-11-07 07:18:30,Phil Crosby,Bump version to v2.0.5,False
919ed08a2e34b5c09a39dfc791fcbaf1f6f7d00f,2023-11-07 07:04:46,Phil Crosby,Fix character encoding warning in Firefox console,False
0bbf96c79d3798de160dd88e16a14be51b3b562c,2023-11-07 07:02:35,Phil Crosby,Passkeys: make this feature work again,False
dca6ca7a9a2404c7ccbba2184b35cbca563cf0d5,2023-11-07 07:00:32,Phil Crosby,"Passkeys: fix bug when handling changes to session storage

Fixes #4336 and probably #4354.",False
aa948b732ceca528d8f293bb656fe5b18ea1a183,2023-11-07 04:20:51,Phil Crosby,"Increase Chrome's min version to 105

We need this for the element.checkVisibility API, which is used in the new find mode.

Firefox introduced this in 106, but we already have 109 as the min Firefox version.

This fixes #4356.",False
d3651c007970101953831aafed537d42238ff4c9,2023-11-07 04:12:57,Phil Crosby,Remove unnecessary optional chain,False
bed53f44bb7983b634ac1f7cdeeb15be8f073080,2023-11-07 04:09:37,Pavel 'Strajk' Dolecek,Optional chaining for link.innerText... in prev/next link logic,False
04f1506e092ad07f02fb6ebe6fc1e6d3c66eb9cc,2023-11-07 04:01:56,Phil Crosby,"In Firefox, prompt the user to grant the all hosts permission

Fixes #4348.",False
3d25292b3605bd752594ff611c099f11164239c6,2023-11-01 01:16:29,Phil Crosby,"Vomnibar: move font declaration to root

It's unclear why we had different font declarations for the input vs. the rest of the Vomnibar.

This should hopefully fix #4350.",False
fe5063738b35adc75c66dd646791290f6011564c,2023-11-01 01:16:17,Phil Crosby,Vomnibar: remove some styles which had no effect,False
1c0001744786dd15fcaee45492c2b8714088d50f,2023-10-31 10:03:44,Phil Crosby,Update test syntax for shoulda 2.0,False
745b8862c70065776e1e8f005007a969fdea6f92,2023-10-31 10:03:00,Phil Crosby,"Vendor the latest version of shoulda.js

We could just import it as a Deno module, but we need to host it locally for the tests within
Puppeteer to work.",False
13c16f820a039f249d93ee52adb1e6009f4738ff,2023-10-27 11:06:45,Phil Crosby,Use explicit versions in make.js,False
65b8f397b15a53cdd8cba31b77b43c9ccd9d7aba,2023-10-24 09:23:46,Phil Crosby,"Refactor the upgrade notification check, add a test",False
ca0bcd08bcdea5047355b7f433cfff3b808d9e18,2023-10-19 23:19:10,Phil Crosby,Bump version to v2.0.4,False
dc36bfd6390fcd05b14c7639d106216ad57a0ac9,2023-10-19 23:10:57,Jianbo Wang,Fix: find mode does not seek to display the match,False
800bf717f828f4cf9d9d99aa6c1239546eb02663,2023-10-19 12:14:32,Phil Crosby,"Await the completion of the shoulda tests in Puppeteer

I was trying to fix a race condition when logging from the console in puppeteer, but this
didn't help. Still, this change is correct.

The occasional error I'm having:

Uncaught (in promise) ProtocolError: Protocol error (Runtime.callFunctionOn): Target closed",False
cf36d9b22cc017836f49a177671227db03f2b118,2023-10-19 12:14:21,Phil Crosby,"Link hints: handle invalid image maps

Fixes #4342.",False
c8c0c77a469f0cf4601f29c84bfe8ccf51bbb1d8,2023-10-19 12:14:12,Phil Crosby,Update vendored shoulda.js,False
600306ac3b97e3907dec4ac2e144a33ce8f6dca4,2023-10-19 08:51:40,Phil Crosby,"Indent test file

Make the multi-line template strings easier on the eyes.",False
f3eda16841dc8d527b43613010e378f131cf1411,2023-10-19 06:03:08,Phil Crosby,"Completions: show no results when Vomnibar.activate is first shown

Before this fix, the list of open tabs was shown when there was no query terms.
This behavior was regressed in 02a08cf5978fac6d17f51c8cf6bc79051b35296e.",False
0a36df3669783174986bc7d74aace6ca2726fee0,2023-10-19 05:37:53,NI57721,Fix: vomnibar does not use UserSearchEngine when it is given,False
d524fddb296a86eeb65c17f99361698d21ac82d1,2023-10-15 05:32:04,Phil Crosby,Bump version to 2.0.3,False
912f3c6880013837f2c676cf3e506761a368c8ea,2023-10-15 05:29:56,Phil Crosby,"Fix opening bookmarklets in Vomnibar, take two

Fixes #4334",False
7916142c48f6d48268f27aac35cbf108595d892a,2023-10-12 02:49:26,Phil Crosby,Bump version to v2.0.2,False
10524a0c1f0fc732e1f9df3497b026e17edf3728,2023-10-12 02:31:55,Phil Crosby,"Use chrome.scripting.executeScript to open bookmarklets in the Vomnibar

This fixes #4329.

Note that bookmarklets will still raise an error if the site has a restrictive CSP. For the full
solution, we need a new API from Chrome. This is tracked in #4331.",False
dff67c300dfd05d6118ab5b5372aa7f083bbd8e3,2023-10-12 02:19:29,Phil Crosby,"Completions: Remove mistaken unit test scoping

Introduced in 02a08cf5978fac6d17f51c8cf6bc79051b35296e",False
02a08cf5978fac6d17f51c8cf6bc79051b35296e,2023-10-11 23:49:49,Phil Crosby,"Completions: populate vomnibar with recent tabs in Vomnibar.activateTabSelection command

Fixes #4326.",False
4a7052dbc5be77dfc15f06fc64ffeb4270994cce,2023-10-11 06:18:37,Phil Crosby,Update deno.lock,False
9b4b1c1abc235a159bef0ed84e38165d3ddf53f1,2023-10-05 09:56:27,Phil Crosby,Bump version to v2.0.1,False
84853b738a90a10cd1c19eb6876b98a244547b7c,2023-10-05 09:54:05,Phil Crosby,Settings: add a reference to #4323,False
c7930a1b3a1cd5e90a25c6e1bc3046f243335c83,2023-10-05 09:51:23,Peter Fern,settings: Fix settings migration when encountering non-JSON values,False
e7511efe231908eac53896b61195b7e4376a496d,2023-09-28 23:07:28,Phil Crosby,Ignore a few files in the dist package,False
2f7f5251d114baada6bb74290d10db4a108e48c0,2023-09-28 23:00:44,Phil Crosby,Update changelog,False
42720c5f37f485199b4bc0ecca98112e703e6f1e,2023-09-28 02:34:09,Phil Crosby,"Revert ""Link hints: add workaround for Google search link hints. Fixes #4303.""

This reverts commit 06a2ceda88c1f557ab3062397ea158460224788f.

This appears to no longer be necessary. See discussion in #4303.",False
86389e15a7a61007dba2c29952c3e4c93a9b790d,2023-09-26 11:49:35,Phil Crosby,"Improve how to detect whether to show an upgrade notification

Previously, we were storing the previous Vimium version in chrome.storage.sync.

1. This is not correct because that value should pertain to the local Vimium's state, but it's
   synced across all of the user's installations.
2. We don't need to keep this state. The browser provides this information in the onInstalled event.

Prior to this change, the upgrade from v1.67.x -> v2.0 was detected as a new install because the
schema of the settings data model has changed as part of v2.0, and so an upgrade notification was
not shown.",False
fd70c26283e9f525988837e09718a778dd9124a7,2023-09-26 11:41:39,Phil Crosby,Run deno fmt,False
07af06435e5dfb97d6748ba63a74077e48faf132,2023-09-26 11:18:03,Phil Crosby,Remove debug logging prior to release,False
74cc6024dea828b2b1a5e6af221602b435e6b3c3,2023-09-26 10:42:21,Phil Crosby,Completions: remove unnecessary assert,False
660a02d5640cdee94809c09cf6117347b2c35dbe,2023-09-26 10:40:21,Phil Crosby,"Fix: typing enter quickly in the Vomnibar causes an error

This fixes a race condition: if the user types a character and hints enter quickly after opening the
Vomnibar, an error would occur because the completion results had not yet arrived back from the
backgroung page.",False
d9b88a4935efd7abf4fed3c5e8ccb2642e544cd7,2023-09-26 10:36:18,Phil Crosby,Completions: remove unused variables,False
ca0e61a86a797fc76fbe55ef4018ece71b79541a,2023-09-26 10:13:57,Phil Crosby,"Fix tab completion shortcut in Vomnibar

Tab should move to the next entry in the Vomnibar, but this was mistakenly broken recently.

Fixes #4313.",False
60cbfde81b4d6555e9917e2ea4d1511ac7577b77,2023-09-26 10:13:55,Phil Crosby,Update deno.lock,False
9c01200d90fa7a537a96bf322b0562df94fa386b,2023-09-22 11:15:45,Jianbo Wang,Make new search start near the latest selection,False
4112993a75910f160f5d7b6cbcf48c0c1a37ea76,2023-09-22 11:15:45,Jianbo Wang,Remove window.find,False
bdd4adb171474268da426454875af74de79d435c,2023-09-22 11:15:45,Jianbo Wang,Address some review comments,False
7c5535071b811c3d4ab2f165195a98d079ce9b9c,2023-09-22 11:15:45,Jianbo Wang,Run deno fmt,False
ee6e6de5b3ffaa5d419dde4421e40066940aae84,2023-09-22 11:15:45,Jianbo Wang,improve regular expression support,False
31f1332d09a545573a9f316e609fe493cd70c6a1,2023-09-17 10:06:16,Phil Crosby,"Fix createTab incognito and createTab window commands with no URLs on Firefox

Fixes #3675.",False
b2c53be27cb169091594a9ab9892e872580c3a56,2023-09-17 10:01:22,Phil Crosby,"createTab: use async so error messages are better surfaced

This helped me see that incognito was not enabled when debugging with Firefox.",False
f8d56273ed602a40c6f9b5722111c74a32c37c3d,2023-09-17 08:54:13,Phil Crosby,Options: move the default search engine higher on the page,False
805e552a0de6f624d158be1b397aadb76d68cb85,2023-09-17 07:23:17,Phil Crosby,"Look at title and aria-label attributes for next/prev link discovery

Adapted from #3752.",False
3d78122f8e805190d26b075c8e1948a1c37d8841,2023-09-17 07:04:19,Phil Crosby,Clean up goPrevious and goNext code,False
506aa96385d9a44a4a58cfd2e58ddc74cd366df8,2023-09-17 06:51:28,Phil Crosby,Completions: remove outdated comment,False
9e09b270436df70606d5bc674b88ec417e0eb544,2023-09-17 06:51:22,Phil Crosby,"Completions: add a completion engine for Brave search

This resolves #3851.",False
5aa296ce972eb5bd665f4d4a01f702942bc482ce,2023-09-14 12:47:39,Phil Crosby,Update code style guidelines,False
d2a8950d20534dc3605eedcb4940f2bf7bfa7461,2023-09-14 12:45:35,Phil Crosby,Run deno fmt,False
72e95cf32443ab84a322fe9423d30aefe29e274a,2023-09-14 08:44:50,Jianbo Wang,Correct rawQueryList initialization,False
06a2ceda88c1f557ab3062397ea158460224788f,2023-09-12 06:57:06,Phil Crosby,Link hints: add workaround for Google search link hints. Fixes #4303.,False
3cddc3e54b3d39ce653134989a977143b7306b22,2023-09-12 06:56:11,Phil Crosby,"Revert ""Link hints: don't show hints for spans which have clickable descendants""

This reverts commit 3192274b40572a26be5016e88aa29725cf160efd.

I'm reverting this because I just want to narrowly fix #4303.",False
3192274b40572a26be5016e88aa29725cf160efd,2023-09-11 12:18:34,Phil Crosby,"Link hints: don't show hints for spans which have clickable descendants

This is to troubleshoot the Google search results page. See #4303.",False
4244a6055444f80f8b8ba6c8e6d75f68697eb5e2,2023-09-11 12:18:13,Phil Crosby,Link hints: clean up code,False
d1110c1f3ca28088859e67f7ac96f72876292c71,2023-09-11 10:56:53,Phil Crosby,Remove obsolete TODO,False
e57fac45e8160c4e6a82941c1029cc6c825f8b07,2023-09-11 10:52:56,Phil Crosby,"Options: allow empty option values

Previously, an empty option text field would be reset back to its default value.

Now we have an explicit button for that.",False
53003e0170b5d0dd24f88ef10f4ae717627e2373,2023-09-08 10:42:58,Phil Crosby,"Options: add explicit ""reset"" buttons to reset option values

The previous behavior was to clear the field's contents. This was klunky because we had to include
explanatory text below each option. Also, it meant that you couldn't set any of these options to
blank (empty string).",False
3b87e6af2175b9dfa75e58198f9dbc2778623d0f,2023-09-08 10:29:03,Phil Crosby,Options: remove unused CSS classes,False
29cddeca6017e7f9697f84a46a12e42d53205247,2023-09-06 11:30:34,Phil Crosby,Tests: add a previous and next link to the link harness,False
5485990691a3196d924eeb48803a1395d640b249,2023-09-06 11:30:08,Phil Crosby,Completions: fall back to default search URL if the user has deleted theirs,False
1398f9b76ab792f5b2fbb3215bbf3fdf3b689068,2023-09-06 11:22:20,Phil Crosby,"Link hints: avoid an infinite loop if the linkHintChars char setting is empty

It's impossible for this to be empty in the current settings data model, but I'll soon change that.",False
e5d2dacfb94f6a4906fca450925b23d69f593740,2023-09-06 11:04:56,Phil Crosby,Options: log a console warning when the keyMappings setting has errors,False
1c8b76992027fc1da7e2baba842663bfa5435d5c,2023-09-03 10:08:44,Phil Crosby,Options: add tests for Commands.parseKeyMappingConfig,False
71dd56d737f0be5e7194fda388668e93902f2681,2023-09-03 10:08:44,Phil Crosby,"Options: refactor how the keyMappings configuration parsing works

The bulk of the work is now done as a pure function, which is easier to understand and write tests
for.

Note that this changes behavior in ways which I think were intended by design, but never completed:

unmapall and unmap will now unmap keys mapped by mapkey",False
8643fb6230d2e0adcbc7ff54a6a8ec20a7c9d25a,2023-09-03 10:08:24,Phil Crosby,Options: improve code,False
be232cdf69978e772c74438d80828f0267b10005,2023-09-03 08:59:44,Phil Crosby,Fix linter errors in tests,False
4b7d8abff1e9a0c78b232b825545e1983d283e08,2023-08-31 07:06:46,Phil Crosby,Fix linter errors in content_scripts,False
faa804315ec409d090989587d63da171ef8c0761,2023-08-31 06:55:48,Phil Crosby,Remove unused Function.curry,False
dd0f67ff1b48dd7d507e39a963e6f75139b6c25a,2023-08-31 06:55:48,Phil Crosby,Fix linter errors in lib,False
8d56da4b8d2c83c9a3673dacf02245b0d3071ad0,2023-08-22 11:12:28,Phil Crosby,Remove unnecessary Promise,False
d02d08b73322731c1f89628ef4c68f577583179e,2023-08-22 11:04:53,Phil Crosby,"Remove duplicate iconUrl when showing upgrade notification

I believe this getURL version is correct.",False
8a9958b332fa310971d34cafceb2393ba29869bb,2023-08-22 11:04:53,Phil Crosby,Completions: remove vestigial port argument to cancel(),False
eff97b2ffd87068c62ebf57c911f2e1a641d94da,2023-08-22 11:04:50,Phil Crosby,Fix linter errors in background_scripts,False
113694e8e81701716be0792b64998b3dc5c64dc4,2023-08-22 10:37:31,Phil Crosby,Reference the correct PR in comment,False
31af27bb9c362792bc531df8b0865dfb87afa36b,2023-08-22 10:35:58,Phil Crosby,Completions: fix switching to tabs,False
08d9fb3cad3bee9aa26a59174a2047260219735c,2023-08-22 10:33:02,Phil Crosby,"Completions: fix sending queries to custom search engines

The logic to send the user's query to a custom search engine was broken.",False
eaa687d50a0df4e88f9922f77e2e779a434aba19,2023-08-21 07:00:11,Phil Crosby,Allow a count prefix for closeTabsOnLeft and closeTabsOnRight,False
67a7485af8535905c5ce1a7221530d482fea112c,2023-08-21 07:00:11,Phil Crosby,"Commands: allow modes to receive a null count prefix

This is so we can distinguish when a count has actually been given by the user, vs. not.",False
8fbd4b7e857afd71a77b95d12d07ea8cdc226258,2023-08-13 05:25:17,Phil Crosby,Commands: add a RegistryEntry struct; use it for documentation,False
ab293bc083a2cdd120b47fe0e2e21ee8ea28c978,2023-08-13 05:00:59,Phil Crosby,Commands: improve code for closing tabs,False
2a4477cee248abf05a52a980c921036a8a43571b,2023-08-12 09:53:11,Phil Crosby,"Initialize the extension in the body of main.js

This resolves an issue where the extension would get into a bad state after disabling and then
re-enabling it in the Chrome extensions page. The keymapping for commands would never get written to
storage.session, and so no keybindings would work.

This issue did not appear to manifest in Firefox for some reason.",False
bb4d0a49901dce32c0c7634ad5a614b895e19c2e,2023-08-09 10:21:13,Phil Crosby,Completions: complete some TODOs,False
767b364bc808548c687259dc10952db8b32a8d38,2023-08-09 10:21:13,Phil Crosby,Completions: remove now-unused syncOnly behavior from completion search,False
a03618d4ca08e16ea6f3677961285c7fba3e6dc6,2023-08-09 10:21:13,Phil Crosby,"Completions: refactor EnginePrefixWrapper

I didn't test this functionality, but made the naming of the transformation function clearer.

It looked like it was being called by completion.js, but it wasn't due to different name casing.",False
00cc8fbab3627f01784fe0103dc8373981717974,2023-08-09 10:21:13,Phil Crosby,"Completions: refactor/remove Vomnibar's BackgroundCompleter

The name of this class is confusing in light of all of the other completer classes we have
in this extension, so I folded the methods into the VomnibarUI. This also reduces the
amount of state required in the Vomnibar class.",False
018110367315cdd29c08ab4add79ea7b74e70503,2023-08-09 10:21:13,Phil Crosby,"Completions: reinstate auto-selecting the first result in a custom search

I lost this during the refactor.",False
62ae28206c95bfd5534326abb60bcf94ae2688d9,2023-08-09 10:21:13,Phil Crosby,Completions: remove usage of lastResponse,False
837372d25d730b470aad13f6886357387fa04c03,2023-08-09 10:21:13,Phil Crosby,Completions: remove unused parameters and methods,False
56445bc9f74f95560763d599841420b963a8f9cf,2023-08-09 10:21:13,Phil Crosby,"Completions: issue queries without delay in the Vomnibar

Previously we would wait 150ms before sending a query to the background page, to save CPU on each
keystroke. I doubt this behavior is necessary or helpful. I notice Chrome's URL bar does not delay
before returning results.

This makes the UX noticeably snappier in my usage.",False
fd0c1ce8ac5823656d772672648557cd6659e07c,2023-08-09 10:21:13,Phil Crosby,"Completions: remove the DummyCompletionEngine

It doesn't look like this is adding value to the code anymore.",False
6d72c36dc473e3048cdd02ba100e198abc4d47d9,2023-08-09 10:21:13,Phil Crosby,"Completions: remove post-processing of search results

I'm not sure what this functionality does -- it's not documented and I couldn't grok the use case.",False
a6f3577beaa7dca2f2eeb84a8af7987906ba5340,2023-08-09 10:21:13,Phil Crosby,Delete now-unused JobRunner,False
eaf37269de6d89c11af358af460e96ac2a5528f4,2023-08-09 10:21:13,Phil Crosby,"Completions: remove VimiumReset from vomnibar HTML

It should be unnecessary because we display the Vomnibar inside an iframe.",False
57057222c047f5dacb81ea74bd11e4aa61d0ab6c,2023-08-09 10:21:13,Phil Crosby,"Completions: remove caching of previous completions in MultiCompleter

I don't think this is adding any utility. The expensive suggestions to compute
are the ones fetched from the network for a user's custom search engine, but those
results are already cached in CompletionSearched.",False
253877a1586b3304fdb8da689af4edff110529d0,2023-08-09 10:21:13,Phil Crosby,Completions: make Suggestion into a struct and document every field,False
d8b4a2dfae3fe37f16b962ae631a048b0345f535,2023-08-09 10:21:13,Phil Crosby,"Completions: remove highlightTermsExcludeUrl, which seems to be ineffectual",False
57b6ff20322ee55f2ff24cee822ed77d180007e6,2023-08-09 10:21:13,Phil Crosby,Completions: rename Suggesetion.type to description,False
adaea6125fd6291d4d7c252177f2ab7b02957a3c,2023-08-09 10:21:13,Phil Crosby,"completions: remove last use of ports for background page messaging. Hooray!

Now the entire extension is using only chrome.runtime.sendMessage when communicating
between context scripts and the background page.

UI Components still use ports for communicating between content scripts and the UI component's page.",False
245180732641fde63ad39f8b008ab8be08bd32b2,2023-08-09 10:21:13,Phil Crosby,completions: implement vomnibar's refresh() and cancel() using sendMessage,False
fdd02280f4a6b32786a864295855e40520e00151,2023-08-09 10:21:13,Phil Crosby,"Completions: only use the custom search completer for custom searches

For simplicity.

This removes some functionality where if the user has a tab already open with the result of a
particular custom search, that tab won't be shown in the Vomnibar search results. I think that level
of UX polish is not worth the amount of code complexity it incurs.",False
2666a706000a6b7d4aec83bc2749bc7bfa23b794,2023-08-09 10:21:13,Phil Crosby,Completions: add unit tests for SearchEngineCompleter,False
e56e3c04a318d8babe102d3c24e71dea45a9aca8,2023-08-09 10:21:13,Phil Crosby,"Completions: rewrite how SearchEngineCompleter works

The logic here was complicated and difficult to follow.",False
64027ad7b5f6d8635aa25f97c53a91985b9bd867,2023-08-09 10:21:13,Phil Crosby,"Completions: refactor the Vomnibar UI; use ports less

This removes the need for one message to the background page (keywords) and simplifies the code.",False
64bd737ab1f26a9711b9fb43bd23275fe456f411,2023-08-09 10:21:13,Phil Crosby,"Completions: move UserSearchEngines into utils

The Vomnibar will use it",False
6078d77c80875a44cf9d5da13ff3ba22f2e1d27b,2023-08-09 10:21:13,Phil Crosby,"Completions: improve and rename SearchEngine, add tests",False
a7d247fd084f1642e2b1c22aeccbf715eb9d4de7,2023-08-09 10:21:13,Phil Crosby,Completions: fix unit tests,False
03ccc33d0a0f34e62fd0b569f814f082888ef538,2023-08-09 10:21:13,Phil Crosby,Add a TODO,False
f51627cfc2d461e1ee1def974dfb006ab7823c24,2023-08-09 10:21:13,Phil Crosby,Rename a variable,False
6bdba1efded9ea7eb21b34dd22170bc4ac38304f,2023-08-09 10:21:13,Phil Crosby,Completions: use promises in Multicompleter,False
911026db48d2aa85c814a83a3d9baeaa111f16a7,2023-08-09 10:21:13,Phil Crosby,Completions: use promises in TabCompleter,False
05bdc3e71978537f80271db1eaeb0336389846b1,2023-08-09 10:21:13,Phil Crosby,Completions: use promises in DomainCompleter,False
6805a649be4b4b62c7796f1d9d1d42206b387a1c,2023-08-09 10:21:13,Phil Crosby,Completions: use promises in HistoryCompleter,False
e545088224e37a6d3bdc292b7ba2970d1eb8414e,2023-08-09 10:21:13,Phil Crosby,Completions: simplify how a suggestion gets opened,False
93759fb448e7dc4e98ba4d11665ed0467bd5c19a,2023-08-09 10:21:13,Phil Crosby,Completions: begin using sendMessage rather than ports,False
42457bff8a7ec940aa03fe94c0d5a23404806bd8,2023-08-09 10:21:13,Phil Crosby,"Completions: clean up bookmarks completer, use promises",False
b3ed63090ba2e5d22bba4e3de1d8388ebcf9fb05,2023-07-24 01:11:05,Phil Crosby,Find history: improve code,False
bf0c2efd0cc46c1ff7ea6d707762faa959498e7d,2023-07-24 00:57:41,Phil Crosby,Find history: remove outdated workarounds,False
c85940642292f2c5edd0fd41397d6d866041d488,2023-07-24 00:52:48,Phil Crosby,"Make find mode history work when only using private/incognito windows

Fixes #3854, #3614",False
eb1e9ef14675acfce5ef236b5fd2092497e83f8c,2023-07-23 23:56:55,Phil Crosby,"Remove obsolete version check for escaping JavaScript URLs

The min Chrome version is now much higher than 46.",False
f8c52aa4543f74c8f34fbb0059a17eb72fac0621,2023-07-23 23:30:26,Masaki Kobayashi,"Decode user JavaScript regardless of the existence of whitespace char in it

See #3944",False
f0ae243a1ce981338a117b6fea33c22716ab6dc4,2023-07-23 02:42:34,Phil Crosby,Vomnibar: improve code,False
5e6ed0d66021bae723077389ef79a6c06b6c109f,2023-07-23 02:37:51,Phil Crosby,"Add vimiumReset CSS class to our UI component containing div

The page can easily hide our UI components otherwise. This was the case with thomaskinkade.com,
where this rule in their CSS resulted in our empty container divs to have display:none:

div:empty {
  display: none;
}",False
4c0b91fd30960a9ef47035882e81d8eabaff63c8,2023-07-22 12:00:34,Phil Crosby,"Fixed a minor handler-id assignment bug

Resolves #4005.",False
50238b1bfbe749d08c0a3789ced981070ef4dfce,2023-07-22 11:38:06,Phil Crosby,Add notes for contributors to help them empathize with maintainers,False
7998fe639117364bbf49905327606d4c45019550,2023-07-22 11:15:24,Phil Crosby,Remove defunct setting,False
79a0bd944fbeaee1d53d5c6605dca01f57bf2ece,2023-07-22 10:53:01,Riley Carter,Contributing: Update puppeteer version,False
faeb5bbc9cb215d15aa0faa390f6ca5da3ec17e9,2023-07-22 10:52:28,Phil Crosby,Update deno.lock,False
33ec887acb7acb6595a697c6061164a29729b946,2023-07-21 06:06:02,Phil Crosby,Simplify the Vimium upgrade notification code,False
e07595c35b280fa137a40220fd277db718bfd6f1,2023-07-20 05:50:10,Phil Crosby,Don't error if jumping to the next match when no search has been performed,False
70603d18d4f986878097836d6563879d1df49d5d,2023-07-20 05:50:10,Phil Crosby,"Fix a race condition in the help dialog

Showing the help dialog would occasionally fail with ""browser info not loaded"".",False
faa52644a98c529ae63564c9bd81804abcf5422c,2023-07-20 05:50:10,Phil Crosby,Link hints: improve code,False
698f722b206e6737933ec6e0a430e54c7eb075a5,2023-07-20 05:50:10,Phil Crosby,"Link hints: get image maps working again

Some of this logic was in #3512, which never got merged before the migration away from coffee script.",False
7081a9ab43bf5b33317b6b9a1163ffe6a7ecf72e,2023-07-20 05:50:10,Phil Crosby,Link hints: add image map to test harness,False
848c2544cd89403eddbd4eba04de3bc9c1e33bf5,2023-07-20 05:50:10,Phil Crosby,"Link hints: use the LocalHint data structure. Fix function names

The data types being operated on throughout this file were undocumented, and the function names
operating on these data types were really confused. This makes the functions clearer.",False
7d761f2759789ddcd90aeb198d3ce93bc0793a83,2023-07-20 05:50:10,Phil Crosby,Link hints: improve code. Phew!,False
a97e209bb88f8a6eb28232772743859531ea87a9,2023-07-20 05:50:10,Phil Crosby,Link hints: improve code,False
231644487ea43010f9419fcfe2f3d90e716d6854,2023-07-20 05:50:10,Phil Crosby,Link hints: improve code,False
95170cd3d3f868fcbea5e8199d160ad910efbe78,2023-07-20 05:50:10,Phil Crosby,Link hints: remove unused rect property on hint marker elements,False
80827456448f04d7cca00db74d70ea9c6efa25e2,2023-07-20 05:50:10,Phil Crosby,Link hints: clean up the tests,False
451880183c5b25b54b48bf4fd210ce8578ddc2e6,2023-07-20 05:50:10,Phil Crosby,Link hints: remove an unnecessary return statement,False
d86897b873af018ca71fd954069d2625cffef057,2023-07-20 05:50:10,Phil Crosby,Link hints: refactor getNextZIndex,False
1253c3cadda7b6682770c0b6aac6e00d97a8a998,2023-07-20 05:50:10,Phil Crosby,Link hints: clean up code,False
b8630d1eb023f7dc90e03b4b0ca854610ced6589,2023-07-20 05:50:10,Phil Crosby,Link hints: Fix rotate hints,False
45a226cd63eb749ed0824816b97e8df55a377e12,2023-07-20 05:50:10,Phil Crosby,Link hints: Resolve confusing case where renderMarker was called on non-local hints,False
a89702ca09ae1bc24e59d6a2fcac2d6ed63d9715,2023-07-20 05:50:10,Phil Crosby,Link hints: Remove showLinkText from HintMarker,False
376ca23bde3af47944c4486ba989e42a8d0bd55f,2023-07-20 05:50:10,Phil Crosby,Link hints: Remove localMarker property on HintMarkers,False
8b6221a4db21d12ee90012c999f895e655e2c709,2023-07-20 05:50:10,Phil Crosby,"Link hints: Rename localHintDescriptor to localHint

It was incorrectly named.",False
c2f9135bb385c8e61c589e0b96ca86ec19bc909a,2023-07-20 05:50:10,Phil Crosby,Rename DomUtils.addElementList,False
a75eae3fbd0aab63b817cfd34bf00d64916b07de,2023-07-20 05:50:10,Phil Crosby,Link hints: Make filtered hints work again. Refactor the data structures,False
cc68e681b4f71bb8d2667b9729319b58a3fc55ea,2023-07-20 05:50:10,Phil Crosby,Line length,False
32ee7065f294e806e6d5a8cccfa278508b746f9e,2023-07-20 05:50:10,Phil Crosby,"Remove Settings race condition in help dialog

The help dialog would sometimes access the userDefinedLinkHintCss setting before settings were
loaded.",False
3840741216def6bd91b0e8d5ce0a982c90ff1228,2023-07-20 05:50:10,Phil Crosby,Remove old TODO,False
444d655857f8e90799c96da98fda089972cdc392,2023-07-20 05:50:10,Phil Crosby,Replace confusing UIComponent settings message with Utils.populateBrowserInfo,False
8ab93bd6243aaf324bd1f6846bb93442801af905,2023-07-20 05:50:10,Phil Crosby,"Remove now-unnecessary clipboard.js

Also document focusing requirements of clipboard API.",False
3ecb44ce608d8bdfa85faf11b119e4fe34f8de9c,2023-07-20 05:50:10,Phil Crosby,Silence a Console warning in Firefox related to clipboard permissions,False
6b7111aa802e5fd4c8a110b6dfe2e5ed45c091ab,2023-07-20 05:50:10,Phil Crosby,Silence Firefox quirks mode warning on the Console,False
52c7f0246ab0ab00df3950af7601e2603f2433b5,2023-07-20 05:50:10,Phil Crosby,"Make find mode's HUD work in Chrome

Works fine in Firefox. This apparently got broken when I refactored how the data for
Utils.isFirefox() gets populated.",False
cb6c2c2624b0c9cd09fb31b277a05aabfe393676,2023-07-20 05:50:10,Phil Crosby,"Fix a bug where the HUD wouldn't auto dismiss itself

This was an async execution issue.",False
5013d8fff86bf25370443a4e79b689ddcc597b33,2023-07-20 05:50:10,Phil Crosby,"Fixes related to frame focus

1. The help dialog wouldn't show if triggered from a focused sub-frame
2. After a help dialog was shown, cycling through the frames wouldn't work, or could get into an
   infinite loop.",False
6a0849f37ef9321714f437e5ca0aa84788071e77,2023-07-20 05:50:10,Phil Crosby,"When switching frames, robustly handle frames which disappear",False
9cf424f99470eb4f4caf7ec1918692b3ca047f14,2023-07-20 05:50:10,Phil Crosby,Place the extension icon / action button in the Firefox toolbar,False
2b5a4af255b6fa1c40508a3ea0cc74a237cc9c83,2023-07-20 05:50:10,Phil Crosby,"Polyfill chrome.storage.session.setAccessLevel for Firefox

Firefox 115 has beta support for chrome.storage.session, but it's not useful until setAccessLevel
is also implemented, which hasn't yet happened.",False
3f40c7caa46f7981982441ede8512f19651299bd,2023-07-20 05:50:10,Phil Crosby,Made the debug logging less verbose,False
d821bda5ae4a6b6f7825c2b0358d8d3d9d88bc73,2023-07-20 05:50:10,Phil Crosby,Add a page for reloading the extension during development,False
000286adfc83d16796a58fffb34eaa2d7670925b,2023-07-20 05:50:10,Phil Crosby,"Raise the Firefox min version

This was recommended by web-ext lint because we're using the background.type key in manifest.json
which is present only in 112+.",False
48fe59b9b00752e2927e6d2f690ed1cdf8fec786,2023-07-20 05:50:10,Phil Crosby,Remove another Firefox window expando workaround introduced in #2800,False
1e155632fefe3bcdfb21b6b7985bd658c2a63a2b,2023-07-20 05:50:10,Phil Crosby,Update a comment,False
92afe608f90afba8235d31a3ed471eb0f84598d7,2023-07-20 05:50:10,Phil Crosby,"Clean up flashFrame function, remove Firefox shadowDOM workaround",False
fa2cc084ffe75ca98f198e5aec1ae3198ce4a05a,2023-07-20 05:50:10,Phil Crosby,Remove Firefox window expando workaround introduced in #2800,False
4e729d73c2f7c0993c10d65d073ac355ee405906,2023-07-20 05:50:10,Phil Crosby,"Install Vimium keydown listeners before the page's JS does

This was regressed as part of the manifest v3 refactor.",False
932d0481d06402d9c21bc102a3b8a9d23f6e7c0d,2023-07-20 05:50:10,Phil Crosby,Remove a TODO,False
f5a14083fe45049e0d5b06be5b4dcff9feacca39,2023-07-20 05:50:10,Phil Crosby,Add task to create a firefox-compatible manifest.json for development,False
8e3c529af78423fe37e94c404286313a7a8220a5,2023-07-20 05:50:10,Phil Crosby,Rework how we build a separate Firefox manifest.json,False
fc47fcdd9cfc2e31f6de6483008620ca3d063a4d,2023-07-20 05:50:10,Phil Crosby,Add a missing await when writing package files,False
94fe973925a68fbe198fab05c7d6d7b414724ad6,2023-07-20 05:50:10,Phil Crosby,Strip out comments in manifest.json when building a package,False
62c89dae2d4c5980f26d670ffbd720f9c7bd6be6,2023-07-20 05:50:10,Phil Crosby,Use extension ID from Firefox addons store when debugging,False
523d633ed10f3577b831e4e344eaed2f79a09e68,2023-07-20 05:50:10,Phil Crosby,Simplify the Firefox background script configuration,False
12fab224fb7cd3d5c799d7c44df9940c23e1f44a,2023-07-20 05:50:10,Phil Crosby,Fix line length,False
dd005f33b6dc04ca456035a6693bd451652a8fb4,2023-07-20 05:50:10,Phil Crosby,Remove TODO,False
a3534b950451c4fa38f6b79f2802745de582411f,2023-07-20 05:50:10,Phil Crosby,"Fix a bug in Chrome where link hints couldn't show on the Options page

Firefox was unaffected by this.",False
58440c4944a52bfaf14b4b19bc6cdbcda3f3a3f9,2023-07-20 05:50:10,Phil Crosby,Write the changelog for v2.0.0,False
92ad1386fd3b435e81b15e61958e0c0f3747626b,2023-07-20 05:50:10,Phil Crosby,"Fix an error when link hints couldn't be gathered from a frame

I noticed this error on a YouTube video page. It didn't seem to affect the UX, but the error
reproduced reliably.",False
eb2cf583c8bfc2e044ea520d59d9f07ab792af5e,2023-07-20 05:50:10,Phil Crosby,Limit URL change log spam from sites like docs.google.com,False
39e9d435011dd571e65876b6f97e717d22d616d8,2023-07-20 05:50:10,Phil Crosby,Properly set isEnabledForUrl in vimium frontend,False
9ff50e515803e79bc3fbccb690c387507ec22cf2,2023-07-20 05:50:10,Phil Crosby,Add a unit test for focus next frame,False
5b6ac6af6fb1cf1fe9dbacc90789ec597b6bfc25,2023-07-20 05:50:10,Phil Crosby,Don't generate link hints for windows which are too small,False
adedb72904fa9b6d8aa481ac301111d4cdac500b,2023-07-20 05:50:10,Phil Crosby,Improve code clarity,False
8c9904e2116403cd1dd6d98dd956187f30c7bb41,2023-07-20 05:50:10,Phil Crosby,"Ensure commands are loaded when the browser firsts starts

Previously Vimium would not load the user's key mappings because we only did initialization
onInstalled, rather than also onStartup.",False
563b462088a8c5a40c9b37e0de3dd9a977838deb,2023-07-20 05:50:10,Phil Crosby,"Remove window unload handler

I believe this handler was previously used to help the background page track the state of a
tab/frame. We no longer maintain that state. Now, it was being used to unload content scripts when a
page navigates. However, I don't think this detection was reliable (unload is not called in all
cases), and so we now instead disable Vimium's content script whenever an event (keystroke or other)
that we're listening for occurs.

Adding a window unload handler can throw an exception when the page has unload disabled via
Permission-Policy: unload. See

https://groups.google.com/a/chromium.org/g/blink-dev/c/38Dpu-uhwFc",False
d8b629743f18b78c495f67eade7ee43bcdc495fd,2023-07-20 05:50:10,Phil Crosby,Fix error when triggering link hints with a hidden help dialog,False
44a28e9ea8736de4d2aa66e13ac89e5c0117672c,2023-07-20 05:50:10,Phil Crosby,Fix an issue where link hints weren't shown in the help dialog (Chrome only),False
5d8f6a77993a213e6a5afda4a45965bc852a2c2e,2023-07-20 05:50:10,Phil Crosby,"In sendMessageToFrames, send only to frame specified by frameId

In Chrome (but not Firefox), this resulted in a race condition where the help dialog and the source
page responded to ""focusThisFrame"".",False
5ba4407ec080c856ace2d3e13d4cd4ae5397ede4,2023-07-20 05:50:10,Phil Crosby,Add a missing await when sending commands to tabs,False
65f5604d3f09cad45a2e5dc3f962c856e67bce2b,2023-07-20 05:50:10,Phil Crosby,Use await instead of chrome.storage.session.get callback,False
b72ed97395e207303dca251943206017ff7330bd,2023-07-20 05:50:10,Phil Crosby,Make a test page dark,False
fec41520e0a8de072d4823f4facbb9d3a33e7f22,2023-07-20 05:50:10,Phil Crosby,Remove a TODO related to executeScript,False
afb0ecdb817c34b90882b8590fe76b938ad00b95,2023-07-20 05:50:10,Phil Crosby,"Rework how sendMessage message handlers work

When using sendMessage, each listener now enumerates which message types it wants to listen to.

We now consistently use `handler` to indicate the message type in the request object, rather than
`handler` and `name`. Previously, `name` was used to indicate that a content script should handle
the message, and `handler` to indicate that a background script should handle it. This was
undocumented and confusing.",False
a8c84b2ef03f9353793af9c44ffd952df2a41e5b,2023-07-20 05:50:10,Phil Crosby,Log when a content script becomes orphaned,False
c7faed137c117a4461517e988309c140cc21f9d9,2023-07-20 05:50:10,Phil Crosby,Add debug log for background page messages,False
da1bd9e3c62af8c95936d45aece4a37344b52919,2023-07-20 05:50:10,Phil Crosby,"Add a logging statement for linkHints

In Firefox only, sending the message ""activateMode"" from the background page for
link hints results in the error

Error: Could not establish connection. Receiving end does not exist.

I couldn't figure out why this is. It doesn't affect the UX.",False
3b97f4491b60572f550e053e261d8efbea31e762,2023-07-20 05:50:10,Phil Crosby,"In Firefox, handle if a message sender's tab is null",False
754df2041a025f61be9300d4937a0f802ec6ae12,2023-07-20 05:50:10,Phil Crosby,"Work around a browser difference in the sendMessage API

Chrome doesn't currently support passing an async listener to chrome.runtime.onMessage.addListener.",False
015c49f51d6f0f1ce16c3442f18bf0337774c50a,2023-07-20 05:50:10,Phil Crosby,"Unload content scripts if extension gets unloaded

This detection logic had to be rewritten now that port.disconnect is no longer a reliable way to
determine that the extension has gone away.",False
5f70c60b8a4e6484eb4b9aca323a6a4e916078fd,2023-07-20 05:50:10,Phil Crosby,Remove some unnecessary return statements,False
2f8e21e60ae8893984dc93d99cd22c12277c9a7e,2023-07-20 05:50:10,Phil Crosby,Revert: util.debug = true,False
71bfd0880738053e0afd8041900bc63f08f6a0f6,2023-07-20 05:50:10,Phil Crosby,Improving old code,False
d131d3c047946463e094ffbf4dad8bd86767cf15,2023-07-20 05:50:10,Phil Crosby,Rename a variable that was misleadingly named,False
2a9cf06af6471f9973139c6befeb892fd29e9115,2023-07-20 05:50:10,Phil Crosby,"Add a timeout when retrieving link hints

In case any of these requests is abnormally slow.",False
ceaf5cfccc4823d5e8a4bc768c5cf005e65bf38a,2023-07-20 05:50:10,Phil Crosby,Improve the clarity of link hint event forwarding logic,False
ffacfc2a4292ac1f33734eef76b7ed563e3af5a1,2023-07-20 05:50:10,Phil Crosby,"Remove HintCoordinator.sendMessage

This was a low-value wrapper that made the code confusing to read about, since it's similar
but slightly different to chrome.tabs.sendMessage",False
8068b1010fd70c0e4ad1789e793fb6c0d41bf084,2023-07-20 05:50:10,Phil Crosby,Change parameters to match chrome.runtime onMessage,False
e1d61f027af38ec1840e95fe5208ac4b026fcfff,2023-07-20 05:50:10,Phil Crosby,Document why we don't inject content scripts on installation in Firefox,False
bb7d82b1f360ef3158b9bfc481e5e20cb84dc0e2,2023-07-20 05:50:10,Phil Crosby,Remove now-unused state,False
f383794101351655ce4ff3b2b3fea936d8466390,2023-07-20 05:50:10,Phil Crosby,Remove a defunct logging page,False
f9330a0f85917d94cded8c7506c25a1482553b5e,2023-07-20 05:50:10,Phil Crosby,Clean up how Firefox version detection is handled,False
96aeaa6fc013484953f65ef13c3e26376cb5c063,2023-07-20 05:50:10,Phil Crosby,"Remove an outdated Firefox workaround

We no longer support this old version of Firefox.",False
9d589882527aee06277c92198bc6585a48316e30,2023-07-20 05:50:10,Phil Crosby,"Rename isEnabledForUrl request

The new name better reflects what it's doing -- providing initialization data to the frame.",False
2d3a988d5ee1f114f0fe5bc23257d370970e138d,2023-07-20 05:50:10,Phil Crosby,Small cleanup,False
0634d9ec26c828e833cb771451f7e925818b6947,2023-07-20 05:50:10,Phil Crosby,Add Utils.pick to select a subset of object properties,False
d190c7a890548ac19fdf778ad8f772a108d0dd4e,2023-07-20 05:50:10,Phil Crosby,"Migrate away from using chrome.runtime.ports

Ports will now get disconnected by the service worker, so the difference between ports and
sendMessage is little. Just use sendMessage everywhere.

This is a large change.",False
1cc18a6503f8e6c87793dac928371115d20a95ff,2023-07-20 05:50:10,Phil Crosby,Add a link to the test iframe page,False
7d98631a246a966fc8be2c7527e1f6c72558ec1a,2023-07-20 05:50:10,Phil Crosby,Add unit test for background_scripts/main.js,False
76db643d923506736ab43885f0dab7344a4aceec,2023-07-20 05:50:10,Phil Crosby,Add a debug logging statement,False
90b5c3d8a1530c54b39494093861ae54d0a5e42f,2023-07-20 05:50:10,Phil Crosby,Silence a Firefox console warning,False
8b86f1b6ab69f5a067651450bb274ef3e5d17cdc,2023-07-20 05:50:10,Phil Crosby,Word wrap,False
c4996b83516b4cb0ea2e059cce98dd906973a83d,2023-07-20 05:50:10,Phil Crosby,"Remove code for tracking which frame is focused

Most of this isn't necessary anymore with the new implementation of nextFrame. UIComponents would
use this information to dismiss themselves when another frame was focused (see the removals in
ui_component.js), but I'm not sure this code was actually effectual in practice, and if so, we can do
without that functionality.",False
16fe08a77a833a9c120e93ab375135dd42f13911,2023-07-20 05:50:10,Phil Crosby,Implement nextFrame without keeping any state,False
0ebeec36ede8673988cf5f368c8706c355b2bb40,2023-07-20 05:50:10,Phil Crosby,Update some test harnesses,False
aa39641b07bf0051c36b45f7c5bc877f5ce90a50,2023-07-20 05:50:10,Phil Crosby,Log if vimiumSecret is ever incorrect,False
6ffe4cb4122b48bc6fbeb62334edcbab4e1be8a2,2023-07-20 05:50:10,Phil Crosby,Add Utils.debugLog,False
46d79d85ff4eb82d15aa95026f2a3ce43df2d8b7,2023-07-20 05:50:10,Phil Crosby,Update comments,False
ef205debe8abb1bbf11e686c144fbbac703f36ce,2023-07-20 05:50:10,Phil Crosby,"Add doctype to pages

This resolves a console warning in Firefox.",False
bc5ea0ad79b8d148eee8977a3f2e83d1e9ad2628,2023-07-20 05:50:10,Phil Crosby,Settings: fix a bug where you couldn't edit a field back to its default value,False
0051dfcd0149b1e195ce309e6a93ee08d20becd2,2023-07-20 05:50:10,Phil Crosby,"Silence an instance of the error ""Receiving end does not exist""

This happens when we send a message to a tab which does not have Vimium's content script running.",False
eb50e531ec809cce98718cec2dc3737c3a2c2f23,2023-07-20 05:50:10,Phil Crosby,Style improvements,False
a349f41f54ecd40f2d09e85ac220b141490fe278,2023-07-20 05:50:10,Phil Crosby,"Fix a race condition when installing key state mapping

Rarely it's the case that the normal mode has a null keyStateMapping, which causes all key presses
in the content scripts to throw an exception. That shouldn't be possible. These changes block
further initialization until keyStateMapping has been set.",False
888847c9825ab2d3d6c8cc94dd8ac675a66b5ae9,2023-07-20 05:50:10,Phil Crosby,Remove an outdated TODO,False
685dd86acd4cf0fdea753e32f0dc5c563ccee2f8,2023-07-20 05:50:10,Phil Crosby,"Marks: Re-enable, convert APIs to promises, add tests",False
96fa48d163de451069880b489da1500d86b3534c,2023-07-20 05:50:10,Phil Crosby,Fix test stub which corrupted other tests,False
e05266e4fce0d986db76889dba9fb0d0fe3e0de2,2023-07-20 05:50:10,Phil Crosby,Pull TabOperations out into its own file,False
838421403b0f23dc7cb494c03a6a29c9db009a5c,2023-07-20 05:50:10,Phil Crosby,"Update deno fmt options for Deno 1.34

deno fmt is issuing a deprecation warning.",False
8c6a5ce3fca8e75d5f4060651a6127e4ce2efb88,2023-07-20 05:50:10,Phil Crosby,"Delete vomnibar test

As written, these tests can't be run in puppeteer, and they're instrumented in a complex way. When
we rewrite the vomnibar, we should make it easier to test.",False
901593f6390a784e9f75a696658e9af34952b247,2023-07-20 05:50:10,Phil Crosby,"Completions: Update Google, Maps, and YouTube to use JSON end points",False
38a3dfe411379dec308fb0b1d618282fdfb1aabb,2023-07-20 05:50:10,Phil Crosby,"Completions: Use fetch API rather than XMLHttpRequest

XMLHttpRequest is no longer supported by background pages in manifest v3.",False
d24462ec1b2ed9f8c1a9c745315a43d5039f3fcf,2023-07-20 05:50:10,Phil Crosby,"Remove unnecessary return statement from nextTick

This looks unnecessary to me.",False
a37241684958e4eba6ef7a83a08dfd330454cba6,2023-07-20 05:50:10,Phil Crosby,"Completions: Fix broken Amazon completion

At some point the old API we were using changed. Use the current API.",False
1bbd6e7e2e77122a176892bf4232998d0d389b25,2023-07-20 05:50:10,Phil Crosby,Completions: Add parsing tests,False
ba31f9990d68b512c19502a5c5b966d3e9dc9808,2023-07-20 05:50:10,Phil Crosby,Completions: Add comments,False
6645b0f70fdb56695c3bf72c0c88c1af9b69e7ee,2023-07-20 05:50:10,Phil Crosby,"Completions: Remove broken UpToDate integration

The website has since moved.",False
5fcd4f5b72193ca2046061365daa3ce4b7169e26,2023-07-20 05:50:10,Phil Crosby,"Make user link hint CSS work in manifest v3. Add scripting permission

This also re-enabled injecting our content scripts into existing tabs when the extension is
installed, which was disabled as part of the manifest v3 migration.

The scripting permission is required because the executeScript and insertCSS APIs were moved off of
chrome.tabs to chrome.scripting.",False
733e36420df526422e75c3816e1d99eac86b6989,2023-07-20 05:50:10,Phil Crosby,Commit deno.lock file,False
0c732ad9b3802f7df5daa86ad3f26503bfc0caa8,2023-07-20 05:50:10,Phil Crosby,Add manifest v3 manifest.json edits for Firefox,False
8dc0f989dc3734ad1c1746c2297705ba78eabfce,2023-07-20 05:50:10,Phil Crosby,"Change default value for setting waitForEnterForFilteredHints from false->true

It's supposed to be true only for new users, but I'm not sure this migration code actually worked --
settingsVersion wasn't being written previously to chrome.session.sync, so this migration always
ran.

I'm going to change the default value for this setting to avoid confusion in the code. Let's see how
it affects people in the wild.

See #1950.

Also see https://github.com/philc/vimium/blob/99868023af1635350680c148f6ad98a2b2136895/lib/settings.js#L266",False
02bafaf4729f141512765ee8de8d657d2909e797,2023-07-20 05:50:10,Phil Crosby,"Wait for settings to load when handling messages on ports

This issue manifested only on Firefox.",False
7c44f3cd5a3667f149bdbf30165a8ed23adf2f6c,2023-07-20 05:50:10,Phil Crosby,"In Firefox, use chrome.storage.local until chrome.storage.session is supported",False
288bcfe368f7483a69ad9b4a8e52e103dfb3e417,2023-07-20 05:50:10,Phil Crosby,"Handle middle click on ""options"" link in the help dialog

Prior to this, middle clicking on Options would open just the help dialog template HTML page in a
new tab.",False
e8510dbafddf8f106918be3fd764df02d0900480,2023-07-20 05:50:10,Phil Crosby,Manifest v3: change options_page to options_ui,False
29354d6bbe582149e35b0e214813aa9a0db2f495,2023-07-20 05:50:10,Phil Crosby,"Add migration for pre-v2.0.0 settings

They used to be stored in chrome.storage.sync with the values encoded as JSON strings. This isn't
necessary; we can store the values as plain objects.",False
8650439d52b6b912f4dbde5faf2663e0705ddaba,2023-07-20 05:50:10,Phil Crosby,"Update version number to 2.0.0

I'm incrementing the major version because manifest v3 is a major change to many features, and
because the user's settings data is changing as part of this restructuring.",False
a90510a2857e25422a71ce232e2938f87baf704f,2023-07-20 05:50:10,Phil Crosby,"Settings: store each setting as a top-level key

This is how it was prior to the settings rewrite. I see no major reason to change it, so I'll keep
using the same schema for now.",False
1a4c095ef16dadcd9b537fbf1382fc4aef7471fc,2023-07-20 05:50:10,Phil Crosby,Implement more storage APIs for tests,False
d5aac679d78c99cc0eb616cbda40a354078bd146,2023-07-20 05:50:10,Phil Crosby,"Implement chrome.sessions in our test chrome stubs

This was defined previously, but had no effect because it was named incorrectly and in the wrong
place.",False
0de8ea1a096ea776c03c4776555652e919010ccf,2023-07-20 05:50:10,Phil Crosby,"Update minimum Chrome version to 102, for setAccessLevel",False
a7518153a19ed0df3614379df770a3535eb1091f,2023-07-20 05:50:10,Phil Crosby,Use storage.session for findModeRawQueryListIncognito,False
558b00ddc370ea5fe115b1aac89ec131e3f2d148,2023-07-20 05:50:10,Phil Crosby,"Rename refactor, for clarity

It would be nice to remove this abstruse utility function.",False
24d05b0a3372c30aeaa2664c99803155fc6cce5b,2023-07-20 05:50:10,Phil Crosby,"Use storage.session rather than storage.local for Vimium's session state

storage.session is a new API in Chrome 102 (2022) meant for this use case.",False
4ebb81efa2d8a5ad168eb65d5df6322ef770877d,2023-07-20 05:50:10,Phil Crosby,"Remove use of installDate

We never made use of this.",False
5394584851ce43794a1a48e3df7b5e05801ccea1,2023-07-20 05:50:10,Phil Crosby,"Options: Remove some unused code

Introduced with the settings refactor",False
d7b0828796dade6f2a3f5022f7e7346d792f77ac,2023-07-20 05:50:10,Phil Crosby,Options: Re-enable user's custom CSS on the options page,False
c2a7a4919bcef0f4acb1ade6ca70a55d0a94a548,2023-07-20 05:50:10,Phil Crosby,Add minor cleanups and TODOs for migrating settings,False
c94ef1d75924ffe20d7c6e46a844c7cd66bda7fc,2023-07-20 05:50:10,Phil Crosby,Fix the exclusions tests,False
b213b332755bc75dd113dc8c88f5b9542e01e8b3,2023-07-20 05:50:10,Phil Crosby,chrome_stubs: Fix incorrect implementation of chrome.storage.sync.get,False
1f1676eb8734674e5c486806a717b40876a0e01e,2023-07-20 05:50:10,Phil Crosby,Disable logging messages during tests,False
6a998c5e6b06aecf26d94caa84db0e0628070c4e,2023-07-20 05:50:10,Phil Crosby,"Don't modify Settings in commands.js

This was causing an infinite loop in the tests.

This was being used as a communication channel to the frontend scripts, but chrome.storage.local is
the right solution for that, and is already being used by commands.js",False
ab9af9d0fa612e52dbe9cd7f1e2ba84ee8f652a2,2023-07-20 05:50:10,Phil Crosby,Options: Move shared exclusion editor code to a separate file,False
7665ed439faa392f2ef9082ed55d6808129eff39,2023-07-20 05:50:10,Phil Crosby,Options: Change button caption casing to match Chrome's,False
81aae809841bc5619c67c35ccb25b13b6e357e48,2023-07-20 05:50:10,Phil Crosby,Options: Use `this`,False
6dcf539e1c199e0580727ba2ca64b44aaee27fff,2023-07-20 05:50:10,Phil Crosby,Options: Prevent the page footer from covering some options,False
350bc121a5f4ad0b49b41ef749d1c7550db7eed5,2023-07-20 05:50:10,Phil Crosby,"Options: Enable the ""save"" button when a user types into a settings field

This was a regression from the options.html page rewrite.",False
ebf36e085f334ae7afdd4c9a1a71e6b9e9bef63d,2023-07-20 05:50:10,Phil Crosby,Rebuild key mappings for open tabs after settings are changed,False
7b37bc17c6e97f4debe8ed708ed2e4d5d7d47675,2023-07-20 05:50:10,Phil Crosby,"Emit an event when settings change, and rebuild Exclusions",False
f7f81888b0ce5323b3567b5f3d8b97fabb1faa3e,2023-07-20 05:50:10,Phil Crosby,Action page: Implement. Remove popup.html,False
ed171099c00aa06e1ec1c64c44cf2acae739f252,2023-07-20 05:50:10,Phil Crosby,Options: Ensure the help text doesn't run together,False
14940fca5f115cc4940bd1e69b11301aa26c17c0,2023-07-20 05:50:10,Phil Crosby,Options: Disable the Save button by default,False
1930eb4dcd356fbb857d2d5ad2b2ddafef027c5a,2023-07-20 05:50:10,Phil Crosby,Remove some unnecessary destructuring,False
2010707dac3ac1f1c1277b1a02ceb3bf4bf1a52a,2023-07-20 05:50:10,Phil Crosby,"Action page: Change how we build the toolbar icon

Drawing to a canvas requires changes for manifest v3, and this method of using files is conceptually
simpler.",False
cbb61d8d17eb79354f6bd9f1784642d40a28128e,2023-07-20 05:50:10,Phil Crosby,"Action page: Rename action icon files, add some new sizes",False
d66edf12c1916e7e595fed1cdc193cadf4f1cb62,2023-07-20 05:50:10,Phil Crosby,Options: Simplify the exclusion rules HTML template,False
b2e57208e3ed6b20f9bdf8192b4170d7f2c12b0d,2023-07-20 05:50:10,Phil Crosby,Options: Move the popup functionality out of options.js,False
fdd336ad567954de9dbc0bc4875f625ec3a13e8e,2023-07-20 05:50:10,Phil Crosby,Options: Rewrite the exclusions UI,False
b01bcb0410aeefc566a8644910ce599fe2c2a3ce,2023-07-20 05:50:10,Phil Crosby,"Options: Remove the $ shortcut

It's a bit confusing because it's doesn't map to querySelector, as jQuery does, and it's
unnecessary.

I didn't remove all uses because I will rewrite the exclusions options UI.",False
57978f5eedabc11c7ea6cff89b19659f9b277b6b,2023-07-20 05:50:10,Phil Crosby,Wrap long lines,False
7e4a28775a083afd21273a2b6a911eefdef00808,2023-07-20 05:50:10,Phil Crosby,Minor cleanups to completion_search,False
cf1737704eb8e291c618c9420a418f369ce2c2d6,2023-07-20 05:50:10,Phil Crosby,"Remove AmazonJapan completion engine

This is the completion engine that's unlike the others: it's the only engine that has a specific
regional implementation. If the vanilla Amazon completion engine doesn't work, we could make it
smarter to detect the correct amazon based on the browser's current country.",False
90868fb102c87adf1c8631b46506b8a1e678d5b8,2023-07-20 05:50:10,Phil Crosby,Remove unused variable,False
306c8efe70dd0009f12f8507a8401455bef59f0b,2023-07-20 05:50:10,Phil Crosby,"Logging: Don't fetch the git branch name from disk

I'm unsure what the utility of this is, and I can imagine it looking fishy to a Chrome Store
reviewer.",False
9348c5134c3570c536d487c006ea78c3cc2fef5c,2023-07-20 05:50:10,Phil Crosby,"Use relative paths in background.js

This allows the file to be run in a REPL",False
965402597afe8a66f0fc0229fbf9d954b3751551,2023-07-20 05:50:10,Phil Crosby,Manifest v3: fix showing favicons in Vomnibar tab completions,False
c368b25fdf4a6131e48afb9bfe5bda7c31a9838d,2023-07-20 05:50:10,Phil Crosby,Fix a background script error on page load,False
c6d0bc96825716808de8f7081b935086dcb927c8,2023-07-20 05:50:10,Phil Crosby,Run deno fmt,False
3b87864e7b2f8d4e8f0cd449fde7896dfd972517,2023-07-20 05:50:10,Phil Crosby,Run deno fmt,False
e28a5fc23c028a9a20494ad49920c759e19ac8f7,2023-07-20 05:50:10,Phil Crosby,Bump shoulda.js version,False
5caa3b807b9266fdb72a7f2c49d043d96b3fc00f,2023-07-20 05:50:10,Phil Crosby,"Stub window.chrome inside of iframes that get loaded during dom_tests.html

Naturally, we need to do this. I'm not sure when this broke. Maybe puppeteer didn't previously
isolate the parent's window object from the iframe's.",False
81691b15d3cd29d3e011f6d7836ea72894c745f3,2023-07-20 05:50:10,Phil Crosby,Various fixes for our dom test environment,False
6e8fa0793c819a2f5f650ded40d7debcb9ccbb5d,2023-07-20 05:50:10,Phil Crosby,Remove two unused util methods,False
ce897cd2023ee805aa97cf8ceeb4f37a19166601,2023-07-20 05:50:10,Phil Crosby,"Disable vomnibar_test.js

I couldn't get this working in Puppeteer. The testing approach needs to be rethought.",False
cf8d25211b9ff7f5ecc619e784fb2b4abb663b3e,2023-07-20 05:50:10,Phil Crosby,Small formatting change,False
2233b890d86c5e9eed02212fd9ed0e1261ed6883,2023-07-20 05:50:10,Phil Crosby,"dom tests: report page loading errors, and fail the tests

Prior to this, a syntax error in one of the JS test files would silently get ignored and those tests
wouldn't run.",False
0173e75ca85af1448f990fc664018d44e76bfd59,2023-07-20 05:50:10,Phil Crosby,deno fmt make.js,False
21cb28d469a514abae6cd9ef8ae6ad2ca9dd82ef,2023-07-20 05:50:10,Phil Crosby,Update Puppeteer version,False
4221b48767e8b66502da65052f8c73044a8d14b6,2023-07-20 05:50:10,Phil Crosby,Update some tests to work with new Settings,False
70b70efd56bfc88abad4d0dc717791cdea4abb77,2023-07-20 05:50:10,Phil Crosby,Move Commands.init into the service worker setup function,False
2f44e4bea901cdcd6a1af3aad12a3bdc38d16aa7,2023-07-20 05:50:10,Phil Crosby,Rename settings2.js to settings.js,False
482d29dfa93962489b1155d333bedef01557b648,2023-07-20 05:50:10,Phil Crosby,Migrate to new Settings API,False
20912c01e4ff49392f3b66599be9635414329812,2023-07-20 05:50:10,Phil Crosby,Update unit test stubs for chrome.storage.sync to use Promises,False
8fe8c9c62551011781e4f92be23d42119f295e14,2023-07-20 05:50:10,Phil Crosby,"Manifest v3: Rework how the upgrade message is shown

This logic should only be run in response to an install event.",False
2e6471b82f9d9fd14353881c4eca751cf1f464e4,2023-07-20 05:50:10,Phil Crosby,Remove unnecessary reference to Settings.defaults,False
b8980d94fff352133eaef92477764ae276d1edcd,2023-07-20 05:50:10,Phil Crosby,Exclusions: remove the need for a local cache of the exclusion rules,False
bf210d3066cd005c3b0602ba8197501e279c6bd8,2023-07-20 05:50:10,Phil Crosby,Migrate to new Settings API (WIP),False
c2e255ccd56071bd271a0009c30d585b1b1f0531,2023-07-20 05:50:10,Phil Crosby,Manifest v3: add TODO to re-enable exclusions updating after settings change,False
d219f337041a1e23ae7144af09961f0f4f76286b,2023-07-20 05:50:10,Phil Crosby,"Manifest v3: For now, disable executing content scripts on install

Not available in manifest v3",False
4130942519bbaf8bb77e2eaba6e27c5a64a4c25f,2023-07-20 05:50:10,Phil Crosby,Call Settings.load in background page,False
c224311b18e910af5fe7f742f7609f2b45ae98a5,2023-07-20 05:50:10,Phil Crosby,Remove injectUserCss await on Settings,False
5dbc010c94fe9e4bdf5aa32fd3d5757f8ee15db0,2023-07-20 05:50:10,Phil Crosby,"Wait until settings are loaded before initializing vimium frontend

I'm not sure if this will have any negative performance repercussions, but for now it simplifies
things.",False
3e4194a5e83e0002f4318d7f349fd7657b758476,2023-07-20 05:50:10,Phil Crosby,Manifest v3: Disable marks mode,False
4a720e7388792c47e9e0bda308a5909b3e9b09b3,2023-07-20 05:50:10,Phil Crosby,Options: Rewrite settings.js and the options page,False
123e3b575bddfbd9f054a4eca0376579c8731db0,2023-07-20 05:50:10,Phil Crosby,Options: Remove reference to Vimium Labs,False
ed5e1c6d0d6922331ba87d5881294c559c973b51,2023-07-20 05:50:10,Phil Crosby,"Options: Remove the ""advanced"" toggle

I think it's unnecessary to hide the advanced options on page load. The advanced options are clearly
marked as such. It's an usual UI pattern and users have been tripped up by this in the past.

This removes complexity.",False
1b6f79e0768204472f7001e6af0b4beb02e59624,2023-07-20 05:50:10,Phil Crosby,"Manifest v3: basic support

Most features appear to work. Exceptions:

* Browser action
* User's custom CSS
* favicons in vomnibar history
* Options page",False
4ed2ca96de09f9fa74202a7984677662e4b214b1,2023-07-13 02:50:29,Phil Crosby,Bump version to 1.67.7,False
48d87be0e2a11d28c59bd1272528fb49eefb0964,2023-07-02 10:26:09,Phil Crosby,deno fmt unit_tests,False
7953c9bb61aea0a089e54f58a21d21bb28d6a614,2023-07-02 10:26:09,Phil Crosby,deno fmt dom_tests,False
e0b6b091942057e3d01adf20a30f57ef624ad3b7,2023-07-02 10:26:09,Phil Crosby,deno fmt pages,False
1bfe947968acde961d9fe9b874f08656be15d7d1,2023-07-02 10:26:07,Phil Crosby,deno fmt lib,False
0b5f517dd6b6005a89f310517e6d5b1af439f4e4,2023-07-02 10:25:40,Phil Crosby,deno fmt content_scripts,False
cfafef2b728eb9bdc02f2fdd303fb344c065f077,2023-07-02 10:25:40,Phil Crosby,deno fmt background_scripts,False
617e4220833c8a9b407cc61d2c319625a4667dc6,2023-07-02 10:25:40,Phil Crosby,"Add configuration for deno fmt

We'll start programmatically formatting the code going forward. This will eliminate the spread of
differing styles which have accumulated over the years.",False
713f3c25ef018b08cafabc590b7a03c9c1e24d33,2023-07-02 10:20:34,Marco Lucidi,"Move cursor at end of text on focused one-line textareas

When we `simulateSelect` an input and the cursor is at the start of the
text, we move it to the end of text for all `isSelectable` elements
*except* `textarea`s to avoid bad UX for multiline inputs (e.g. the end
of input could happen to be out of the viewport). However some sites may
use `<textarea>` for what really is a single-line input for 99% times of
the usage (e.g. Google search bar which recently has become a
`<textarea>`) and the cursor won't go to the end of text in such cases.

See:
    https://github.com/philc/vimium/issues/4247
    https://github.com/philc/vimium/issues/4251

This commit changes `simulateSelect` to skip `textarea` cursor
reposition only if the `textarea` has *more than one* line of text
treating single-line `textarea`s as regular `isSelectable` elements.",False
99868023af1635350680c148f6ad98a2b2136895,2022-12-20 05:35:05,Phil Crosby,Version bump to v1.67.6,False
64018153fa095879cec7989bec1d1ba14e85fbe8,2022-12-20 05:32:23,Phil Crosby,"Avoid using innerHTML on the options.js page. Fixes #4195

This is to work around a bogus security issue raised by the Mozilla addons submission process.",False
4f44a02c1bfd27709f9fdc98b4e2ab63b8abb62d,2022-12-18 01:53:49,Phil Crosby,Version bump to v1.67.5,False
c0edf21f8f47cd7c32c5079273acfcb33cdcf110,2022-12-18 01:34:44,Phil Crosby,"Fix a bug adding permissions for the Firefox package

Before this fix, the Chrome package would still get the clipboardRead permission, which we don't want.",False
f64dc38ad3dfd918e6df4c41227f432b0a1fea65,2022-12-18 01:17:08,Phil Crosby,Explain why Firefox needs clipboardRead and clipboardWrite permissions,False
7c6d7186f5372884ced4927015b715398678434c,2022-12-18 01:12:34,acruz,"fix(firefox-pastebin): revert back permissions needed for firefox

The permissions clipboardRead and clipboardWrite are not needed for chrome using the clipboard api.
These were removed in 15ba534fc8eda6ed72d641e0002d00d6d255e1d0 however, they are needed for the
clipboard functionality to work in Firefox.

Fixes #4183",False
9aa3b2b022329c05af8a6e0bb79bac916d316c51,2022-12-02 05:12:47,Phil Crosby,Bump version to v1.67.4,False
4b5734fd50cf62517c5e4e9f996cbd0789dcb7bc,2022-12-02 05:08:44,gdh1995,"fix: simulate click: now detect mayBeBlocked correctly

1. The old code ignores Firefox versions which are older than 96 while don't belong to 91.
2. On Firefox 91.6+, a plain `click` event on `<a target=_blank>` will still
   trigger the popup blocker, so this commit avoids it",False
15ba534fc8eda6ed72d641e0002d00d6d255e1d0,2022-11-30 05:18:15,Phil Crosby,"Remove clipboardRead and clipboardWrite extension permissions

We no longer need these once we switched to using the Clipboard API in #4122. When I tried to submit v1.67.3
to the Chrome store, it was rejected because we request these permissions but don't make use of them.",False
49a56089742a61dd7a56ba21a7b79006177490b6,2022-11-30 05:03:06,gdh1995,"fix unexpected background rects of iframes completely

I just found uBlock Origin applies `color-scheme: light dark` onto its iframes.",False
d6bafc93b6dde417962ae3dab8c637c28f8fd896,2022-11-30 04:50:59,smallming,"Fix shebang line error during build

Fix error `/usr/bin/env: ‚Äòdeno run --allow-read --allow-write --allow-env --allow-net --allow-run --unstable‚Äô: No such file or directory` when building via `./make.js package`.",False
b4a5a5b1daa5c2628e49c0035a18b1107f21558f,2022-10-29 23:59:29,Phil Crosby,Bump version to 1.67.3,False
dd7302ec0145ef1d73ce825de1d36588c2a3fa3f,2022-10-29 23:45:13,epitron,Fixes issue #4147 (copy-to-clipboard features broke due to a chromium API change),False
fbeee3dd557ffaa0cb82bf783b997ba4cfc74d91,2022-10-29 23:25:06,Phil Crosby,"Change default color-scheme of Vimium UI components to ""normal""

Fixes #4148 -- Vimium dark mode styles stopped working in Firefox 106.",False
5023057b052387a7b420bfec5af0da71053c06d0,2022-10-18 07:36:22,Phil Crosby,Cut a release for 1.67.2,False
d121d18c6380e60902cf31dd23b7ab91a27be6de,2022-10-18 07:26:27,impossible98,fix: fix chrome.session,False
5c00e2e029ed0f40a63054cdebfc75615721175a,2022-10-18 07:13:16,Phil Crosby,Call init() when transitioning from visual mode to find mode,False
66adcdeaaf914f6ffc1c3c11e30c7f269ae15ac7,2022-10-17 12:05:05,Tuan Bui,Fix cannot go to caret mode from normal mode #3877,False
bb9ab6d0c6748c9a9794d3a0d99e0242a9ece2a4,2022-10-17 11:38:19,Alan Oliveira,Chrome: fix state icon,False
955de06b0cc9ee82864d68c6311bb98bfd14de50,2022-10-17 11:30:32,NI57721,"Use Clipboard API instead of execCommand(""Copy"")",False
998bab4d5dcb7cebdefb83780a16ee9223a43128,2022-10-17 11:30:32,NI57721,"Use Clipboard API instead of execCommand(""Paste"")",False
c5f232c75ee5fafd95eda456c1db88363902814a,2022-10-17 11:04:25,Phil Crosby,"Don't use deprecated InstallTrigger for Firefox detection

Fixes #4033",False
7a9fc8d631d7ac5abc1a377194d6a46796c27898,2022-05-22 10:38:39,gdh1995,"Vomnibar: fix a bug preventing ctrl-enter from working

Chrome may assign `""\n""` as the `key` property of an `Enter` key,
which made `Ctrl+Enter` not work as expected.",False
e10d2694109960b22735970e3a49e84aac46327a,2022-05-22 10:25:53,gdh1995,completer: fix a typo causing too many refreshing,False
5b7cac9cee084dc0709a622fa8051fa71e8531f6,2022-05-22 10:20:33,AN,Update README.md,False
5acb9a103e1d8ed1e292713efa6f7d5c4a833076,2022-05-22 10:18:50,pluma9,Fix typo in bug_report.md,False
1c6f7fa35fb1c1be6d81f07cc94aa8ec914dd377,2022-05-22 10:06:19,Eric Wollesen,Adds amazon smile search,False
1bcc604ec1c1d5302883a7957ebe007d17feabf2,2022-05-22 10:04:14,Ember Rose,"Link hints for role=""radio""",False
3e93d7a34a7ba47eab6bdde61d7a2d8c4d17d25c,2022-05-22 10:02:07,Janis Dzerve,"Fix the messed up coordinates in getLocalHints function

- Bug manifested itself as not being able to detect input with label located some distance from the input",False
bf5226a58acddc1ace787b83ed29ea50ecd0ca06,2022-05-22 09:57:42,Phil Crosby,Update maintainer list,False
926cb1bccec07c966a891d5f05282d1beb70f820,2022-05-22 09:57:42,Phil Crosby,Remove unused .gitmodules file,False
d908ee119797a373015ecd988b4797464c085d1c,2022-05-22 09:57:33,gdh1995,avoid opening 2 tabs on Firefox 91.6+ (ESR),False
22cf6b35263ee744d7dd8e5eed8d0d824e5bd5f8,2022-05-22 09:57:33,gdh1995,"fix opening links twice when `privacy.resistFingerprinting`

Firefox will report a version of ""91.0"" in `navigator.userAgent`,
if only `privacy.resistFingerprinting` on `about:config` is enabled.

Then this commit fixes this.",False
8528471cc86aeb3fce75f08fdc40f844ac2b7d4c,2022-05-22 09:57:33,gdh1995,make Utils.firefoxVersion work on content scripts,False
97729f72533276d0d2aeb9f6b039e51cb96b785d,2022-05-20 11:28:29,Phil Crosby,Remove node.js package.json files,False
b9fe3c8aab64ef5ff16aa642e5637201759a94c9,2022-05-20 11:25:55,Phil Crosby,"Remove Travis build config

We haven't used Travis in over a year, since they shut down their free plan.

If we want CI, we should move to Github Actions.",False
2c93c251118b43f447dbd0704f1ab04db466e2fd,2022-05-20 11:18:07,Phil Crosby,Update travis build for Deno,False
088a01f2ea7e769c1acddcb8b46fa79243c5aacc,2022-05-20 11:18:07,Phil Crosby,Replace Node with Deno in dev instructions,False
b9d371126566e0993ea45bc4f56281371ac50a1c,2022-05-20 11:18:07,Phil Crosby,Replace nodejs make.js with a make.js for deno,False
f22abf37e58de31c292505458c4e9bbe05ac1920,2022-05-20 11:18:07,Phil Crosby,Add task to buld chrome store package in Deno version of make.js,False
13aea26ab567cc8a913ddef62cb1f0419eacd30f,2022-05-20 11:18:07,Phil Crosby,Fix build script to run on newer MacOS Monterey,False
887a023e3b9d1c726d8cfb007829284266b58ad7,2022-05-20 11:18:07,Phil Crosby,Fix scoping issue when running the DOM tests,False
73e4b1edf0578a50cbd4590bb031afc85addcb58,2022-05-20 11:18:07,Phil Crosby,"Change all references of ""global"" to ""window""",False
548dcce24a876e1d26628bd7c103ad0ed11a8714,2022-05-20 11:18:07,Phil Crosby,"Reverse assertion order

I'm not sure if this was always wrong or if Shoulda recentlyed switched the assertion order, but the expected
argument should come first.",False
c240f7a7173c41528f60f1db10c334176c9bb3ec,2022-05-20 11:18:07,Phil Crosby,"Stub, rather than override, global properties",False
fae3a9e22b7bb139732eb27fed38ed54852d0975,2022-05-20 11:18:07,Phil Crosby,Remove unnecessary stub,False
dc2b06068827cd4a7ddc96330e2cdbd350ffb794,2022-05-20 11:18:07,Phil Crosby,"Initialize Settings state in some tests

The state was carrying-over and polluting other tests.",False
3dc4e4749331a725fc99eab6f4d86ee711a62d0a,2022-05-20 11:18:07,Phil Crosby,Formatting,False
938acbf67102d897a1b07e284210a8e2692a4190,2022-05-20 11:18:07,Phil Crosby,Add a TODO,False
f4667598f853678c863d4e9d80e3e7f7b59200af,2022-05-20 11:18:07,Phil Crosby,Remove an unneeded workaround for marks.js in exclusion_test.js,False
1d8995d45c86efa4a13ba5e309425985535566d5,2022-05-20 11:18:07,Phil Crosby,"Remove some destructive stubbing

This pollutes other unit tests based on the order in which they're run.",False
0463c02b32f3f0a43302436a572677f42d69e250,2022-05-20 11:18:07,Phil Crosby,Deno port of commands_test.js,False
06ffa358c7184ef5e87b6e2f0cf7ab59ccbece5e,2022-05-20 11:18:07,Phil Crosby,Deno port of completion_test.js,False
438b9f70bbb8b481d78e0a4c9516c1aa7dddb0c7,2022-05-20 11:18:07,Phil Crosby,Deno port of exclusions_test.js,False
40caf5475ab1de1488b08be21dcc835b6443a745,2022-05-20 11:18:07,Phil Crosby,Deno port of handler_stack_test.js,False
25b26a974daf8c6d4a032b6019522b4685895424,2022-05-20 11:18:07,Phil Crosby,Deno port of utils_test.js,False
680aa9ae593a2ac25dc7125ede84c065b17a5591,2022-05-20 11:18:07,Phil Crosby,Deno port of rect_test.js,False
389c2f1a6fce69dd7b4aa145e5d86ff37745d992,2022-05-20 11:18:07,Phil Crosby,Deno port of settings_test.js,False
f09e940eed74fe9645b45cf315aeeb72c7cb675e,2022-05-20 11:18:07,Phil Crosby,Remove many stubs which Deno does not need,False
aab3fdc757e14153d16417976a3d625d2cef72b8,2022-05-20 11:18:07,Phil Crosby,Run dom tests in Deno,False
61d6b38b15ce8f7251544fe76d93684886ce246c,2022-05-20 11:18:07,Phil Crosby,Run unit tests in Deno,False
7bc8472b8a0dd74d90211191f8806e44545511a5,2022-05-20 11:18:07,Phil Crosby,Initial version of a deno makefile script,False
0399e0044c6f25558766f52b7127e329c1035d91,2022-05-20 11:18:07,Phil Crosby,Port dom_tests.html to new shoulda.js syntax,False
8d9c486b093142066141e554957e829dd455f45e,2022-05-20 11:18:07,Phil Crosby,Port vomnibar_test to new shoulda.js syntax,False
412f7e74a2eeeff4e6dbf42e08679ffd13a30c2a,2022-05-20 11:18:07,Phil Crosby,Port dom_utils_test.js to new shoulda.js syntax,False
791f90f6a60bd9d4c73a6fa454091bcba262e7be,2022-05-20 11:18:07,Phil Crosby,"Port dom_tests.js to new shoulda.js syntax

I had to disable one test because I couldn't understand how it was
corrupting state for the other tests.",False
78a2139d6279b4c4700b3eaf3bfcf7809e7af3b0,2022-05-20 11:18:07,Phil Crosby,Port utils_test.js to new shoulda.js syntax,False
c6e18700ac9433884c1802cd2fbdab2ffab6db6b,2022-05-20 11:18:07,Phil Crosby,Port settings_test.js to new shoulda.js syntax,False
c10b06b8a5021c047dbb128a91e6f58bf5930ef0,2022-05-20 11:18:07,Phil Crosby,Port rect_test.js to new shoulda.js syntax,False
bf119dc1ca250acefc128dbca0beac0d205d9306,2022-05-20 11:18:07,Phil Crosby,Port handler_stacker_test to new shoulda.js syntax,False
915cc1577603dd576fdaf4e7dd99077e9cbfc095,2022-05-20 11:18:07,Phil Crosby,Port exclusions test to new shoulda.js syntax,False
d0480e5f794509794f692aa7e8725b56d5007460,2022-05-20 11:18:07,Phil Crosby,Port completion_test.js to new shoulda.js syntax,False
6686adf7bfa7c473b1f817c5d17aba830ed31fd4,2022-05-20 11:18:07,Phil Crosby,Shorten tests,False
babcf07e2ecd470e800e14af753f9b1d1a0a9d36,2022-05-20 11:18:07,Phil Crosby,Port commands_test.js to new shoulda.js syntax,False
1921868cbc241a86a788995e41d66b56ec57bec0,2022-05-20 11:18:07,Phil Crosby,"Assign shoulda functions to the global namespace

shoulda2 exports its functions as a module.",False
34bb104a5dcefd553585183c3ec0f307a938c0d9,2022-05-20 11:18:07,Phil Crosby,"Replace assert.arrayEqual with assert.equal

Shoulda's equal now handles arrays with assert.equal",False
463c7b2edbb9f4972e7f5f1becb631c49b9e1497,2022-05-20 11:18:07,Phil Crosby,Use the new 2.0-WIP version of shoulda.js,False
8f77f9a6c6c5ec9c8f098b8b6fd156a58f57938a,2022-05-20 11:18:07,Phil Crosby,"Explicitly require and name ""process""

The node.js docs indicate Process should be available to any node.js
app, but it's not available to make.js, for reasons I don't understand,
and I didn't think it was important enough to dive deeper. I'm running
node 16.1.0.",False
682ebb5cb773999e79106e7b896fd3320ac02502,2022-01-20 12:46:55,Phil Crosby,Include the correct manifest.json file when building store packages,False
bdd39b2481aeeefe0174fe5e3df3099550526d30,2022-01-20 12:36:11,Phil Crosby,Increment version,False
5cabc7d88c0a81b692f923b57b184f172ab22a32,2022-01-20 10:15:27,Phil Crosby,Add comment about #3985,False
f9cb121cfab9cee068b4e4658dc818c79c372143,2022-01-20 10:07:05,gdh1995,"not prevent click events since Firefox 96

It seems Firefox 96 allows extensions to trigger native click behaviors.
See https://github.com/philc/vimium/issues/3964 for reports.

Although this is not listed in https://www.mozilla.org/en-US/firefox/96.0/releasenotes/,
I think it's safe enough to skip preventing since Firefox 96.",False
d742dfc6c939792461d53507b5ddc5041340346e,2021-07-17 02:23:22,Phred,switched default values to the most common use case,False
20bbca7146a5e83c24cd77d4483eec1cdbdba563,2021-07-17 02:23:22,Phred,dynamically create manifests from base,False
0910e8117d79cb131394181f63adba301bf2b268,2021-07-17 02:23:22,Phred,simplified runUnitTests,False
a864f6171363b0962cae19205d114f6792c14933,2021-07-17 02:20:07,Adam Demuri,"Remove reference to deleted file

injected.js was deleted in a previous commit, but the manifest still references it.",False
0a670cc65b21b29298e6b5015817d9e987006a9f,2021-07-11 10:00:18,Phil Crosby,Remove unused file,False
4a293e767d4e6b00a277ab25e25bb45412120008,2021-07-11 09:58:16,Phil Crosby,"Remove unnecessary Function.prototype.bind

This is vestigial back from when JS did not have this built in.",False
e25bbe6e065c734c75ccb9d9040cc2705baa2c2f,2021-07-10 11:20:42,Phil Crosby,"Bump version to 1.67, and update CHANGELOG",False
2cf0b29751ae1e8b3281a191dfa007165a11d4a7,2021-07-10 11:17:50,Phil Crosby,Add a comment,False
499e406121b3d94680ebb55d6362ebecff4fd6f6,2021-07-10 11:17:08,garcke,"Implement better Firefox detection

In previous implementation, Util.isFirefox() is detecting hardcoded string
from runtime.getBrowserInfo(), which cause other Firefox-derived browser
like Librewolf not detected and therefore certain features stop working
on such browsers. This implementation is based on feature detection, so
any Firefox based browser can be detected.",False
41b7384225cea10b7ee965358b41a0e8007f042e,2021-07-10 11:09:58,Linda_pp,Remove unnecessary style at <input> for selecting backup file,False
dd0d0f553128ee26ada33910e0d7d1c9fd5848f9,2021-07-10 11:04:26,gdh1995,"fix usage of :read-only on Firefox

According to https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only,
The `:read-only` means all non-editable DOM elements, including `<p>`
and event those `<input>` whose `isSelectable` are false.

Spec:
https://html.spec.whatwg.org/multipage/semantics-other.html#selector-read-only

___behavior differences___

Firefox 78 begins to support `:read-only` besides `:moz-read-only`,
so the misusage of `:read-only` only causes some differences since it.

Chrome seems to have different opinions, and it doesn't match those
`<input>` with `isSelectable()=false` into `:read-only`.

Here's a test page from web-platform-tests:
http://wpt.live/html/semantics/selectors/pseudo-classes/readwrite-readonly.html
, and you can see Firefox 78 passes all tests while Chrome 83 fails 15 tests.

There're also some related discussions that may help:
* https://bugzilla.mozilla.org/show_bug.cgi?id=1532968#c11
* https://stackoverflow.com/q/62571297/5789722",False
fe6c5fb6afdb2569c3292dbee5390f00db9aba44,2021-07-10 10:55:55,John Diamond,Simplify runMovement a little,False
af13cdf34394a74ae62af05b46aeb499a50191df,2021-07-10 10:55:55,John Diamond,always return value from nextCharacterIsWordCharacter,False
1d80e66aa20f7f1d17d7f16ee046b1253368aa16,2021-07-10 10:24:08,Phil Crosby,"Use a stronger random number generator for Vimium's session secret

Fixes #3832",False
85726b0c2c8934107c666d4b208185b93d05c2d5,2021-07-10 10:03:58,Ragnar Groot Koerkamp,Fix dark mode,False
9560d5ab8256bbb9761ce97f7c998068850b36bb,2021-07-10 09:58:35,gdh1995,fix broken FindMode on Firefox 86+,False
877883e54f3b44f9aa5beaf4b8ff3680e9f2a4d2,2021-07-10 09:57:53,Ragnar Groot Koerkamp,"Do not initialize the PostFindMode superclass when not focused on a
textbox

Before the CS -> JS migration, this if statement was checked right at
the start of the PostFindMode constructor. In JS, this gives an error
because you cannot return before calling the superclass constructor.
However, calling that constructor before the check has unwanted side
effects. Extracing the if statement to a wrapper function that calls the
actual constructor fixes this.",False
85b8f76134ef0eaada2354e8e7a26266cd23161d,2021-07-10 09:57:53,Ragnar Groot Koerkamp,Add missing return statement,False
0127b9a4de86b4d2a936f420b357295f695b7a18,2021-07-03 12:13:46,Linda_pp,Put newline at the end of exported JSON file,False
01a08eec2e3b5d71609cee479e86ca307ffebfb3,2021-07-03 11:53:48,Phil Crosby,"Update README with some tips

Closes #3816 and #3448.",False
4a3956d595d80de885dd2a05dee6407f978e5ba9,2021-07-03 11:30:55,Webkadiz,Add special scrolling element for Telegram,False
54a11a4487cab5debd7def560901e40e49878a4e,2021-07-03 11:25:37,Ragnar Groot Koerkamp,Fix typo: lastReponse -> lastResponse,False
4f9e825a53639e1d504560181bfb4a9159bd344f,2021-07-03 11:25:37,Ragnar Groot Koerkamp,"Fix isCustomSearchPrimarySuggestion

During the migration of this from coffeescript to javascript, some small
changes were introduced:
Before: https://github.com/philc/vimium/blob/478cc8ba4f0aa608b5cd044304221bc11932dd8b/pages/vomnibar.coffee#L162
After:  https://github.com/philc/vimium/commit/478cc8ba4f0aa608b5cd044304221bc11932dd8b#diff-f82dc63d5c5f05dc11ebc40b4e780fc11e3b65609b584fbb194f58bdd272e1c9R205-R206

1. the undefined value `c.isCustomSearchPrimarySuggestion` is read, instead of `c.isPrimarySuggestion`
2. `this.lastResponse` is used, instead of `this.lastReponse` (which is misspelled everywhere ese)

This commit reverts to the old version and fixes the behavior as
described in the 'second case' of the comment below.",False
fee3043c0f62c3a1709c83b8a0fc5fd856ffc60a,2021-07-03 11:06:00,Phil Crosby,"Update node and puppeteer versions

There was no particular reason for this, other than I was already
updating node package versions in the prior commit.",False
c95fbf6395d81ef17555e824373728906cb65966,2021-07-03 11:04:32,Phil Crosby,Update some npm deps (ws and bl) which have security vulnerabilities,False
92ee8d4cfaf6458f4f6854f2b61a5d8acceacc39,2020-06-21 03:52:18,Phil Crosby,Remove obsolete instructions for the shoulda.js git submodule,False
6e4703e2ed9785d84c87362c37fdb679267c7ef0,2020-06-21 03:51:38,Phil Crosby,"Vendor shoulda.js

This simplifies the experience for new developers. The only reason we're
using git submodules is to track this library. This dependency is tiny
and changes rarely, so it's fine to include it directly in our repo, as
one would for a dependency like underscore.js or jquery.js.

Another strategy is to use npm module for this. I'm going to update
shoulda.js soon and publish it as an npm module.",False
2b4304a0851ee31efc4d07edce2d0594b0449eb5,2020-06-21 03:51:38,Phil Crosby,Remove shoulda.js submodule,False
bdf654aebe6f570f427c5f7bc9592cad86e642b5,2020-06-15 04:37:27,Phil Crosby,"Remove refernce to the nodejs util module

We don't appear to be using it.",False
0cbb151d51ccc81574cae1ce47cd3ed6c391c527,2020-06-15 04:34:58,Phil Crosby,Update developer instructions for tests,False
1c8e7702be2c45d4010da2acb9cc9b792c7caf27,2020-06-15 04:04:55,Phil Crosby,Order the command listing in the code to match the help dialog,False
3f1e3086a109f17daf10868cf1ae6724482da1b6,2020-06-15 03:57:10,Phil Crosby,"Additional code tweaks and comments for dark mode

As followup to #3595.",False
a7dc212435751666f9ea442e44e9600fbc0fe645,2020-06-15 03:41:15,Matt Wanchap,"Added dark mode for vomnibar, hud, blank page, help dialog, popup and options pages.

Update dark mode to be compatible with darkreader/darkreader and to mimic Chrome's color scheme (leosolid)

Add dark mode CSS to help dialog

Fix compatibility with dark reader's filter and static modes",False
f1a58259562e6b5c905b11ac05b0cc0deef38976,2020-06-15 03:31:40,gdh1995,Marks.activateGotoMode: activate selected windows for global marks,False
7289a1dfa865a804c6be845c3b61a2b5859ede84,2020-06-15 03:31:40,gdh1995,Marks.activateCreateMode: fix a typo when converting coffee scripts,False
6aecf63544ab7371867537ad8caf8429d1410af4,2020-05-22 12:06:57,Phil Crosby,Tweak a comment,False
bec72d17d95d234d7e1ef526654d51ab9e485053,2020-05-22 11:59:44,Phil Crosby,"Call fetch after Option objects are constructed

Fixed #3566.",False
21dfa8981261bcdfd2f33e9d29798013a7814910,2020-05-21 12:55:18,Phil Crosby,Increase node version in travis build,False
1f4f4e61f0eff22c951cd251b9206030a685a143,2020-05-21 12:45:38,Phil Crosby,"Check in package.json and package-lock.json

This should enforce all devs and Travis to use the same version of puppeteer.",False
09e1ca2092ef94faf46a821776274b80a91eaec4,2020-05-21 12:43:23,Phil Crosby,Remove some obsolete build steps from travis build script,False
8cf9357bd946582c5bf0f3f699aeb61a75f87876,2020-05-21 12:10:27,Kafji,"Fix visual mode caret mode fallback

This fixes #3568",False
4c45726c0c05eb5381ab58d9ce629972e801eb43,2020-05-21 12:07:40,Phil Crosby,Replace our ltrim util function with trimStart,False
da8e82ea363f4755c8b2ebac9eed7dcdff7d0330,2020-05-21 12:04:13,Phil Crosby,Whitespace,False
c692a766143b15c2700a62fa7cf78526e83c27cc,2020-05-21 11:30:35,Phil Crosby,Fix a long line,False
fbe6f7a9b9a77eda25286d5457ca79c35e0c2b50,2020-05-21 11:30:35,Phil Crosby,"Replace our lib function ""extend"" with Object.assign",False
bdd7126701aa71f1c18c3142221d7b74f458fac2,2020-05-21 11:30:35,Phil Crosby,Remove a class name workaround that's no longer needed,False
10da838bf315f6fcbbcf43a7b24d1b733dc2ae40,2020-05-21 11:05:32,Phil Crosby,"Simplify usage of root in vimium_frontend.js

I didn't completely replace our use of root here, because there is a
workaround for a firefox bug referenced in this file.",False
cc9cc29097e5790e4ac716bba31063ef8a925286,2020-05-21 11:05:32,Phil Crosby,Remove comment,False
f9bb7aace646484ec0ca4503f48e1512a5a84590,2020-05-21 11:05:32,Phil Crosby,"Abandon our frankenstein use of modules, and use no modules

Now we assign every exported item to the `global` object, which is `global`
in node.js, and `window` in the browser (this is handled by utils.js).

Previously we were only using modules in tests, but then assigning all
exported members to the global namespace when importing, so we weren't
really using modules. Maybe this was required in the early days of node?

We can't embrace a proper use of ES6 modules, because they don't work in
chrome extension content scripts. So if we're not going to use them
there, let's not bother using them anywhere. It would just make the code
confusing if some of our code files used modules, and other files didn't.",False
7a99ea22400d64f30924a4113fb9c3dc76659444,2020-05-20 13:02:36,Phil Crosby,Require the dom helpers and lib.js from our test helper,False
212eee73ff9284d3c78bb8adfd24b62a05f53afa,2020-05-20 12:56:47,Phil Crosby,Assign window to global in browser environments,False
277866c3e5b0985f9c7b88d729a0b28c876c85ca,2020-05-20 12:56:07,Phil Crosby,Remove unneeded line,False
fbddc22a4da06ade2336145d973eb203a26ec430,2020-05-20 07:59:43,Phil Crosby,"Add a minimum version for Firefox as part of the build process

This minimum version is set to ensure Firefox supports ES2018.",False
b243ab61f8510868b6fa3df7fe5fb0eaed6fe033,2020-05-20 07:26:33,Phil Crosby,"Bump minimum Chrome version to 69, to support ES2018

Since the removal of coffeescript in #3459, we're now using some newer
features of javascript. I think the most recent feature we're currently using is
Array.flat, which was introduced in Chrome 69 and Firefox 62.

I checked the google analytics for our chrome store page, and less than
0.5% of users visiting that page have a Chrome version prior to 80, so
this increased version requirement should be acceptable.

We don't currently enforce a minimum version for Firefox; I'll do that
in a separate commit.",False
9505e4a376b7fcf8133054772fe1ec0e8b261642,2020-05-20 06:30:06,Phil Crosby,Record the coffeescript conversion in the changelog,False
9d62efa7e8be15be4e6f5aa92d5adbcd90960cbf,2020-05-20 06:27:24,Phil Crosby,Remove coffeescript references from CONTRIBUTING.md,False
61022686fb09e70add30f8f8b0f93e967c396fd4,2020-05-20 06:22:24,Phil Crosby,"Change test to not reference coffee

So this doesn't show up in my greps.",False
12c6283c0e675942466241417be9e1211a442669,2020-05-20 06:21:07,Phil Crosby,Remove references to coffeescript file names,False
97a65d5948a0e3ef1f64e7968189c93d6bd463c5,2020-05-20 06:18:04,Phil Crosby,"Remove the build task in make.js

Now that coffeescript is eliminated, there's no build step.",False
23da19f151b1f650cb08473afc573cb38be73485,2020-05-20 06:15:23,Phil Crosby,Convert mode_visual.coffee,False
0c65f5bc4e4dcb1b67a17b4e74df02e388a84d07,2020-05-20 06:15:23,Phil Crosby,Simplify mode_visual.coffee,False
877d0178583a2ebb1a774baafafb7607e4541083,2020-05-20 06:15:23,Phil Crosby,Convert mode_normal.coffee,False
93887b41c339f39d38008dd4ed365038d747f2c6,2020-05-20 06:15:23,Phil Crosby,Simplify mode_normal.coffee,False
b4aa6adb6f79dafdc7bb2803e4a730abcea57975,2020-05-20 06:15:23,Phil Crosby,Convert mode_insert.coffee,False
e66c10805c0da33dd5a09da68666afbc367af052,2020-05-20 06:15:23,Phil Crosby,Simplify mode_insert.coffee,False
f887b9e069ee3703ae0dacc3fd24b1fd8876edd1,2020-05-20 06:15:23,Phil Crosby,Convert mode_find.coffee,False
01895d8233766772a8b896c3b948359e786c4fdd,2020-05-20 06:15:23,Phil Crosby,Simplify mode_find.coffee,False
7ace2091e034c103d4acc60998f5aa08319b6712,2020-05-20 06:15:23,Phil Crosby,Convert mode_key_handler.coffee,False
5227ef3b6f7026064502acb687bdd48bc915a585,2020-05-20 06:15:23,Phil Crosby,Simplify mode_key_handler.coffee,False
f0403c247cf95df8a5b94beb4e8db331f4a425d4,2020-05-20 06:15:23,Phil Crosby,Convert mode.coffee,False
17c959b218622434c5105e9f58fdc0b45574d499,2020-05-20 06:15:23,Phil Crosby,Simplify mode.coffee,False
cfc1b0d95be4b82b2a2afc6b3d90c6958ffe918c,2020-05-20 06:15:23,Phil Crosby,"Change Mode to have an init function

This is needed to use vanilla JS class syntax, because you must call the
super constructor before referencing `this`, and we reference `this`
before calling the constructor in a few subclasses of Mode.",False
6aeaf7be283016d2f4e91d0563ce9035103ee2bb,2020-05-20 06:15:23,Phil Crosby,Convert link_hints.coffee,False
c9d614bb6ebb138a56bbd42a0ec5fdaa8cb08ad0,2020-05-20 06:15:03,Phil Crosby,Simplify link_hints.coffee,False
6c17c4df3914a4fc3872640b5f6be2fe27084332,2020-05-20 06:15:03,Phil Crosby,Convert vomnibar.coffee,False
515d32a75d0c2e5cd24a2c01b555936d589c46d2,2020-05-20 06:14:54,Phil Crosby,Convert vimium_frontend.coffee,False
b82957642f6460bc3468e181068ab0127806337b,2020-05-20 06:14:54,Phil Crosby,Simplify vimium_frontend.coffee,False
557c69a68dcb5f789c7a679fc023436d0edb9b76,2020-05-20 06:14:54,Phil Crosby,Convert ui_component.coffee,False
2bfe5b3fe943a4c255fea73076c53c2508dc02ad,2020-05-20 06:14:54,Phil Crosby,Simplify ui_component.coffee,False
cd9aec58668eb702eac8170835630ca52ef80ae3,2020-05-20 06:14:18,Phil Crosby,Convert scroller.coffee,False
ed953ef0a2a858a917caee6e1a3ee46832c23a32,2020-05-20 06:14:18,Phil Crosby,Simplify scroller.coffee,False
073b283259fb6c628acd9cab78007aedceaf23c9,2020-05-20 06:14:18,Phil Crosby,"Use ES6 classes

This can probably be cleaner once we clean up the module loading situation.",False
dffbfa072b8c5d461f99caef9c16914ac2801649,2020-05-20 06:14:15,Phil Crosby,Simplify mode.coffee,False
caa165d26ed269b03d1cceb741a1323e96ae9615,2020-04-27 12:41:19,Phil Crosby,"Delete obsolete vomnibar.coffee

Forgot to delete this when converting it to js.",False
121b672da7261f44b48b74a120c4591fbe2a8c8d,2020-04-27 12:04:24,Phil Crosby,Convert marks.coffee,False
7cc848a98f3d5103ce928f0316213b4d9c08062e,2020-04-26 12:08:37,Phil Crosby,Simplify marks.coffee,False
a12399b5ac49f90a328d009392d2c8d6119de6ac,2020-04-26 10:46:48,Phil Crosby,Convert injected.coffee,False
f4fee074aff4f66454e2c81c7b1df6cc2eba96d0,2020-04-26 10:41:32,Phil Crosby,Convert hud.coffee,False
b7038115bb311b80212fc49d0b61f45e469cdb3f,2020-04-26 10:09:23,Phil Crosby,Begin converting content_scripts/*.coffee,False
3f0aa8d1e37646d89721e61a65d2521c91eae53a,2020-04-25 14:00:44,Phil Crosby,Simplify hud.coffee,False
1b00a03c134de29708ff54159608ac6da84d22f8,2020-04-24 12:39:33,Phil Crosby,Fix js const assignment error,False
478cc8ba4f0aa608b5cd044304221bc11932dd8b,2020-04-24 12:29:23,Phil Crosby,Convert vomnibar.coffee,False
c0ee66ba723616c8dcf3cc4459735c9726f73ac7,2020-04-24 12:29:23,Phil Crosby,Simplify vomnibar.coffee,False
f2453732746c2069db191a8688b39fd073b512cb,2020-04-24 12:29:22,Phil Crosby,Convert ui_component_server.coffee,False
fa8897b927831da2569f5c87b6b4e68c583c0cd4,2020-04-24 12:29:22,Phil Crosby,Simplify ui_component_server.coffee,False
46bea52ddde47b2c972b7c80ff558cf3126ad536,2020-04-24 12:29:21,Phil Crosby,Convert options.coffee,False
e587c45a6aedea6d7d58b78393629d9baa23de7c,2020-04-24 12:29:21,Phil Crosby,Simplify options.coffee,False
6a60138bf2c2e5fe38f05e18bd8ae4fe305815c9,2020-04-24 12:29:19,Phil Crosby,Convert logging.coffee,False
777bba76fb5bd0d9c74c233017c033229eacf5e2,2020-04-24 11:26:58,Phil Crosby,Convert hud.coffee,False
4241d36bda2754aa311c093156a8d82861fa22df,2020-04-24 11:26:28,Phil Crosby,Simplify hud.coffee,False
a33ad60ed9285a526ae4186b0c5bf610854694d0,2020-04-24 11:14:43,Phil Crosby,Convert help_dialog.coffee,False
ce1166a37938186265a2f6765057c6d02f0d914e,2020-04-24 11:05:00,Phil Crosby,Simplify help_dialog.coffee,False
07b653664ca30f0d70fb5ddeeab6ff5e03be4849,2020-04-24 10:59:39,Phil Crosby,Convert complete_engines.coffee,False
7ca68ec06f7db20fa41a60974a02a1673867c376,2020-04-24 10:58:05,Phil Crosby,Begin porting pages/*.coffee to js,False
1f32694c95d246a3a7c2154afbe81314211b5555,2020-04-21 14:17:16,Phil Crosby,Convert marks.coffee,False
88ed40700f45e7ac968a3c6010b0482d888ae46f,2020-04-21 14:17:16,Phil Crosby,Simplify marks.coffee,False
96bfbe36356a161d010a8f48a4c1db162f35faca,2020-04-21 14:17:16,Phil Crosby,Convert main.coffee,False
ffdd38f62054d82d893cbbdc6401def3c3864d85,2020-04-21 14:17:16,Phil Crosby,Simplify main.coffee,False
c996214d892c8eab3b0b031c8d3837526a97b2c4,2020-04-21 14:17:16,Phil Crosby,Convert exclusions.coffee,False
370868b10047a1bb77a008152168838b7bb20a4a,2020-04-21 14:17:16,Phil Crosby,Make a reference const,False
308917b4f2ae2691f5b31e58a0434be306d51a52,2020-04-21 14:17:16,Phil Crosby,Simplify exclusions.coffee,False
a7a073cbb26b49cf03d7a2e6c72e1e66ee6b3214,2020-04-21 14:17:16,Phil Crosby,Convert completion_search.coffee,False
3a587664a28571c2ff720f502f6f0fb7f14572a6,2020-04-20 13:03:03,Phil Crosby,Simplify completion_search.coffee,False
73cb523cf7ebd0f385aaf073d2e4f02130e347d1,2020-04-20 12:52:16,Phil Crosby,Convert completion_engines.coffee,False
642539bceea94a67faf87d4e64158429a916e8d4,2020-04-20 12:40:18,Phil Crosby,"Make ""regexps"" member an array, not a string

This makes this field name less surprising.

Although we only currently use one regexp, so maybe this should be made
a string afterall, and the variable renamed",False
919f6626d2e3fd37db2ae70c899e492c324058d9,2020-04-20 12:39:07,Phil Crosby,Simplify completion_engines.coffee,False
ad8faa9dae76f1940228d699396afb56dde5117b,2020-04-18 11:43:49,Phil Crosby,Convert completion.coffee,False
509fc6e0ded4d29d752765141120daeb6e2cbcfd,2020-04-18 11:43:28,Phil Crosby,"Simplify completion.coffee

As part of this, I fixed a bug where tab completions weren't
deprioritized as intended in the search results. This was due to an
indentation bug.",False
6b5d2ed6b757ec15710853ba1e61d16c3c05ed79,2020-04-18 11:43:28,Phil Crosby,Fix a workaround in a test,False
cb1d085e2b03004c5dea7419c51e069fa095ad36,2020-04-18 10:07:14,Phil Crosby,Convert commands.coffee,False
f2b2d1ffd2e75d1ea1c877938edcc7a92b87f14c,2020-04-18 10:07:14,Phil Crosby,Simplify commands.coffee,False
c8f0654cb2df9da3c05a8eab33dff1ef4eb6f2f9,2020-04-18 10:07:14,Phil Crosby,Convert bg_utils.coffee,False
fde842ba17ab4515e8d1c13274e21e9ce6fafa5a,2020-04-14 13:23:19,Phil Crosby,Simplify bg_utils.coffee,False
33539eb2ef4b05cf6074b6e9f2657020b9a47b1a,2020-04-14 12:45:31,Phil Crosby,Start converting background_scripts/*.coffee,False
ac5f9d3407bcf07c50a0119aede916fdd561f224,2020-04-13 13:14:00,Phil Crosby,Convert utils.coffee,False
2bdfb161bce087a1fcd7e6ee91950938672ab8cb,2020-04-13 13:01:50,Phil Crosby,Logic simplifications to utils.coffee,False
77c2b91b0b35496c0e4ad4fb681dc58f0c98343d,2020-04-13 13:01:50,Phil Crosby,Convert settings.coffee,False
5a6078681f046d840452e002e9bbbfe3c0bbb7fa,2020-04-13 12:02:57,Phil Crosby,Convert rect.coffee,False
fff309eec0f7b932e17b0433e44c0e6cf51b762c,2020-04-13 12:02:57,Phil Crosby,Convert keyboard_utils to js,False
4a0e4c190d35a8150a351a54d58656c4a1fa1d05,2020-04-13 12:02:57,Phil Crosby,Convert handler_stack.coffee,False
bc342c226a148075f0ab4a5e4ad6bf297d00476f,2020-04-13 12:02:57,Phil Crosby,Convert find_mode_history.coffee,False
71920b0cb89e36c400a4161afec377f098c9f7a3,2020-04-13 12:02:57,Phil Crosby,Convert dom_utils.coffee,False
b1d19f64e36f25c5d039045e72167ed52647fb7c,2020-04-13 12:02:57,Phil Crosby,Convert clipboard.coffee,False
2e513beeabeb82fcdc16fc49df30f278d30beb43,2020-04-13 12:02:57,Phil Crosby,"In our tests, don't make root const, because we overwrite it

We'll need to do a pass to clean up all of the module exporting.",False
0ca66498fcf60952d81afa8a4c1f37b3958faa0a,2020-04-13 12:02:43,Phil Crosby,Begin converting lib/*.coffee to javascript,False
2c62a4f42b419acd5f66698d97b1a9d3c922bc2f,2020-03-03 13:56:57,Phil Crosby,"Fix broken DOM tests

These were broken due to some changes in
d670020bc9ccf379591b0e11ff15715cd55d82ab, which makes HUD.init require
that the document is loaded.",False
be9ef7f496d5f0a4aa8c7b1b6cf186e564624079,2020-03-03 13:38:04,Phil Crosby,Log error output from puppeteer,False
401cc8fb0cdaf9dca1272981ca10caf26e9ef883,2020-03-03 12:56:08,Phil Crosby,Add a link to the wiki in the changelog,False
528a2bdc4e5716f02889eb3fdef0f96f3da08a0a,2020-03-03 12:53:37,Phil Crosby,Bump version to v1.66,False
415f250b0febf8b3f5d71d7072d17fa331ca188c,2020-03-03 12:37:56,Phil Crosby,"Revert ""Added dark mode for vomnibar, hud, blank page, help dialog, popup and options pages""

This reverts commit 4efaf1437c544524ab1eaaf575bab7e4c9fa123e.

I'm reverting this until we can make it better. See discussion on

https://github.com/philc/vimium/pull/3402",False
3a55b89353f1d994a7e3f9e460a8cae2207deca5,2020-03-03 12:25:19,Theodore Dubois,"Send mouse events that bubble across shadow DOM

This fixes clicking on buttons/links in the latest version of Gerrit.",False
f46aaef5f2f54fcf535c3a21a914c9fe39598855,2020-02-25 02:12:06,Phil Crosby,Ignore a few more files,False
837fb4e4bf38f39f1a3f213bf41b3c2f7e07e33e,2020-02-25 02:12:06,Phil Crosby,"Make firefox packaging command the same as chrome's; fix path in zip

Not sure why it was different.

This also fixes an issue where chrome's (but not firefox's)
distributable zip had the relative path ""dist/vimium"" prefixing each
item. I think we just never realized this; it seems like Chrome doesn't
care about these relative paths.",False
a6fa36fae12e9870591dc1bc07c39bb1cc426064,2020-02-24 13:35:37,Phil Crosby,Make it harder to upload a build to the wrong store,False
65d9ade16ac22ad2eaef0fc43b8884da9516f722,2020-02-24 13:26:11,Phil Crosby,"Remove git_hooks directory

Not sure if anyone uses this for running tests. I never have; seems unnecessary.",False
ebc57ba7b8c45a0ccfb6710a6989cce73ac19f11,2020-02-24 13:20:09,Phil Crosby,"Allow use of shift as a modifier for keybindings

See PR 2388: ""Key mappings for Shift + [non-printable char key]""",False
9068a5583e2bfcc242ed93671d77d2ab0a5654c3,2020-02-21 13:49:53,Phil Crosby,"Fix visual line mode line selection behavior

(Replicated from #2406)",False
097c21b9218e05ac9dad9c2d78a187fbcaf6fbed,2020-02-21 13:25:07,Stephen Blott,"Link-hint mode command options (incl. hover, focus)

This adds:

    map X LinkHints.activateMode action=hover
    map X LinkHints.activateMode action=focus
    map X LinkHints.activateMode action=copy-text

For ""hover"", `<Escape>` generates the `mouseout` event.",False
d3a8befd9f808100d9feda3748439af5b38cf45b,2020-02-21 12:57:03,Phil Crosby,"Remove vimiumReset class from popups shown within iframes

The iframe protects our pages from inheriting any outside styles.",False
03de9b9a522822f082bd7a6eff8366aa486a8fab,2020-02-21 12:56:51,Phil Crosby,Show link hints when aria-hidden=true,False
09c00df80872cc03a1cac5a2f1d17460c3fea0ae,2020-02-21 12:55:05,Frank van Dijk,"address review comments

- don't return tabs without query in omni completer
- consolidate relevancy tweaking in 1 place
- explain relevancy tweaking in a source comment",False
81c8557d248abdb60ffd1a2c663c81eaee8d0bf2,2020-02-21 12:55:05,Frank van Dijk,"tabs in 'o' vomnibar

with quick weight falloff for subsequent tab entries to avoid crowding
out history",False
4efaf1437c544524ab1eaaf575bab7e4c9fa123e,2020-02-20 13:35:55,Matt Wanchap,"Added dark mode for vomnibar, hud, blank page, help dialog, popup and options pages",False
f3a2e764455ba204f99770f63d3899758bc7fef6,2020-02-20 13:10:31,Phil Crosby,Make issue numbers in changelog into links,False
31d8df2f8989c398862b0b1bfc2e45f7a3a0c170,2020-02-20 13:02:29,Phil Crosby,"Give Firefox a first class citizen treatment in the README

This also simplifies the readme.",False
e9bc905a150c95b15ba1112602526cf9c5037bd9,2020-02-20 12:14:29,Phil Crosby,Remove trailling whitespace,False
d670020bc9ccf379591b0e11ff15715cd55d82ab,2020-02-20 11:51:43,Phil Crosby,"Merge pull request #3499 from gdh1995/non-clickable-msg-hud

make message hud non-clickable",True
01c8168f4419926430e881383fb5dfa4a330edf5,2020-02-16 13:06:06,Phil Crosby,Fix path in make.js unit tests,False
af23825e1c2eb4829c68f4988e4350555e05e2a3,2020-02-16 13:05:13,Phil Crosby,Convert dom_tests to ES6,False
7a41dfbe3784701dde979d456c0d112d80b5d48b,2020-02-16 12:10:41,Phil Crosby,Update comment for shadow dom,False
ad59f844d33ec44c4d7fb07e0c16cbc6518d9738,2020-02-15 13:11:07,Phil Crosby,Remove dependency on the path module,False
a5e3a62b2716c91ad04dc99325cdf39e5f9d66c3,2020-02-15 13:11:07,Phil Crosby,Update travis for puppeteer,False
7e3ce80c77acc309724b317c96e30bfc593d6011,2020-02-15 13:11:07,Phil Crosby,Update testing docs,False
a17ec6a8c329ea540297b0794b1fdec2c7065f77,2020-02-15 13:11:07,Phil Crosby,"Remove bind.js polyfill, previously required by PhantomJS",False
f26e225d1a99aea6c2e20f2ce1453a09ffd0af1d,2020-02-15 13:11:07,Phil Crosby,"Extract dom test setup code, so tests don't depend on each other

vomnibar_test.js depended on state setup by dom_tests.js, so they
couldn't be run independently.",False
e62f6b7d442b2603540ccd0c48fabe65e0a0784a,2020-02-15 13:11:07,Phil Crosby,gitignore less js,False
17f9e3da9eead08f6efa7e2cfb8ab4f3ed797773,2020-02-15 13:11:07,Phil Crosby,Silence some output when tests are running,False
677fe3205fd2fe0c2fa6b8b3a1ebc5836c572894,2020-02-15 13:11:07,Phil Crosby,"Disable a failing SVG test that I don't understand

As part of the transition to puppeteer",False
0c0f3fab13a94ad1dba54c5d17724f94769b9548,2020-02-15 13:11:07,Phil Crosby,"Make image hints test work in puppeteer

These images need dimensions to be hintable",False
2ce9a89743afa58ce5ccd861d44f7bcdee9953a9,2020-02-15 13:11:07,Phil Crosby,Fix input link hints test in puppeteer,False
a016016ccc7eda6cde0c01cf8c3c7fda7c604e3d,2020-02-15 13:11:07,Phil Crosby,Add a task for running dom tests in puppeteer,False
fe4aa7c2b897c6f2c4a1767cffc9e1a1912d8d73,2020-02-15 12:12:47,Phil Crosby,Make the build step synchronous,False
ebc6d66e42fb9a60ac127168ea90f2ddf9ba6d45,2020-02-15 11:19:39,Phil Crosby,"Replace cakefile with a nodejs script

Part of the ongoing removal of coffeescript.

Note that I omitted these tasks as part of the port:

1. clean: we won't need to clean shortly, once coffeescript is gone
2. coverage: I couldn't get this working in the cake version. I'm not
   sure when it last worked
3. package-custom-crx: I don't use this. We can add it back in if others rely on it.",False
9943ed8fba0f91fe57d832c2e3b8d39cfd57c01f,2020-02-15 08:37:40,gdh1995,"Vomnibar: set autocomplete off

This is to fix #3394.

Related document:
https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#Values",False
01b3feb0846cda40db66a8ed3851d6f41f6e6896,2020-02-14 18:22:54,gdh1995,fix a crash on exiting FindMode if no queries,False
fbe4aa5fa231361c6acdab879d758d1070fbb40d,2020-02-14 18:10:48,gdh1995,make message hud non-clickable,False
b9a5ec9c24f0f2d0e18172f8f1af34dd3bee007d,2020-02-11 02:31:22,Phil Crosby,Bump version to v1.65.2,False
65ba63bdcf72f9ea09698d340fdb8c62dac3ad33,2020-02-10 12:45:54,Phil Crosby,Bump version to 1.65.1,False
798aadb33404fecf0377efed3f9bfc30ed8169c1,2020-02-10 12:43:11,Phil Crosby,"Prevent the HUD from becoming tall and obscuring links

Fixes #3486.",False
5ccd6dc4f2dd081d96bdeb2e71bb4f0b9015b674,2020-02-09 14:34:12,Phil Crosby,tests/unit_tests Delete coffeescript,False
791d7378f0a7415833aa7d9fae05cca1be245cb1,2020-02-09 14:34:12,Phil Crosby,tests/unit_tests Convert to ES6,False
f5c784806b106e69ded4b2cf02f70f095f81bd81,2020-02-09 14:34:12,Phil Crosby,tests/unit_tests Make coffeescript easier to convert to ES6,False
2ffd31abb32b7d43333049280279bb9b6797c4ad,2020-02-09 14:34:12,Phil Crosby,Don't ignore .js files. We have them now!,False
0fd83e1215ac6cbd4d991fb1a03f485d35c696c6,2020-02-09 14:29:22,Phil Crosby,Add a task for running unit tests,False
85f153010ceae3b948df02e901617969f44694fa,2020-02-09 14:26:02,Phil Crosby,"Update the release notes links

The old link still works, but people have to click one more time to see
the actual changelog.",False
4d39729778fe4dae84090cc822efb6f5b4c6042c,2020-02-09 12:35:11,Daniel Skogly,"Add improved elementFromPoint util (#3474)

* Add improved elementFromPoint util
Now works properly with Shadow DOM

* Add a stack to getElementFromPoint
To prevent infinite recursion

* Use Array.indexOf instead of .includes

* Improve getElementFromPoint util

Use elementsFromPoint instead of elementFromPoint, as this seems to work better in Chrome.

* Use elementFromPoint if elementsFromPoint is unavailable",False
ed78c1bbaf2e3f6346436708060e07f8872977a0,2020-02-09 07:26:01,Phil Crosby,Bump version to v1.65,False
1c51fbb27c9b0d58f1fd85cc9829fb472242b381,2020-02-09 02:15:11,Phil Crosby,Changelog for 1.65,False
3703fff8255ce944b00dbf35181254d64af9a58b,2020-02-08 14:44:29,Phil Crosby,"Disable some broken tests

We need to revisit these at some point. They're failing for me on master.",False
28263b55e437a5f4e2f6fe77b55964e540f35640,2020-02-08 13:46:18,gdh1995,noop: add some comments,False
a2f745fa19ec0253a330ee40188d7bc6c91bba7f,2020-02-08 13:46:18,gdh1995,createTab: activate the first tab when opening a list of URLs,False
2dfe359d832b7b9d285ea316da18e40f7f7a3774,2020-02-08 13:46:18,gdh1995,fix support for position=end on Firefox,False
18bfa181df7f49a5e23bba6685d5427f8eaa0aaa,2020-02-08 13:44:38,gdh1995,firefox fix IME support in FindMode,False
f17a57c9cb35e8dea65b82baa3c9200debe8c78c,2020-02-08 13:43:49,gdh1995,fix broken isFirefox on pages/*,False
71c1cf3784f86ba64adb5afb0a53599de81b7573,2020-02-08 12:13:54,Phil Crosby,"Revert ""color: black !important""

This reverts commit 702a336f299ea236cadc544b9abb935ae3b89738.

This broke styles in the vomnibar.

This was originally for https://github.com/philc/vimium/pull/2533",False
716a698e4e79a68dbc04b70ea125d24ebe4ea210,2020-02-08 12:13:54,Phil Crosby,Use pointer cursor for links in the help dialog,False
9b4b2610e0ce4a227f74992822cb38fc26617f10,2020-01-16 14:10:23,gdh1995,remove tabIndex>=0 for less unsafe influence,False
930b58100cf3b0599b3fcd61a66b5b817a0bbf26,2020-01-16 14:10:23,gdh1995,"rework checks for tabindex attribute

Commit 3a688f7 imports the code, but if tabIndexValue is empty,
it won't take effect and element.tabIndex will keep its default value.

Tests have been made on Chrome 41 / 55.",False
9f6af4abd42971bf3574b708cafb3891b0a1c6da,2020-01-16 14:10:23,gdh1995,mark object elements clickable,False
f9e099e82cd78accab7d6d10ba7c96cff637285b,2020-01-16 14:10:23,gdh1995,update comment,False
b5ef662b2ae34f168b1c6d4bdf79b7d2e48996e0,2020-01-16 14:10:23,gdh1995,"LinkHints: focus elements with nonnegative tabIndex

Selectable (and also editable) `<input>`s have been handled on L390,
so here we just need to focus `<input>`s of other types
    and those whose tabIndex is nonnegative.",False
63c196eebc6a38e642ef154ad12ed95a1a7642f7,2020-01-16 13:59:53,gdh1995,"fix a typo influencing HelpDialog and LinkHints

Commit 43c7390f987fea063e7a97cd8b37c7b61d45f615 makes
HelpDialog can not be hinted by LinkHints if only it had been hidden before.",False
ff9439a0b21a9871b97b167fc5f404a098e03693,2020-01-13 05:16:01,gdh1995,"rework getSelectionFocusElement so that it always returns an element or null

This is not a replacement of commit ""Don't focus non-focusable node""
    (351489c7c5e093531aa8cd5870a3f78c99fb2923),
because we can not ensure each Element instance has a non-null `focus`
member function:
* As far as now, `Element.prototype` has no `focus` property;
* Though all sub-classes of `Element` has their own `focus` property, like `HTMLElement` and `SVGElement`.",False
1f6c16447d56a12aa126493e9ee49aee6e698366,2020-01-13 05:09:13,Phil Crosby,"Remove some unnecessary CSS in the HUD

Pretty sure these are unnecessary.",False
74710b743119efaf525a63fee3ad5d5e8bb98bb1,2020-01-13 05:09:09,Sergey Zozulya,Re-style HUD to look similar to Vomnibar,False
708e1ebaf6b9919bb80fc0419399641dd6de27e6,2020-01-13 04:53:39,gdh1995,fix a typo bug breaking HUD and help dialog,False
caf13c2dbfa9b3c5f35aae76dfcffa4cfea14bac,2020-01-13 04:27:21,Daniel Skogly (poacher2k),"Adds new check to see if an element is covered by another

See #2251 for discussion.",False
61a32ae0c7a09d18815e5a556cfe6aea93dde48f,2020-01-13 02:43:27,mrmr1993,Change keyEventSuppressor to a handler,False
702a336f299ea236cadc544b9abb935ae3b89738,2020-01-13 02:36:45,Ivan Ng,color: black !important,False
cea42f3bd370d44531f0d76b7923f5bf7e67c19b,2020-01-10 12:02:27,gdh1995,"favicon: support URLs with '@'

According to
https://cs.chromium.org/chromium/src/chrome/browser/ui/webui/favicon_source.h?type=cs&q=FaviconSource&g=0&l=47,
only the whole 'size/aa@bx/' can be optional.

Test URL:
https://developer.mozilla.org/en-US/docs/Web/CSS/@media/inverted-colors",False
210a9c041944d8860dd1edc0043724316d4affe4,2020-01-10 12:02:26,gdh1995,fix some bugs,False
dec6fd0914ea76addf728443a4fd93edc71843b7,2020-01-10 12:02:24,gdh1995,show favIcons for browser tabs on Vomnibar,False
2acf8dd51d6c3378e994bcbc34e21f6f15ee55f2,2020-01-10 11:22:17,gdh1995,createTab: add position=after/before/end/start options,False
2268e498637bc3190070e3d32146f981a33be726,2020-01-10 10:52:56,Phil Crosby,"Make Ctrl-enter populate the vomnibar with the selected entry's URL

Thanks @Gu1nness !

Closes #2464, #2914.",False
cd5847656f539853e76eef19a5376fdad9981813,2020-01-10 10:23:19,gdh1995,"merge giveUpFocus into unfocusIfFocused

in fact, the old `unfocusIfFocused` has been broken for a while,
since hud iframe is inside a shadowRoot on Firefox 63+.",False
afed4d22002a132adf8966b6aba6e848618df450,2020-01-10 10:23:19,gdh1995,noop: safer code,False
6098bf9c457bbb59d7757b60a67de9df5454e00a,2020-01-10 10:23:19,gdh1995,fix typos,False
264563c2a07dd404d29ecd9a1bf9b191e08d4ea6,2020-01-10 10:23:19,gdh1995,FindMode: clear focus of HUD iframe on exit,False
5c224829f8c73db87776d4884b75be8214719bbe,2020-01-06 13:12:43,gdh1995,remove useless ontimeout/onerror,False
2ab7b133bef02e91af2eb7bd911249ce82881db1,2020-01-06 13:12:43,gdh1995,fix a crash on network errors,False
0179895876d64f59bfe94685bb25946bf7f18bf4,2020-01-06 13:11:35,gdh1995,"setup listeners: use capture mode

This should fix #3398 (the page suppresses DOMContentLoaded events).",False
9005144cd02fab59577c24f50aae279f4160ce06,2020-01-06 13:00:57,Phil Crosby,Improve comment,False
ad530b68f4c2a135238c0b3939349563239810f7,2020-01-06 12:50:30,gdh1995,another solution for enterFindMode,False
42584afaefe9fe35b4db90b7d0ff7c89fe6a47b2,2020-01-05 15:23:42,Phil Crosby,Update the instructions for getting the firefox version,False
19a5344d2bc3f2385ce61d71e7218386c5e961e0,2020-01-05 15:21:47,gdh1995,"fix a typo

This fixes #3174.",False
9ed847277ea8a85fb880d56659a3e640410d749c,2020-01-05 15:19:16,gdh1995,check last FindMode query correctly,False
50fe63faef39d325acb7be8e3ac2ebe95f93fe4c,2020-01-05 15:13:19,Phil Crosby,Add a comment,False
d8fb235694dffc156cb6361db32e9cb441776288,2020-01-05 15:11:05,gdh1995,show a log in console if grabBackFocus works,False
38e87667bd1eb2eaf728f249045baa9e6c6d6d37,2020-01-05 14:54:05,Phil Crosby,Add a comment,False
ec2bb519871e2ebcc60b102c39940b9d956e89f1,2020-01-05 14:52:13,Phil Crosby,"Merge pull request #3288 from gdh1995/scroller-listen-click-on-firefox

Scroller: listen click events on Firefox",True
ab3c49d187478b1dddb11e55cd3e248bb2263cc1,2020-01-05 13:09:05,Phil Crosby,Move release notes section to a separate file,False
7262fe8fc60a09b569a94002a91cb4fff8a10d57,2020-01-05 13:05:45,Phil Crosby,Fix typo,False
a260e61f7aee73b4944e2c27c26a4503d8be9f6a,2019-12-12 10:34:06,Shanmugam MPl,Search completion; fix Merriam Webster autocomplete,False
9f1a0e6e60d09f4a0e2f065fbb80da46551c640d,2019-12-12 10:28:53,Theodore Dubois,Traverse shadow DOM to find links,False
4306c0100f000980ea7ed7144e203992938e6dd4,2019-12-12 10:20:51,Phil Crosby,Tune the contributor guidelines,False
d418ef62733b3f595d5c39e9f34dcac9972751f4,2019-12-12 00:35:56,Phil Crosby,"Merge pull request #3404 from mwanchap/buildfix

Fixed failing build by rewriting path.join call in phantom_runner",True
0e3089e4a1bb2e87d08065aff9558313431c87a3,2019-12-11 16:05:19,Phil Crosby,"Create pull_request_template.md

A template for pull requests, to ensure they're complete.",False
673a0025d9f00700dd6d0d35d445a507d83d57f6,2019-12-11 13:26:12,Phil Crosby,Update contributor guidelines,False
882268897ac67435f289d641224811fea8860b65,2019-12-11 12:54:05,Phil Crosby,Update issue templates,False
f5f58353197fbcc01091076975d712c5786d23a2,2019-12-11 12:51:30,Phil Crosby,Update issue templates,False
0cfb95365ac5270299ff230206799e7290f36ca3,2019-12-11 12:49:42,Phil Crosby,Update issue templates,False
55232aef2891b8a89157bd5f122cae2a9c6c24a1,2019-12-09 12:57:22,Phil Crosby,"Merge pull request #3437 from gdh1995/inject-javascript-urls

[Enhanced] Execute ""javascript:"" URLs by injecting them into the page itself.",True
e7b7c8186bd73aa1d7667a3749cb4f593bac4c92,2019-11-27 16:11:50,gdh1995,fix my typo,False
7288b6bf7af79f89ab4e9559ea1d49c10dc9835a,2019-11-25 09:09:28,gdh1995,injectUserScript: try to decode URI,False
0d8792744cd15b388a3cd56962096c2abfd414e7,2019-10-09 01:32:11,Matt Wanchap,Removed path.join call in phantom_runner to fix failing dom tests,False
8c9404f84fd4310b89818e132c0ef0822cbcd059,2019-05-21 13:20:03,Phil Crosby,"Merge pull request #3327 from zurbrugc/master

Fixed Reddit scrolling",True
ec32ad1bd900371138b643a6f6fa0eb445fada2e,2019-05-21 03:11:52,zurbrugc,"Attempt to fix Issue #3119

reddit.com and new.reddit.com had special scrolling properties, but not www.reddit.com. This fix should allow users to scroll properly on reddit's redesign on all addresses.",False
5d1bd708791e2415d6ccf1d9294a7ec073ce3ce4,2019-05-12 13:04:44,Phil Crosby,Bump version to 1.64.6,False
2b23e490cac845bf276e49b850745344b18735cc,2019-05-12 12:40:43,Phil Crosby,Update some comments,False
1539f47071ca3465edae4553961caef5d5bd4b6f,2019-05-12 12:31:47,Phil Crosby,"Merge pull request #3277 from gdh1995/fix-focus-of-hud

fix broken copy, paste and showFindMode since Chrome 74",True
0fa114f71f0e72a54865137cf581cd4212ac2486,2019-05-11 08:52:22,gdh1995,noop: extract a constant and add comments,False
d6d5473919ca89c8ac0eeea09fb2edac87a38ed9,2019-05-09 10:37:28,gdh1995,noop: add some comments,False
abcea7ce7e1d21449e60c8f6e75010d10ff4579f,2019-04-28 03:24:13,gdh1995,"force a style update before HUD posts a message

See https://github.com/philc/vimium/pull/3277#issuecomment-487322100 .",False
ac9c5703910a351716bdb0991db443209ee994c7,2019-04-23 22:33:26,gdh1995,wait 17ms so that it works again on Chrome 74.0.3729.108,False
afe8e861e4d3910198e1c4d0d961eef82262badf,2019-04-05 20:54:28,gdh1995,"Scroller: listen click events on Firefox

on Firefox, there're no DOMActivate events, so click is needed",False
a64f60bd87e4174a38cd353c4fb51a05bcdf59ff,2019-03-23 22:58:40,gdh1995,"a try to fix broken hud.*** since Chrome 74

During tests I found that a setTImeout is needed.",False
3ed13fa2371910a0826abb100fea0959edb703e4,2019-03-19 19:34:16,Stephen Blott,"Fix pass key handling.

Assume `x` is a passkey.

`zH` and `zL` are mapped as usual.

Then in the sequence `zx`, `x` should still be a pass key.

This fixes that behaviour.

Fixes #3271.",False
729d7efaa0cf545263564e82bf5e81e492f9d63d,2019-02-17 20:51:21,Stephen Blott,Fix date in release notes.,False
c0b3a20e8183af30c2ab602d941a4e9b075e38f7,2019-02-16 15:49:29,Stephen Blott,Emergency bump to v1.64.5.,False
af4f033ebac137d6dae79858dc7dd036481e1184,2019-02-16 11:43:56,Stephen Blott,Bump v1.64.4.,False
df867ac451f49a5b033767d6bd87b21bf56c37cf,2019-02-16 11:40:26,Stephen Blott,"Merge pull request #3246 from gdh1995/focus-after-setTimeout

delay window.focus() when needed",True
c8596d23d867cb6a421f44fca44f09ec0d000cc8,2019-02-16 10:05:57,gdh1995,noop: use nextTick,False
dc2bff8e5f826e5035cb93ece5637936bda644cd,2019-02-16 09:58:15,gdh1995,"delay window.focus() when needed

On Chrome, if an extension's content script call window.focus()
  during Port.onMessage handlers, then Chrome will activate the tab.
Therefore there's a race condition causing #3242.

In my tests, a `setTimeout` is just enough to avoid this activating.",False
af673648d47cb2770aeeb34a92e5c95cde31d316,2018-12-27 12:57:51,Stephen Blott,"Execute ""javascript:"" URLs by injecting them into the page itself.

Since `chrome.tabs.update()` no longer supports `javascript:` URLs, here
we inject them into the page itself.

Replaces #3167.
Replaces #3209.
Fixes #3178.",False
e281bc95820ee011135ae2dd64277eb992dd6e8a,2018-12-26 15:59:14,Stephen Blott,Bump v1.64.3,False
7480c8576c8e39284d3b503d9078119c632f25b2,2018-12-26 13:54:43,Stephen Blott,"Merge pull request #3201 from teddywing/fix-h-l-left-right-scrolling

scroller.coffee(performScroll): Fix `h` `l` horizontal scrolling",True
070e4172b9fec44e796fc326f429ce6f1cac3c69,2018-12-26 13:14:16,Stephen Blott,"Show HUD message for mute command.

Fixes #3192.",False
21f3e67ac329cf660d27926ffa089be9963291db,2018-12-26 13:08:00,Stephen Blott,Add message type to show message in HUD.,False
17a3a6e965328912ac834c8e6a88ad1cf484420a,2018-12-26 12:38:07,Stephen Blott,"Merge pull request #3188 from raboof/documentFirefoxDebugging

Document how to debug under firefox",True
6445135302f984600d7f0c15ad8087f6281a260b,2018-12-16 21:40:59,Teddy Wing,"scroller.coffee(performScroll): Fix `h` `l` horizontal scrolling

When scrolling horizontally, `axisName` has value `""scrollLeft""`. Since
this line checks against value `""x""` it would always fail, causing `h`
and `l` to scroll vertically up and down respectively.

Use the `direction` argument in the condition instead, which is set to
`""x""` when scrolling horizontally with `h` and `l`.

This fixes horizontal scrolling using `h` and `l`.",False
bd0c2114b9dd0617919d713c13658a36b87e2749,2018-12-16 13:22:29,Stephen Blott,Bump to 1.64.2.,False
451ef4e357f45d1a965cdda1788e87600b6a5b23,2018-12-16 13:19:36,Stephen Blott,"Merge pull request #3175 from gdh1995/shadowDOMv1

use Shadow DOM v1 if it exists",True
43310a0c1173c0d7694f43559471602c165932c1,2018-11-19 13:46:30,Arnout Engelen,"Document how to debug under firefox

Needs an application ID to use local storage, will fail otherwise.",False
5307f07729f2a35debbee6ef8c5f09493a8b81bf,2018-10-28 09:23:27,gdh1995,fix a small typo that attachShadow needs an argument,False
acf09d2285b47d5849b4315ac698182dad7e9c13,2018-10-28 09:15:14,gdh1995,"use Shadow DOM v1 if it exists

Chrome 70 has deprecated Shadow DOM v0
    and displayed a warning when it's used.
And accroding to https://www.chromestatus.com/features/4507242028072960,
    Shadow DOM v0 will be removed since Chrome 73.

The support for Shadow DOM v1 has been there since Chrome 53 and
    is enabled by default on Firefox 63,
so it's time to use it.

Old support is still needed because Vimium's min_chrome_version is 51.",False
7c77b9bef6720283b04f6253b5e3cec0c7612b15,2018-10-06 15:37:40,Stephen Blott,"Do not try to findNext unless we actually have query text.

Fixes #3154 (I think).",False
9f38c2fef8286f0d59e5cd90db821aafdb5a192c,2018-09-29 10:57:52,Stephen Blott,Note %S in search engine URLs for search engines.,False
5bb27d1a31ff92189e6daeb361a85287b6a8e9e2,2018-09-29 10:55:56,Stephen Blott,"Revert ""Note %S in search engine URLs for search engines.""

This reverts commit bec8bf9287679221bf30a31707dcb58fbdd033d3.

Oops.  I put this comment in the wrong place.",False
bec8bf9287679221bf30a31707dcb58fbdd033d3,2018-09-29 10:54:55,Stephen Blott,Note %S in search engine URLs for search engines.,False
e49d9b47e6c4978a0f034acfc529111fbf387b1b,2018-09-29 10:50:20,Stephen Blott,"Merge pull request #3111 from gdh1995/use-scroll-by

use Element::scrollBy if it exists",True
f2ab8bee6e1fa8d9b34837c934e6b8ec0cb7abc9,2018-09-29 10:40:12,Stephen Blott,"Don't note %S on options page.

This is too much information for the casual user.  I'll put it on the
Wiki instead.",False
4ba071add3917bef54a0312065687bfd7a84f27d,2018-09-15 01:11:55,Ryan Perry-Nguyen,Move and fix test for feature,False
4da579382e4c9e2429592cd8f947ab914875e44e,2018-09-15 00:54:59,Ryan Perry-Nguyen,fix logic for appending %s to searchUrl,False
b6c01bd2a28d091caa25f1c88ac4994effb7b077,2018-09-14 22:54:37,Ryan Perry-Nguyen,add %S disclaimer on options page,False
2ee06443f4cfc72445625c2a09238866a82059f5,2018-09-14 22:43:20,Ryan Perry-Nguyen,dont queries for %S replacement,False
880b64b0caeb73b0803034f4a27bde78c66d2eaa,2018-09-05 15:04:25,Stephen Blott,Not change re. yanking email addresses.,False
881a6fdc3644f55fc02ad56454203f654cc76618,2018-09-05 09:27:40,Stephen Blott,"""Make yf strip any leading ""mailto:"".

When yanking an email URL with `yf`, it's likely to be more useful to
strip the leading ""mailto:"".

Fixes #3123.",False
0c1c9aec195889b7ce8a26dff637179e395e7a89,2018-09-04 19:55:30,Stephen Blott,Note scrolling on GMail reverted.,False
12952674a9233fca4d46d85d896f6c5fb008fd2e,2018-09-04 19:47:05,Stephen Blott,"Revert ""Add special-case rule for GMail.""

This reverts commit aff380669445594e7566a835d4b27f11da26ea6a.

This breaks scrolling on Twitter.

Needs more thought.",False
339f37fb5c19f5129c7757294d8c5968be9c9db2,2018-09-04 17:46:28,Stephen Blott,"Use function directly.

If Vimium becomes disabled, then we remove this listener.

So we better add the actual function we want to (later) remove, rather
than creating a new function (which will never be removed.",False
09b6be12a1eb7fa839509b1e7fa9fb594827cf3e,2018-09-04 17:25:58,Stephen Blott,Bump to v1.64.1.,False
aff380669445594e7566a835d4b27f11da26ea6a,2018-09-04 16:23:01,Stephen Blott,"Add special-case rule for GMail.

This selects the body of a message, if such is displayed.",False
f86e611e1a1cb87cd5b6757fb0000c9342b5b4c3,2018-09-04 15:37:52,Stephen Blott,Merge branch 'marcotc--new-reddit-scroll',True
72aaf054201755f837ba84f26a4d74846a81ffba,2018-09-04 15:33:32,Stephen Blott,"Tweak #3119.

1. Use verb phrase for function name.

2. Add `Scroller.reset()` method.  This *only* resets the activated element.

3. Reset the scroller only if the URL has changed.  (Previously, in #3119, the scroller was also being reset when the tab gained the focus.)
   Based on a suggestion from @marcotc.",False
256547a940b5ac182ba014add8f1fd234baa3a65,2018-09-04 10:21:22,Marco Costa,"Refactor, part 1",False
f08ecd4ddc55f4a6a17d66590ba57e770eb6f499,2018-08-31 12:05:11,Marco Costa,Handle scrolling on Reddit redesign,False
299c3684ceec423e3c7b405ef629b441efb1f336,2018-08-31 11:02:52,Stephen Blott,"Merge pull request #3118 from marcotc/patch-2

Instructions for local Vimium Firefox development",True
9ffe60058fc1315b0164f2e9d7aca1f28aa30162,2018-08-31 10:42:23,Stephen Blott,"Merge pull request #3117 from marcotc/patch-1

Add CoffeeScript v1 requirement to CONTRIBUTING.md",True
2cf95b7ddf03b21918a270244d8c2dfef0fc720d,2018-08-31 10:41:22,Marco Costa,Instructions for local Vimium Firefox development,False
2275967351c0daf67cb20e307a30cda4a96fbc57,2018-08-31 09:30:14,Marco Costa,Update CONTRIBUTING.md,False
d77553e59a11dd1d87ab80222fc165c9776fa07c,2018-08-31 09:27:20,Marco Costa,Add Coffeescript v1 requirement to CONTRIBUTING.md,False
12ab37b8bc78996443d142d8ef28ee47f725716c,2018-08-30 18:38:31,Stephen Blott,Bump version to 1.64.,False
95bb1d278ad976e5fce0441d9e452762aaaf0a74,2018-08-30 18:36:40,Stephen Blott,Note #3099 fixed.,False
693bcb20d7dfb1beceb7e175c1faf62903bbe94b,2018-08-30 18:32:52,Stephen Blott,"Merge pull request #3113 from smblott-github/fall-back-to-event-key

Fall back to using event.key.",True
37106c9ca114ecbcabf2841b53d1fd21ebcb1f04,2018-08-30 18:31:21,Stephen Blott,"Fall back to using event.key.

If `event.code` is not defined, then fall back to using `event.key`
instead.

Fixes #3099.",False
117dd20cc60030d79bc79d793ff3de4ea5514ad1,2018-08-27 19:36:00,gdh1995,use Element::scrollBy if it exists,False
3267b00cf98082213d754bb817e9d56e47998dfb,2018-08-23 17:05:11,Stephen Blott,Bump version number for minor release on Vimium Canary.,False
fcb36fca08e8e2266600e836c4451e884da96c31,2018-08-23 17:04:38,Stephen Blott,Tweak Twitter CSS selector.,False
891b4a0cec93a2b314be2fb037d3c0cd5cf43f5c,2018-08-23 15:30:38,Stephen Blott,Bump version number for minor release on Vimium Canary.,False
939427c2fd9e308963582d8d14b2523ed41a05b2,2018-08-23 15:29:05,Stephen Blott,Note #3101 in README.,False
086df70918056ac1e842bf124d052c6c0eb6920c,2018-08-23 15:28:00,Stephen Blott,"Merge pull request #3101 from smblott-github/twitter-hack

Site-specific hack to make expanded tweets scrollable.",True
d4a409d64bba9b23545e26935c35c60c6b4dd301,2018-08-23 15:26:55,Stephen Blott,Update change log in README.,False
922ec56512a897627e3669ff4ba16118a4423453,2018-08-23 15:21:09,Stephen Blott,"Site-specific hack to make expanded tweets scrollable.

Twitter is an important site and Vimium's scrolling is currently broken
when a tweet is expanded.

In my opinion, the existing bahviour is so bad and that a site-specific
hack is warranted.

Fixes #3045.",False
a4a9c4e4625b6a5ad0622a3a84a096238969b13c,2018-08-17 19:18:14,Stephen Blott,togglePinTab command should take a count prefix.,False
73dfd9f276579c28c3f93033e12f0a24e8103af6,2018-08-17 19:13:54,Stephen Blott,"Refactor...

Refactor code for selecting the tabs to which a tab command with a count
prefic should apply.",False
db3c4820fc826ed13e70aab3acee325dfe907f09,2018-08-13 18:23:33,Stephen Blott,Bump to 1.63.6 (bug fixes).,False
f932d71ac06ac265c436079cd53fa8f44ab898be,2018-08-13 18:22:06,Stephen Blott,Bump to 1.63.5 (bug fixes).,False
df3eb554e934f2b7764dea064a90e0cee36d429e,2018-08-13 17:56:54,Stephen Blott,"Cache keydown events while launching link hints.

Launching link hints can sometimes be slow.  For filtered hints, the
user already knows what to type - but must nevertheless wait until the
hints have been calculated and rendered.

Here, we cache intervening keydown events, and replay them once
hints-mode proper is launched.  This should make improve usability (in
the case of filtered hints).

Fixes #3050.",False
43fe8cecdfb4f82f5d1d5f25520cd86a44824c67,2018-08-10 20:44:32,Stephen Blott,"Tweak #3079.

Fixes #3068.",False
3134c397979b364a3def159757ec88c9e36cfaea,2018-08-10 20:34:16,Li Fang,"Fixed #3068

Fixed frustrating IME leftover issue when press ESC in input",False
342723bbef945492fbbe80069edd04f0fb2ca67e,2018-08-10 18:46:19,Stephen Blott,"Merge pull request #3057 from ris58h/issues/3054

Issue #3054",True
a34083ed954019fafd27b4fe355c07472c5eac4e,2018-08-10 17:57:17,Stephen Blott,"Merge pull request #2217 from gdh1995/replace-xA0-for-clipboard

replace \xA0 on copying and pasting",True
cd9721d184cdcee1a77e81746a1203adeae2ff4f,2018-07-03 03:05:26,ris58h,Hide Vomnibar in case of click on entire document instead of click on document.body.,False
17fb86e02971948f90215934cbe5417674364a29,2018-06-18 14:43:27,Stephen Blott,Bump version number for canary release.,False
1cb2d9b015a212b5e265589a70d7c39db568c4a8,2018-06-18 14:42:09,Stephen Blott,Note #3044 in README.,False
16f9249c9d0fb10a3930ee5a52b423fc2d5396a3,2018-06-18 14:40:09,Stephen Blott,"Merge pull request #3044 from smblott-github/local-marks-using-hash

Use hash (too) for local marks.",True
4cf37b5c5e9ba7b8e4b4c72a960761624d8151e8,2018-06-15 20:11:22,Stephen Blott,"Use hash (too) for local marks.

First, I *very rarely* use local marks.  They just don't seem as useful
in a browser as they are in a text editor.

However, on a page like GMail, I do often want to jump back and forward
between my labels.  These are different locations hashes (anchors).

The idea here is to make local marks useful for this case.

If the scroll positions (X and Y) are both 0, and the hash (anchor) is
present in the mark and non-empty, then change the hash instead of
scrolling.

On first tests, this appears to work nicely for changing labels in
GMail.  I'm sure there are other uses.

This change shouldn't interfere with use cases where the user has
scrolled within the page.",False
5745bb344959a61297fc16e00bb6de0a2a8744d9,2018-04-01 12:16:49,Stephen Blott,Disable click listener detection and bump to v1.63.3.,False
29838028148a18bfa905e7487c91b83d86533374,2018-03-09 12:25:57,Stephen Blott,"Merge pull request #2981 from hackel/patch-1

Explicitly set background colour for input fields",True
7fa6eb0a60c3d69a6347b48b0b8c7848fc65c436,2018-03-09 00:26:15,Ryan Hayle,"Explicitly set background colour for input fields

This is a simple solution to #2832 that explicitly sets the background of text input and textareas to white on the options page, which is necessary for users running with a dark theme.  This does not cover the options popup.",False
011c8991184f10839d7afa1ff8d7bfad0d6bd968,2018-02-24 13:14:32,Stephen Blott,"Merge pull request #2968 from smblott-github/fix-2967

Escape [ and ] in hostname in popup.",True
17425d7187a96f8f7cdd15723f21220733e64c78,2018-02-24 13:07:55,Stephen Blott,"Escape [ and ] in hostname.

From URL:

    http://[fe80::cce4:1680:e720:eacb]:8080/index.html

generate:

    https?://\[fe80::cce4:1680:e720:eacb\]:8080/*

in the popup (note that [ and ] are now escaped).

Fixes #2967.",False
bef8788805bc3e09de432f8642b54fccf3591947,2018-02-23 19:06:21,Stephen Blott,Bump to v1.63.2.,False
1bfe474a95f8eb23060cd42ff088146b5463dc62,2018-02-23 18:27:07,Stephen Blott,"Do not search in all frames.

Chrome has never searched in all frames, so this is no loss.

However, find on Firefox Quantum is now broken with the ""all frames""
flag set.

Fixes #2962.

H/t: @gdh1995 (https://github.com/philc/vimium/issues/2962#issuecomment-367991086).",False
4d7730fcbf820fe2e59ade8b352b92c3c240c194,2018-02-23 17:57:28,Stephen Blott,"Merge pull request #2966 from gdh1995/blur-find-input

on FindMode exiting, blur input first",True
62c5a4aed291f265e1b799538cee3d224d24f73f,2018-02-23 17:47:23,gdh1995,"on FindMode exiting, blur input first",False
fed487f7975d185977991ce3ebc7c254b6e22f56,2018-02-22 18:17:10,Stephen Blott,"Remove _comment from manifest.

Apparently some versions of Firefox are baulking at unreconised
properties in the manifest.

See: https://github.com/philc/vimium/issues/2965#issuecomment-367659475.

Mention @KyleLS.",False
d01aacb45e3b1cfd5a4446c2fef5607e5f5f1996,2018-02-18 17:55:18,Stephen Blott,"Refactor URL launching from Vomnibar.

It's slightly strange how the classes and objects are structured in the
Vomnibar.

However, this refactors the code for launching URLs (including
Javascript URLs) such that we're not repeating the logix in two separate
places.",False
a5c407e2ee4a0665a35318fa41c413dca0f597d8,2018-02-18 17:19:32,Stephen Blott,Note javascript: custom search engines.,False
c106c12add1667922d7778b243cd2e44065f7832,2018-02-18 17:16:50,Stephen Blott,"Merge pull request #2961 from smblott-github/javascript-URLs-for-custom-search-engines

Allow javascript: URLs for custom search engines.",True
6cef4caf7a21fdf7e8b52a6d8145d024c3ca6d19,2018-02-18 17:06:51,Stephen Blott,"allow javascript: URLs for custom search engines.

For example, search the current site:

    cd: javascript:location='http://www.google.com/search?num=100&q=site:'+escape(location.hostname)+'+%s'

Apparently an example like this has been on the Wiki for four years, but
it has not been supported.

However, the change is so trivial that it's worth doing anyway.

Fixes #2956.",False
509d93f88112e0bfd0a47ac454e897156f00da14,2018-02-18 15:11:25,Stephen Blott,Bump to v1.63.1 (Firefox only).,False
75ed0d3d0fde690c4a3fbdce98f28d02309878bf,2018-02-18 15:08:41,Stephen Blott,"Merge pull request #2960 from smblott-github/fix-firefox-link-hints

Fix Firefox link hints.",True
1aeaa8dfdc862ec9839a67fb131f841b744d0aaa,2018-02-18 14:58:34,Stephen Blott,"Fix Settings failure in Firefox iframes.

This was failing in iframes in Firefox (causing all sorts of other stuff
to fail).",False
62e5327676ca9c315259937915fdeebbaf181dc1,2018-02-18 13:07:49,Stephen Blott,Remove console.log()s.,False
d9f798998b2239b59806b34df9f8b57f11365e41,2018-02-18 13:03:06,Stephen Blott,"Fix Firefox link hints.

Fixes #2958 (probably).

This appears to be correct for target ""_blank"" (or not) and modifiers
(or not).  That's four cases.

It will be *incorrect* if there is a click listener on a target ""_blank""
link.  Some conditions are tested to try to prevent that from happening.

This only affects Firefox.  Chrome is unaffected.",False
9a5c2802a941a66b6dea4089352314a6e7a3c95a,2018-02-16 15:05:33,Stephen Blott,Bump to v1.63.,False
e0d46eeb26e118e1131782df40c3bebcc6e0b7cf,2018-02-16 15:03:59,Stephen Blott,Note count prefix for reload command.,False
b90afbc2c55d172fedb9957c3781a0a629a63431,2018-02-16 13:01:21,Stephen Blott,"Remove ""focused: true"" from winConfig.

According to:

  - https://bugzilla.mozilla.org/show_bug.cgi?id=1253129

and #2896, this:

1. causes Firefox to crash, and
2. isn't actually necessary.

So just remove it.

H/t @ris58h in #2896.",False
dc68113c223babd75d808d32d318f69cc85b3b41,2018-02-14 15:07:58,Stephen Blott,"Merge pull request #2951 from smblott-github/add-count-for-reload

Make the reload command accept a count.",True
b9a84b2edf83c74de89c128b1a31a08982b41e32,2018-02-13 23:42:58,Stephen Blott,Update README.md.,False
b11b95d67ffd794654dd6218ef99b3ac70088612,2018-02-13 20:19:03,Stephen Blott,Update README.,False
2128ef3a4b6bb989323200578b230dfb1e178c2e,2018-02-13 20:13:25,Stephen Blott,"Make the reload command accept a count.

Move the `reload` command to the background page and make it accept a
count prefix.

Fixes #674.

Althought the demand for this is low and the use cases limited, it is a
very vim-ish extension to the existing command.",False
43786d3024fa21663480fe76b9a122b3d8325f55,2018-02-08 12:11:42,Stephen Blott,"Merge pull request #2949 from AlliedEnvy/patch-1

tabConfig -> winConfig in openUrlInNewWindow",True
92383c4ac41596adeac96dfb324f7cb716fd2f26,2018-02-08 07:17:37,AlliedEnvy,"tabConfig -> winConfig in openUrlInNewWindow

tabConfig doesn't exist in this scope.",False
f7149719a2e9944d4ffd65019857b318a0e2dc46,2018-02-06 20:27:39,Stephen Blott,"Include backup/restore as advanced.

Follow on from #2750.

Specifically, the backup/restore functionality should be part of
""Advanced options"".",False
065b57d30d56c5375b2ac0c06b04bd8bac0a3cf6,2018-02-05 15:57:01,Stephen Blott,"Create flash frame Shadow DOM element on demand.

It looks like we'll be initialising the Vomnibar on demand (see #2939,
merged).  In this case, we should also initialise the flash frame on
demand.  This means that *none* of Vimium's UI elements are now created
until they are needed.",False
f3ea08b2e8f22e21e9ff561ecc80dccd6c9f2962,2018-02-05 15:55:15,Stephen Blott,Fix tests.,False
1d961d5dacb71638690d06e91866d121e43edf9c,2018-02-04 20:47:39,Stephen Blott,"Handle <Enter> on keypress (not keydown) in Vomnibar and HUD.

Proposing this as a simpler alternative to #2934.  Additionally, this
puts the logic for fixing #2915 in a single place.

Credit to @regmarmcem for figuring out the source of #2915.

Mention @regmarmcem.
Fixes #2915.
Replaces #2934.",False
aa1e81193140586bc64e4c8ef68210486e95c2fc,2018-02-04 18:27:01,Stephen Blott,"Bump subversion 1.62.10.

Well release those on Vimium Canary, in particular to trial #2939.",False
5801e6d2533edd9484b0fa8ced8a9fe933b8ac7e,2018-02-04 18:08:49,Stephen Blott,"Merge branch 'gdh1995--hook-to-string'

This is #2941.",True
a5e0f989c3f02c2bbe16517ae67a3e151860c1cc,2018-02-04 18:07:58,Stephen Blott,Tweak #2941.,False
3a4db76703e852670ca1078b2205edffcaa3efcf,2018-02-04 15:19:10,gdh1995,make the hooked addEventListener looks native,False
a61b8202815373775ea2d068ee9ac30bace62ae0,2018-02-04 14:32:37,Stephen Blott,"Merge pull request #2939 from smblott-github/disable-preload-vomnibar

Disable pre-loading of Vomnibar iframe.",True
05774be991df4c645ef0a8ad0fe69cf7beb5fcc5,2018-02-04 14:31:17,Stephen Blott,"Merge pull request #2940 from smblott-github/disable-ignore-case

Remove \I (ignore case) flag for find mode.",True
1d84edc0b2fce08034316c1665b6dc75d32d9ee6,2018-02-04 14:27:32,Stephen Blott,"Remove \I (ignore case) flag for find mode.

It appears that nobody is using this (and it is broken).  So this PR
removes this feature.

Fixes #2937 (kind of).",False
d15f4a13c273934000173562cfa0f2b4c936c6f7,2018-02-04 14:20:27,Stephen Blott,"Disable pre-loading of Vomnibar iframe.

Pre-loading the Vomnibar iframe seems to be causing some issues with the
dev console.  This PR disables pre-loading of the Vomnibar.

I'm going to try this out for a while.  If it doesn't seem to sluggish,
then I'll merge it.",False
335be2acf9fd6c9f1a2c706e2d0eebd496c43d04,2018-01-28 13:49:46,Stephen Blott,"Merge pull request #2932 from gdh1995/blur-vomnibar-input

on vomnibar hiding, blur input first",True
f669001182df79cc75d35e074617fef30209fc7c,2018-01-28 13:34:40,gdh1995,"on vomnibar hiding, blur input first

This should fix an IME status issue (#2924).",False
a461d8d5ecd1aee1ae4cd28b1e0d12dc04adc152,2018-01-19 16:30:44,Stephen Blott,"Fix bug on hashchange event.

This handler is undefined at the point that it is installed.  The
definition is at the bottom of the file.",False
50b61b864e90b3c5c794e76bd8babe51587138d3,2018-01-10 23:17:23,Stephen Blott,"Merge pull request #2910 from The-Compiler/patch-1

Fix issue reference",True
bf47b815ae7275131d24bc36a2a96b00a0ec2dcc,2018-01-10 22:51:27,Florian Bruhin,"Fix issue reference

This sounds like #2035, #2305 is unrelated.",False
7b83828ac69e521327eb036fe2f2db5fd869631a,2017-12-19 20:26:10,Stephen Blott,"Merge pull request #2877 from smblott-github/fix-ff-opening-multiple-tabs

Do not open tab for target ""_blank"".",True
44e65ef9d9faad5cbd18181c9158c591ec57605f,2017-12-19 15:08:50,Stephen Blott,Bump to v1.62.8.,False
d9b6d5e18839d1af509d859af5faed880f43fe1e,2017-12-18 18:33:54,Stephen Blott,"Do not use vimiumOnClickAttributeName variable...

... use literals instead.

For some reason, on Firefox, using `vimiumOnClickAttributeName` was
causing link hints to fail silently (on Facebook).  It's not at all
clear why this was happening.

Simply repeating the literal fixes the issue.

Fixes #2879.",False
ab8783f1e3a60cb806f982d9b1616293a0f6613d,2017-12-18 15:43:14,Stephen Blott,Bump to v1.62.7.,False
1a9d1efc3dc81aa36fec0bf4af84fe9e0c0a2dde,2017-12-18 15:39:55,Stephen Blott,"Tweak hint scoring for filtered hints.

This tweaks the scoring of hints for filtered hints.

Specifically, it scores matches at the start of the text or the start of
a word higher than whole-word matches.

This is intended avoid the phenomenon whereby adding matching characters
to the filter causes the selected hint to change.",False
1b23f70fa75592422056342cd7d9297d0804ea3f,2017-12-16 16:54:12,Stephen Blott,"Do not open tab for target ""_blank"".

Fixes #2860.  That issue reports that, when the target is ""_blank"",
Firefox/Vimium ends up opening two tabs.",False
b6a0bd0cf29fc3621f4c337616ed119f239c0ed0,2017-12-16 16:37:22,Stephen Blott,"Guard against failure.

Since these are executing in the page's context, they could break the
page if they were to fail (for whatever reason).  So we add some
(possibly unnecessary) guards, just in case.",False
5bee52933e10eef59a6b29417785239707b0a57c,2017-12-16 12:26:31,Stephen Blott,"Custom CSS should reset when empty.

Fixes #2876.",False
77c6fe5180736370cbffdbafbd4d01d6cf99aad4,2017-12-16 12:23:03,Stephen Blott,"Fix rotate hints for filtered hints.

We should rotate on `<Shift-Space>` too.",False
3d9fcc58a04de50821f2457f66159425b50c4eb5,2017-12-15 18:51:49,Stephen Blott,Better names of these distributions.,False
1b0e0072d9fe31e468c2f6697ba24c6ed147e30e,2017-12-15 18:38:08,Stephen Blott,"Bump to v1.62.6.

This warrants a bump because 14f755cecdd548ba9fb82a04d3b708c75982a786 is
a serious bug.",False
14f755cecdd548ba9fb82a04d3b708c75982a786,2017-12-15 18:14:44,Stephen Blott,"Fix #2871.

This omission was causing link hints not to work on Google's Inbox (and
presumably elsewhere, too).",False
1812e5928ddd104c58352c36906ae37e912ea1b0,2017-12-15 18:03:16,Stephen Blott,"Merge pull request #2874 from smblott-github/map-commands-as-lower-case

Treat all mapping commands as lower case.",True
c2f2dc4c9269ca3a114fce4a4e6ff6025e6ffa35,2017-12-15 17:55:40,Stephen Blott,"Treat all mapping commands as lower case.

On the options page, treat all user-defined mapping commands as lower
case.

Why?

- `unmapAll` is not very vim-ish, and is inconsistent with `mapkey`.
- If we were to introduce `vmap` for visual mode, then we would get
`vUnmapAll`, which is hideous capitalisation.

Possible down side?

- I guess somebody might have disabled a `map` by capitalising it.",False
2a2eff708e3880c5d3e29abfff3f2c863e3467e5,2017-12-15 15:56:01,Stephen Blott,"Bump to 1.62.5.

After merging #2870 and #2871.",False
8db85ce1c8c5f959981730a58ba351b3e49b0db2,2017-12-15 15:50:59,Stephen Blott,"Merge pull request #2871 from smblott-github/detect-click-listeners

Detect click listeners for link hints.",True
cbea71f4a41774ef91c384dc679f49d423f6c03b,2017-12-15 15:49:46,Stephen Blott,"Merge pull request #2870 from smblott-github/version-number-in-popup

Include the Vimium version number in the popup.",True
f184a34c692cfe1c1e6e2325989bea4dda518f87,2017-12-15 15:49:29,Stephen Blott,Better version number formatting.,False
3adf7385fe1cd5e9c3c3ac79f2b6cf4f2c55d99c,2017-12-14 21:40:43,Stephen Blott,Bump to v1.62.4.,False
13c9ecf11af81bf3ed807a961bcc43e6f1bd9814,2017-12-14 21:31:16,Stephen Blott,"Fix enabled state on webNavigation.

`forTrusted()` for `checkEnabledAfterURLChange()` after web navigation
is being called with a request (not an event).  So make the request
trusted.

The symptom was that pass keys and the enabled state was not being
correctly updated on web navigation.",False
f2d7e185c704e3cf8f6ca0c9d3d4da2498610475,2017-12-14 19:42:08,Stephen Blott,"Detect click listeners for link hints.

This is a simpler version of #1167.  It detects clickable elements with
listeners added with `addEventListener()`.

It includes some of @mrmr1993's ideas from #1167 (in fact, it's mostly
those ideas tweaked into a slightly different form).",False
a1116f10712bf5de4ec0e2f275e402bc3b3020bc,2017-12-14 18:11:26,Stephen Blott,"Include the version number on the popup.

Put the version number in the popup.",False
797e25231b306403167f5a3f90d6cea6d9ba6dda,2017-12-14 16:38:15,Stephen Blott,Change Dev to Canary.,False
1408c9c4b96e280faead06bff16235e7b9291b29,2017-12-14 12:58:42,Stephen Blott,Bump to v1.62.2.,False
4aa8d7fb21a26b0766ce32e3fab0cf1efcaa07fb,2017-12-14 12:53:57,Stephen Blott,"Fix createTab.

Specifically, fix createTab with multiple URLs specified.

Fixes #2868.",False
1e828ab451be7d8e0129f3d9d4eb5768b1a48c99,2017-12-12 18:50:44,Stephen Blott,Tweak markdown.,False
88b92f7b619be3dbd344f16f736a7da06659c765,2017-12-12 18:50:08,Stephen Blott,Tweak markdown.,False
544aee2b745307fa39d355ed14644c18de32e813,2017-12-12 18:49:29,Stephen Blott,Tweak markdown.,False
820880f4454a38a0314a3744aa4324b484cf2863,2017-12-12 18:48:05,Stephen Blott,Note 1.62.1.,False
379e06e1704901f2bf97f776aa1673450a69eb75,2017-12-12 17:58:24,Stephen Blott,Tweak packaging.,False
5328010a73c855d84673063c1cbb079aadbac228,2017-12-12 17:50:59,Stephen Blott,Re-work the package target.,False
fbfc1f48a6da516a6591f831774a147f643d5c3a,2017-12-12 16:20:32,Stephen Blott,Note mark swap and bump version number.,False
1199f5b7b096c7f8e2fab2034a3aa3ea795478af,2017-12-12 16:16:27,Stephen Blott,"Merge pull request #2371 from smblott-github/add-swap-option-for-marks

Add ""swap"" command option for marks.",True
fb38b9c17d32c40a5359f8d4fd2c5cbd38cfe630,2017-12-09 21:13:58,Stephen Blott,Fix typo.,False
ccf8e79a05f683d132cad1933a78c4a1c6a79d09,2017-12-09 15:15:27,Stephen Blott,Note FF copy/paste.,False
7ac0e2df1054105a4edfb9d241a65ba2b83f2545,2017-12-09 15:12:59,Stephen Blott,Bump to v1.62.,False
ba21230e29b9d4438fa6338d914c0616e253d084,2017-12-09 15:11:25,Stephen Blott,"Merge pull request #2852 from smblott-github/no-clipboardWrite-in-chrome-version

No clipboardWrite permission for Chrome Store version.",True
9b823db6aa871e18679fb13d9772eccaccfe2393,2017-12-03 20:13:48,Stephen Blott,"Merge pull request #2853 from mrmr1993/pr/link-hints-only-activated-frames

Small tweaks for popup message code",True
f32dfbfc650a873d1f91ac3fb21383fb02423c7f,2017-12-03 00:19:42,mrmr1993,"Only send link hints messages to frames which have registered

This puts link hints frame behaviour back to matching
fb00eaa6bd4ee8889d10a9ef9d976fefd3be7879

In particular, we go back to not sending link hints messages to frames
that are too small (according to DomUtils.windowIsTooSmall).",False
601aad57c843ff1368c5a9e152ea609431cac1a0,2017-12-03 00:12:35,mrmr1993,"Show browser-blocking complaint in the popup for empty portForTab object

To test the difference:
* load an unblocked URL (e.g. https://www.example.com) in a tab
* open the popup, see that the exclusion rules show as expected
* navigate the tab to a blocked URL (e.g. chrome://extensions)
* open the popup again

Before this commit, the popup still shows the exclusion rules, because
there is still a portForTabs object associated with the tabId.

This commit adds a second check to see if the object is empty, and the
message shows as expected, because all of the ports have been closed and
cleared from the object.",False
ff615efa9a41f1de5df1a6eea0e8a3c809f91b4b,2017-12-03 00:08:53,mrmr1993,"Ensure that a port can only unregister its frameId if it's associated

This is a more complete fix for issue #2125.",False
9c36c62fc881f923ee94a72cde95a1094a12723f,2017-12-02 21:43:15,Stephen Blott,No clipboardWrite permission for Chrome Store version.,False
b3fae0963056c085630c52609d11a048c5901bad,2017-12-02 21:16:53,Stephen Blott,"Fix link hints.

43c7390f987fea063e7a97cd8b37c7b61d45f615 inadvertently broke link hints.

Mention @mrmr1993.",False
fb00eaa6bd4ee8889d10a9ef9d976fefd3be7879,2017-12-02 20:32:43,mrmr1993,Use portsForTab to decide whether Vimium can access a tab or not,False
43c7390f987fea063e7a97cd8b37c7b61d45f615,2017-12-02 20:27:20,mrmr1993,Register ports for all frames that open them,False
e9fba3a6c1aa2979a4045f61c3d03ad9cefd9a4b,2017-12-02 19:45:30,Stephen Blott,"Note disabled in page popup.

On pages where the browser does not run extensions like vimium,
replace the popup with a note explaining what and why.

Fixes #2850.

Currently, this is unsatisfactory because, on the Chrome new tab page,
Vimium does not become active until the user tabs or clicks into the
page (which is weird).",False
23f66cd05183942dace41e0af61ca2908600f1d0,2017-12-02 18:40:09,Stephen Blott,"Merge pull request #2851 from mrmr1993/pr/insert-mode-shadow-dom-recurse

Recurse an arbitrary depth into shadow DOMs for insert mode element",True
e2f166dc63eb82bd1eab2d49548e69509b0f8374,2017-12-02 18:36:52,mrmr1993,Recurse an arbitrary depth into shadow DOMs for insert mode element,False
b7a1313954eb9125f7310d572c9b4615f7182236,2017-12-02 18:11:56,Stephen Blott,"Merge pull request #2846 from smblott-github/rework-insert-mode

Rework insert mode (check status dynamically).",True
3d05a7fed10b39d664912525091964d0258b711e,2017-12-02 18:11:23,Stephen Blott,"Merge pull request #2840 from GKFX/patch-1

Add shift to list of modifier keys in README",True
e32aaa80600140d2ee918549925ddd06ddb5f930,2017-12-02 13:38:52,Stephen Blott,"Do not initialise backup/restore on the popup page.

This was generating a (harmless) error on the popup page.",False
cbc3d21046f35c05bd3138cb0b8ac1309c718fe6,2017-11-30 16:09:15,Stephen Blott,"Rework insert mode (check status dynamically).

This removes @insertModeLock and instead always checks whether we are
in insert mode dynamically (as we previously did only for contentEditable).

@mrmr1993... Would you be able to check this, please?  It is intended to
be mostly a no-op.

Fixes #2841.",False
971d067f99ddc09b9ca388c2cffeadd32302c35a,2017-11-29 12:21:10,Stephen Blott,"event.code is not always defined.

While looking into #2841, I observed that we are seeing keyboard events
for which neither `event.key` not `event.code` is defined.  They might
be being generated by the page.",False
b5cd16bd04a382c6c0623d1a4ec6f84275bfc367,2017-11-26 17:49:38,George Bateman,Add shift to list of modifier keys in README,False
8f63e5fed000fcae50277e7886b828d9bc87da34,2017-11-25 17:07:49,Stephen Blott,"Tweak #2783.

Tiny tweaks...

1. The test is clearer like this.
2. Use a more CoffeeScript-ish approach to sub-string.",False
0ecf8c01b873d08d7f477a7d32ca2d55fefc74c4,2017-11-25 17:04:44,Stephen Blott,"Merge pull request #2783 from mrmr1993/use-HTML5-labels

Use HTML labels accessor to get link hint labels for input elements",True
61bae6c7daa371d1a3b7146d46b120775d888b7c,2017-11-25 16:59:21,Stephen Blott,"Merge pull request #2711 from pyarmak/master

Added UpToDate autocompletion engine",True
41d8bf1483b7386e1accc5f4c5b0ea870346258a,2017-11-25 15:27:25,Stephen Blott,Note upgrading requires permissions.,False
32b13ea15381b288917811181ec9df1b45e4271a,2017-11-25 15:21:40,Stephen Blott,"Remove background-page Clipboard operations.

These are no longer needed following #2601.

@mrmr1993... If these are ever needed again, then we can just revert
this commit (and make them background commands again).",False
16e147b976be187683ece3e28fbc8804c6b6d17c,2017-11-25 13:27:26,Stephen Blott,"Remove unused parameter.

Tweak of #2601.",False
042347150e455e73641c2af8bdc1084d6605fc62,2017-11-25 13:25:24,Stephen Blott,"Use mkRepeatCommand in main.coffee.

Tweak of #2601.",False
58f45ac17938e2984b3d3b83c8aed452f1287498,2017-11-25 12:59:09,Stephen Blott,"Merge pull request #2601 from mrmr1993/ff-copy-paste

Enable Firefox clipboard commands",True
c8a395481eeb950c8725e3d6e0fa58510cb407aa,2017-11-25 01:56:30,mrmr1993,"FF: Use a contenteditable <div> for Clipboard.paste

This adds support for pasting rich text from the clipboard",False
def334e3647136c23c8825d0f04a5f04eba3d9bc,2017-11-24 20:59:07,Stephen Blott,Merge branch 'mrmr1993-pr/link-hints-consistent-flash',True
b53999b4ce7ec03b3994c52ae33cb904ce686603,2017-11-24 20:58:08,Stephen Blott,Localise the logic for handling flash elements.,False
07e49297b567f1b836de4733140909daf6b47438,2017-11-24 20:35:07,mrmr1993,Remove unused callback parameter,False
8be9c399386049d9a44579f9be59aee9d525f8d8,2017-11-24 20:32:55,mrmr1993,Reintroduce default value for argument in LinkHints::activateLink,False
4a95a750c0642212c7907f3e8673013d473b2618,2017-11-24 20:31:37,mrmr1993,Flash the clicked element for alphabet hints,False
945d26a1c8685b7cbe30c63410ddde332a6346a5,2017-11-24 18:07:00,Stephen Blott,Note new createTab options.,False
e656801773a1feeb836f5f3c0e220b1585066015,2017-11-24 17:57:36,Stephen Blott,"Merge pull request #2836 from smblott-github/add-createTab-options

Add window and incognito options for createTab.",True
18b3419ad43ed06b88f26b30487002da4866b92d,2017-11-24 17:09:44,Stephen Blott,"Add window and incognito options for createTab.

Examples:

    # Just create new windows
    map X createTab window
    map X createTab incognito

    # Create windows with URLs
    map X createTab window https://developer.chrome.com/home https://github.com/philc/vimium
    map X createTab window URL1 URL2 URL3

`2X` creates two new windows, each with all of the indicated URLs.

Fixes #2825.",False
138a7b00d2458d34fdea4c00ae59f7bbfdc57c6f,2017-11-24 15:10:32,Stephen Blott,"Merge branch 'mrmr1993-simplifyTabCount'

Merging #2792 (mention @mrmr1993).",True
f93410695cf5b62014cc9e37c0978c0e992b058e,2017-11-24 15:05:31,Stephen Blott,"Retain @tabCount unchanged for non-printable characters.

Previously, @tabCount was reset on the `<Shift>` `keydown` event, which
defeats the purpose of #2792.  Also, the @tabCount was reset on other
non-printable characters such as `<LeftArrow>`.",False
44527f0526eace5546f2f2cb63eba946f25b8163,2017-11-23 00:18:45,Stephen Blott,"Merge pull request #2831 from mrmr1993/ff-india-times

FF: Reattach expando on every message to Frame",True
e46f88ced3575ca8045dfeae2cecc4755a902e23,2017-11-23 00:14:33,mrmr1993,Add a comment for Frame expando fix,False
4117c5030b3b101d977078125e9c075c43c83949,2017-11-22 23:59:13,mrmr1993,"FF: Reattach expando on every message to Frame

This fixes #2830: it stops timesofindia.indiatimes.com from failing due
to FF bug 1408996.",False
4f5667c427a1d14fc8c6eb3477eb58c69b467bf9,2017-11-21 01:12:23,mrmr1993,Unify link hint flash codepaths,False
48e556d2ea209c22485ee07710dbac2f32fe481f,2017-11-21 01:12:23,mrmr1993,Inline installKeyboardBlocker,False
291f52bc319e6790d8fbb1e0384c8c5d023e61c7,2017-11-21 01:12:23,mrmr1993,Tidy up multiple/redundant checks in LinkHints.activateLink,False
3f4c9638ac50f31de309b25be49cce4f06b65dc6,2017-11-21 01:12:23,mrmr1993,Use Rect.translate to create rects for addFlashRect,False
e8d0fe5f3f87b2ad753975a4485db348af7853fc,2017-11-18 18:11:04,Stephen Blott,"Merge pull request #2802 from mrmr1993/pr/link-hints-pass-non-printing-keys

Don't suppress default action for non-printing keys in link hints",True
ec95cc2573526355c336f0f11b45ee608470a78b,2017-11-18 18:10:47,mrmr1993,"FF: Show HUD (transparently) when pasting, manage focus changes better",False
9c1e90b32e5df1d4e3e6f9af006561184d8d81e5,2017-11-18 18:10:37,mrmr1993,FF: Add contentEditable to clipboard operation textboxes,False
448d609489f835162274f9ccef52918641927746,2017-11-18 18:10:36,mrmr1993,"FF: Use HUD frame for openCopiedUrlIn{Current,New}Tab",False
05604d8965da712b1709d0458fa1f3ca7a1d7f2f,2017-11-18 18:08:10,mrmr1993,FF: Use HUD.copyToClipboard everywhere,False
fb25b26c06eae7d00c6cfe81a7f8b9068724af03,2017-11-18 18:08:00,mrmr1993,FF: Refocus the parent window after focusing the HUD for clipboard ops,False
ac79e7500c06607e86d2dcfa4cb790b7ed5befe7,2017-11-18 18:07:58,mrmr1993,FF: Use HUD.copyToClipboard for copyCurrentUrl,False
5802b33654b5a0aeb7f331c6c392a1c61962f6ec,2017-11-18 18:05:35,mrmr1993,"FF: Add clipboardWrite permission, so we can copy to clipboard",False
976221f84b9694a5aa544eff8f084b78ce8c78d9,2017-11-18 18:05:29,mrmr1993,Initialize the HUD for clipboard operations if it hasn't been already,False
5f36adb083b86324923a9a316541a84448475dc0,2017-11-18 18:05:14,mrmr1993,FF: Add copy/paste functions to the HUD,False
72d7af375fbf4ba7fd300ae4602e45a0c2652e59,2017-11-18 17:58:59,Stephen Blott,Note reason for this rather obscure line.,False
e99e98561153f8b68376406de844cc1855c38c02,2017-11-18 17:57:52,Stephen Blott,"Merge pull request #2800 from mrmr1993/ff-aggressively-restore-window-expando

FF: Restore window expando on every event listener",True
026c90ccff6f40cdc370c11339cdfab4a5e6b7b9,2017-11-18 17:47:09,Stephen Blott,Make clear that element need not be provided here.,False
d6aa3547931fa3b27392cfb20ce49cee557d77dd,2017-11-18 17:45:43,Stephen Blott,"Merge pull request #2801 from mrmr1993/pr/search-for-scrolling-element-from-body

Start searching for scrollable elements from <body> instead of <html> whenever possible",True
8724b70d49a57070ce3064c71b12c3905b467f9d,2017-11-18 17:42:43,Stephen Blott,"Merge pull request #2817 from mrmr1993/pr/link-hints-use-mode-push-for-modifier-handler

Use Mode::push instead of manually removing a handler",True
5b10dfd7258ee4d403f8d570262038b69e044d41,2017-11-18 17:41:14,Stephen Blott,"Merge pull request #2815 from mrmr1993/pr/css-for-all-ui

Change description of CSS option",True
3735cffca60ce86a473df1a9fb5f959addb6ec18,2017-11-16 23:04:18,mrmr1993,Use Mode::push to handle adding/removing a handler,False
1512b4b5fad3872ec4f7efa6ee65af5d9ff82ba8,2017-11-16 18:11:12,mrmr1993,Change description of CSS option,False
64995cc4f4777a3b1899caaf2992862f9f02448b,2017-11-14 17:37:26,mrmr1993,"Don't suppress default action for non-printing keys in link hints

This restores the old behaviour prior to
c4cc76e9f6a0a99ebc297e420be739a0fc77f827 (PR #2772).",False
de0c06e180690a0101b4dda92e3164fa198485fd,2017-11-14 17:15:55,mrmr1993,Start searching for scrollable elements from <body> whenever possible,False
149a64bca65085871a4b0faff72cab26f05b636e,2017-11-14 06:13:29,mrmr1993,"FF: Restore window expando on every event listener

This should fix *most* problems from Firefox issue 1408996[1].

The root cause of the bug is that document.domain is set, and Firefox
discards the 'expando' for the window that contains all properties we
set. Technically, this can happen at any time, and so some failures are
still possible. This fixes #2799.

[1]: https://bugzilla.mozilla.org/show_bug.cgi?id=1408996",False
1880062f68e6f4280b7257f3cd437c0aee7c9696,2017-11-12 22:01:59,Stephen Blott,"Merge pull request #2797 from mrmr1993/min-chrome-version

Add minimum Chrome version of 51",True
b4e497669a7464a837f76b1c891fbb167a1e8303,2017-11-12 21:47:55,mrmr1993,"Add minimum Chrome version of 51

Since key handling has been migrated to use KeyboardEvent.key, we need
the user's Chrome version to support it. This support began at version
51 in May 2016. At time of writing, users have had over 16 months to
upgrade.",False
abacc25e39d1f4bbdc8cff61bb45079e585b75c0,2017-11-12 21:40:59,Stephen Blott,"Merge pull request #2794 from mrmr1993/gi-tabIndex

Make focusInput respect tabIndex",True
771f05845a7ce97bdff95cfb7b58cd2af8ddcae6,2017-11-12 20:48:10,mrmr1993,Use tabIndex to provide the special focusInput behaviour in the options,False
305a9275de0bd2f8e3578467a2fa33ba82747959,2017-11-12 20:48:10,mrmr1993,Make focusInput visit inputs according to tabIndex order,False
959379d46c18671551d819eb7eb2199da3ac43e2,2017-11-12 13:16:20,Stephen Blott,"Merge pull request #2788 from mrmr1993/no-mappable-modifiers

Don't resolve modifiers as keys",True
85f0ec02eafc60252e63667958b72188d697c423,2017-11-12 00:52:06,mrmr1993,Remove unclear & unnecessary tabCount argument to updateVisibleMarkers,False
ea43bf138015af760adca605692ab8876c969446,2017-11-12 00:52:06,mrmr1993,"Clear tabCount explicitly when needed, instead of implicitly and undoing

This changes the behaviour of Enter and Space.
* It should make no difference for Enter, as it exits the mode.
* It makes no sense for rotating the layering of the hints to clear the
  active hint (when the next key is pressed), so I suspect it was an
  oversight.",False
2bb2d314f13368e125018932aec4e7d80f5f2cfb,2017-11-11 20:53:18,mrmr1993,Don't resolve modifiers as keys,False
7cb53750bfb5f62849fcfb52f67b1e04ad0f9672,2017-11-10 12:50:24,Stephen Blott,"Merge pull request #2782 from mrmr1993/suppress-link-hint-keys

Suppress link hint keys",True
a946edb5294fab414d5c2afa218e9f9e889394ce,2017-11-09 21:17:22,mrmr1993,Use HTML labels accessor to get link hint labels for input elements,False
ca6733c88e94c4e0d8d916eb4d494d4c8a179aa4,2017-11-09 20:30:02,mrmr1993,Stub DomUtils.consumeKeyup to fix handler stack tests,False
ac3310d23fa0367b6130a4b05fe41192410fadb3,2017-11-09 20:15:07,mrmr1993,Suppress propagation for keyup events when we have for keydown events,False
177db4d6b07615bc7891512b90568255933db53b,2017-11-09 20:15:03,mrmr1993,Suppress keydown events for link hint characters,False
56c2a89613199bc0369a66d19bf848e14b019671,2017-11-05 22:22:21,Stephen Blott,"Rationalise the order of these tests.

The tests make more sense in this order.",False
291e5c4f37c6ce979b8739f0ccbfd12cc8a63115,2017-11-05 16:47:58,Stephen Blott,"Merge pull request #2772 from smblott-github/enable-more-keys-v2

Add more named keys (version 2)",True
87f017e48aa04ecc44dc06c1e4c35ffc5ecf611f,2017-11-05 16:47:34,Stephen Blott,Note new mappable keys.,False
c4cc76e9f6a0a99ebc297e420be739a0fc77f827,2017-11-05 13:19:13,Stephen Blott,"Add more named keys (version 2)

This allows any special key to mapped, simply by using the `event.key`
key name. E.g.

   map <enter> scrollDown

Replaces #2770.
Fixes #2769.",False
1eceb1413b43b0b43f225a5270dc9f2e6c212836,2017-11-03 12:36:32,Stephen Blott,"Merge pull request #2766 from mrmr1993/bugs-fixup

Fix comments from #2763 and #2762",True
e3ca00a9f6402730b21a059a751a1b6f1d9d19ea,2017-11-03 12:33:34,Stephen Blott,"ContentEditable must be lower case here.

See https://github.com/philc/vimium/pull/2762#issuecomment-341490268.",False
66cd3b27c2183bc1cc2dcc1aac82d7c12ffeff54,2017-11-03 00:02:58,mrmr1993,"Compare with lower case strings when using toLowerCase

Credit to @gdh1995 for catching this.",False
f10dfa843c60266504469fb5ea4d6222b051364b,2017-11-03 00:01:32,mrmr1993,"Replace all references to selection.type with our FF polyfill

Credit to @gdh1995 for catching these oversights.",False
73b1bd8057ef9b71f12bca5e81dae0103281800b,2017-11-02 19:27:22,Stephen Blott,"Merge pull request #2763 from mrmr1993/ff-find-mode

FF: Don't use Selection.getRangeAt(0) when there are no ranges",True
604ae4c33a8236c582ebe7ecd09c09f64d6a0a3b,2017-11-02 19:22:03,mrmr1993,"FF: Don't use Selection.getRangeAt(0) when there are no ranges

This fixes #2757.",False
fd3ea96dfe365b7b049504073de6c0da4c08b050,2017-11-02 18:03:18,Stephen Blott,"Merge pull request #2762 from mrmr1993/gmail-roles

Add some roles used by GMail to link hints",True
352ebd78194816d9b3be91724ac681e3a5f2f812,2017-11-02 17:57:55,mrmr1993,"Add some roles used by GMail to link hints, reduce no. of comparisons",False
574729275e92f084660ef9b4ac52512cb4882d31,2017-11-02 14:53:57,Stephen Blott,"Merge pull request #2761 from mrmr1993/typo-fix

Typos",True
9171f3f9de4c5798295b8d67b1b1d922bb6e4009,2017-11-02 13:59:18,mrmr1993,"Fix typos

This should have no user-facing impact.",False
228b3fd990e7e75b4c3772c50d3048f645385005,2017-11-02 13:58:44,mrmr1993,Remove the right listener from hashchange,False
15fc14dc40220af61f988c59378193cdb276a46f,2017-11-01 13:25:46,Stephen Blott,"Merge pull request #2558 from mrmr1993/rectsOverlapKill

Simplify rectsOverlap",True
478426dae8fcff5307b16a4f51bc26c26bfb62b7,2017-11-01 13:18:39,mrmr1993,"Use Rect.intersects instead of Rect.intersectsStrict

We don't care about overlap at the border here, so we can happily use
intersects over intersectsStrict.",False
60ca3238e5e5d35f3ed6acbbadd370f432b746ef,2017-11-01 13:18:39,mrmr1993,"Rename Rect.rectOverlaps to Rect.intersectsStrict, clarify the comment",False
e424bb942b58e5cee3506e42b6f3aa9008eb7b17,2017-11-01 13:16:22,mrmr1993,"Rename Rect.contains to Rect.intersects, add an explanitory comment",False
8cd39d357b129e40b1e3a8fc99910bf4c76747c0,2017-11-01 13:16:22,mrmr1993,Refine definition of Rects.rectsOverlap,False
fb081c8963196926cd8c5ab6d16b3d5928f8198f,2017-10-31 12:31:46,Stephen Blott,"Merge pull request #2753 from mrmr1993/always-consume-keyup

Always suppress keyups for keydowns that we handle, enforced in handlerStack",True
df16e038e0029f1ea7883c0a087505f452285d3b,2017-10-29 20:25:37,mrmr1993,Remove unused code,False
ecb8531442daaca1e8a040e65cdc209f173b42c4,2017-10-29 20:25:37,mrmr1993,Let handlerStack call consumeKeyup rather than calling it explicitly,False
af74bf84adbe0abcf7fa491f352d31b417c78cd4,2017-10-29 20:25:37,mrmr1993,Suppress all keyup events automatically if we consume the keydown,False
0c58201095059edd7b8b6e7e76792376c4bd8b3d,2017-10-29 20:20:07,Stephen Blott,"Merge pull request #2733 from mrmr1993/ff-android

Minimal Firefox Android support",True
9d5227399acba98a99830e55cbcc1ebbb6ee4b54,2017-10-29 20:16:10,Stephen Blott,Better wording of backup/restore help text.,False
52bd2cdbf662e3d40c0f5273485379be77ef8c19,2017-10-29 19:38:00,Stephen Blott,"Merge pull request #2748 from mrmr1993/frontend-split

Move normal mode and its commands out of vimium_frontend.coffee",True
24148c709806d1631f35cd8efd3fdec4f2376f92,2017-10-29 18:21:53,mrmr1993,"Guard against undefined DomUtils, instead of stubbing in tests",False
69c3e8a4b8aef152a2c994c5da922a37ac3f5cf6,2017-10-29 17:50:59,Stephen Blott,"Move FF package build into regular build process.

(Separately, these two processes may be doing the same thing.)",False
b3c040f84b6ae44a3a79778e2435cf949f7e707b,2017-10-29 17:45:41,Stephen Blott,Make file inputs work with filtered hints.,False
7f51eb26f5a5536ba81d4dea3cf92cc30087ddc7,2017-10-29 17:38:51,Stephen Blott,"Refacator restore/save code.

Some the long-reach code here is ugly.  Things are too spread around.

This refactors the code called on ""save"" to a callback.  Thus, the code
related to backup and restore is localised.",False
3abee4d80699c1fade78af951efd23c1297d0be3,2017-10-29 17:38:23,mrmr1993,Tidy up exports in vimium_frontend,False
722ba99720ed946f11e5672c7fbf0f1f34337576,2017-10-29 17:35:40,mrmr1993,Move findAndFollow* to mode_normal.coffee,False
ad8fa8e850eaa6ca3ef4d45e1903d11aa564cafe,2017-10-29 17:33:43,mrmr1993,Move FocusSelector to mode_normal.coffee,False
1660d1fce8ae357e95ebb7f525be992290715f8f,2017-10-29 17:33:08,Stephen Blott,"Reset the restore-backup file chooser on save.

It's just cleaner this way.",False
a00bb7d2172803bc04b3543b31345879cb434b27,2017-10-29 15:52:17,mrmr1993,Move selectFoundInputElement into mode_find,False
933fb4d7fc0a89c1b7908e3f8c7e7a7162fbe151,2017-10-29 15:50:37,Stephen Blott,"Merge pull request #2751 from smblott-github/backup-settings

Fix backup link for FF and Chrome.",True
0b9287696825cb7df2301d97a54c7666d9094521,2017-10-29 15:48:42,mrmr1993,"Move focusFoundLink into mode_find, don't expose it as global",False
a3c120bb7d2ca91a75f0d5125942f64dfad7890f,2017-10-29 15:48:35,Stephen Blott,"Fix restore for exclusion rules.

In the case of exclusion rules, we first have to remove existing rules;
otherwise, the restored rules are *appended* to the existing rules.",False
75c229d5bda9529baee1993c74ac16c777f68000,2017-10-29 14:52:28,Stephen Blott,"Tidy up backup code.

This can be shorter now.",False
f40a0e697c6d4f88bc4ccd410951339f86a609d6,2017-10-29 14:41:19,Stephen Blott,"Fix backup link for FF and Chrome.

This makes the UI for generating an options backup the same for FF and Chrome.

We populate the *Backup* link on `mousedown`.",False
93e37ee633e86a3af3e7a583ccbcab0c4e5cfce3,2017-10-29 14:17:05,Stephen Blott,Fix backup download for Firefox.,False
992edf5a1c770380601b1c7428593c2ef873f181,2017-10-29 11:55:07,Stephen Blott,Note backup/restore in README.,False
725377ec407cc300793026283180191ea370b410,2017-10-29 11:48:31,Stephen Blott,"Hide ""Download Backup"" Link.

On Chrome, this text was becoming visible when the ""Create Backup""
button was pressed.

Mention @mrmr1993: you might want to check this in FF.",False
098d24d87f0a92ace37e8ebb1c4fb032b7c08d4c,2017-10-29 11:39:28,Stephen Blott,"Merge pull request #2750 from smblott-github/backup-settings

Add backup/restore for Vimium options.",True
8d5a7d585e559c55f4ec766fdf151f7f2c0fff70,2017-10-29 11:36:44,Stephen Blott,Include settingsVersion in backup.,False
0efbdff806ec2ba2139497458ade294a57d18ad8,2017-10-29 11:27:42,Stephen Blott,Make backup JSON human readable.,False
b1f6da21a882f84965de73eea175475f5d8f7b37,2017-10-29 11:20:14,mrmr1993,"FF: Show backup download link in the options page

Firefox doesn't seem to respect the |download| attribute for links, and
it garbage collects our blob URL when we navigate away from the options
page (to the object URL). We work around this by simply showing the
download link in Firefox.

Disappointingly, the user needs to right-click the link and choose to
download from the context menu.

Behaviour in Chrome is unchanged, except that the download link is now
visible.",False
9847144f3493547af7eb419f11552ac18d7e9872,2017-10-28 21:39:24,mrmr1993,Remove normal mode commands from global scope,False
f65720e58e31a0218e0c176a9140520451e5dd7d,2017-10-28 21:34:37,mrmr1993,"Remove invokeCommandString, call NormalModeCommands directly",False
5c4aab3d4488e5d8d64aba122791f86fc9766b99,2017-10-28 21:32:12,mrmr1993,"Bind LinkHints, Vomnibar and Marks commands appropriately",False
720474858f2f52ad62934b43c346b49165c461ac,2017-10-28 20:05:39,Stephen Blott,"Add backup/restore for Vimium options.

See the *very* bottom of the options page (below advanced settings).

Clicking ""Backup"" creates a JSON file.

Selecting a backup populates the options inputs, the user then clicks *Save Changes* to confirm.",False
6cb8a82b7cf7d6930b669fae74e1751a1e87567d,2017-10-28 01:06:07,mrmr1993,Move goPrevious and goNext to normal mode file,False
b06ed7bd5cc82ec3307aeee945bcf6bf8f9264ce,2017-10-28 01:05:31,mrmr1993,"Include LinkHints, Vomnibar and Marks commands in normal mode file",False
d8f8015f4cd71cf3681506a5ec16f00f8ab46f46,2017-10-28 01:05:29,mrmr1993,"Split focusInput, move the main part into the normal mode file",False
183858066bfb9b710056b2cb3330f08f22e09361,2017-10-28 01:04:59,mrmr1993,Add tests to check that foreground commands are implemented,False
fe2255f4de5e17d6ab1a9168191bfbfaa488d62d,2017-10-28 01:04:59,mrmr1993,Move passNextKey to normal mode file,False
ee95cb38bbd24fec444e0af3f593f470cce60d22,2017-10-28 01:04:59,mrmr1993,Move mainFrame and showHelp to normal mode file,False
6fcfde0b561e43955ef35ea3a91ed483cedfff4f,2017-10-28 01:04:55,mrmr1993,Move normal mode find commands into normal mode file,False
d330ebd648914802453fa1e818ef9dc52de739c8,2017-10-28 01:04:28,mrmr1993,"Move findAndFocus into FindMode, rename to findNext",False
ca9aa228f1999540063063e6cb86a7baeba9da93,2017-10-28 01:04:28,mrmr1993,Move FindMode exit functions into FindMode,False
0b24e966c6a64864204c7f489063b29e05b2ca34,2017-10-28 01:04:25,mrmr1993,Move self-contained normal mode commands to normal mode file,False
534a0f8c471ea96081b30fc2a57d183f6b4268c9,2017-10-28 00:10:20,Stephen Blott,"Merge pull request #2747 from Honeypot95/patch-1

Fixed typo",True
a6bfd86e807e1d28446578d434fd04de9dbfc823,2017-10-27 23:15:11,Honeypot95,Fixed typo,False
51fa63a5e97167b015acf7b80d673d081c2b91da,2017-10-27 22:50:23,mrmr1993,Move NormalMode to its own content script,False
fe6fbca08e501e2478bf10da402d5b4f42a89ade,2017-10-27 20:04:13,Stephen Blott,Bump to 1.61.1.,False
ed0a920e9000fabcad7eaf7f09e6360a5d2aa407,2017-10-27 20:01:34,Stephen Blott,"Fix #2738.

I omitted to check this properly.  It turns out we weren't getting the
options from the correct place.",False
9665f030fb339eb1dbe16d929e1b55e2537d8ac7,2017-10-27 13:59:20,Stephen Blott,Bump to 1.61,False
6f48cd04e7edcbc390c3253e9b95493249f4bb61,2017-10-27 13:55:16,Stephen Blott,"Merge pull request #2742 from mrmr1993/ff-fix-fb

Add global objects to window.root, re-add to window on DOMLoad",True
4cce9de9075474153a8299ab7430156bd6d194a9,2017-10-25 21:40:44,mrmr1993,FF: Only apply fix to bug 1408996 when appropriate,False
4faef57c60a54676fd27b3d0ff42747b0b9b6487,2017-10-25 21:22:11,mrmr1993,FF: Workaround bug 1408996 in focusInput's focus listener,False
aca953e06a7cf5aa6906df677a8fb6ed3e688a03,2017-10-25 21:21:46,mrmr1993,"FF: Share |root| global proxy, re-add the globals to window on DOMLoad

This is a workaround for Firefox bug 1408996.",False
03569d64b445780576f960d0553dc763c807de95,2017-10-24 20:50:42,Stephen Blott,Note hard command option for reload.,False
88e179790e137e980d51bf3eb9ef4d4a2e59ecab,2017-10-24 20:32:23,Stephen Blott,"Merge pull request #2738 from mrmr1993/hard-reload

Add hard option to reload command",True
27fca0baa34df6af1ed32cb16c6e69a356364520,2017-10-24 20:06:24,mrmr1993,Add |hard| option to reload command,False
dd961bbff7ae6d7474fe1455a6999c66f77b1cb4,2017-10-19 21:43:21,mrmr1993,(FF android) Guard against undefined chrome.browserAction.setIcon,False
701c2ab36c880276525c81b48029deb8620ec307,2017-10-19 21:24:31,mrmr1993,(FF android) Guard against undefined chrome.windows,False
895a5e85fe40d2d1ba718b2ef51436d82e913ebe,2017-10-19 20:27:13,Stephen Blott,"Merge pull request #2732 from mrmr1993/aria-tab-clickable

Recognise role=tab elements as clickable",True
a986bc2a6ff3c13169782a9258b931a7c0e03da8,2017-10-19 20:15:57,mrmr1993,"Recognise aria-role=tab elements as clickable

In particular, these are used in the current (2017-10-19) version of
YouTube. This fixes #2730.",False
8f31f1b5c3e6b731369973dc44be98be9f356339,2017-10-16 10:45:56,Stephen Blott,"Merge pull request #2728 from xuhdev/patch-1

Add Firefox and Chromium to contribution guidelines",True
ca1bb9e0360529e76394d49fb44968db5f2f7914,2017-10-16 08:49:01,Hong,Add Firefox and Chromium to contribution guidelines,False
ef1d9160b92113c4a0df7b3b3dfbb21a1a326042,2017-10-14 17:35:39,Stephen Blott,Note mapping <c-[> in README.,False
aec5681729861120954688f00be1b7fa6a89568d,2017-10-14 17:33:31,Stephen Blott,"Merge pull request #2723 from smblott-github/allow-map-vim-like-escape

Allow <c-[> to be mapped as a regular command.",True
66b11f98f480bbd83cb2cf720e219d0df8203f80,2017-10-14 17:08:26,Stephen Blott,"Allow <c-[> to be mapped as a regular command.

If

    map <c-[> someCommand

is configured, then the hardwired `<c-[>` meaning `Escape` behaviour is disabled.

Users who want to map `<c-[>` probably *never* use it as `Escape`.

Fixes #2722.",False
ac9eba9b89c3c29d155a159c57acde3d28fd03ce,2017-10-08 12:23:07,Stephen Blott,Note alphabet hints for filtered hints.,False
2480acdf64b690d73d2ac20ca6c865ca8d83024a,2017-10-08 01:37:55,Pavel Yarmak,Added UpToDate autocompletion engine,False
27691f8c4dcdecdb884349189966eb6e2667330e,2017-10-08 01:36:48,Pavel Yarmak,Merge remote-tracking branch 'origin/master',True
0e1d0d317e5d5f9fcebebbdf4a0a243f122b7471,2017-10-07 21:11:59,Stephen Blott,Merge branch 'ahstro/feature/upper-case-link-hints',True
bc8df497670658fdafa26660ee09987cf9d969ae,2017-10-07 16:48:20,Stephen Blott,"Tweak #2701 (hint characters for filtered hints).

Some tweaks to #2701 from @ahstro.

1. Simplify the logic for calculating `modifiers`.
2. Revert the ordering of the `event.repeat` test and `keyChar` assignment.
3. Link hint characters *only* match in upper case.
4. If there are link-hint characters (non numbers), then shifted characters are only ever hints.
5. Otherwise, revert to doing all hint text comparison in lower case.",False
2c9582c83903cb40cd851dc44d57648bd1d1ac68,2017-10-06 20:04:46,Stephen Blott,"Merge pull request #2699 from mc10/patch-2

travis: Clean up config",True
d471f3aed1646646b7a8802944314170b4b20eed,2017-10-06 12:50:40,Anton Str√∂mkvist,Allow using capital letters as link hint characters,False
ab568be2cd9dac3dd24995bb074d1f2967117dd9,2017-10-06 11:13:32,Stephen Blott,"Merge pull request #2703 from mrmr1993/fix-test-typo

Correct a longstanding typo in DOM tests",True
c1f59edd04f62518ff0254880e210f13d35492ad,2017-10-06 06:37:51,mrmr1993,Correct a longstanding typo in DOM tests,False
9da17bfd35f5e97bc4e6949debbaae073bc367e5,2017-10-04 15:14:43,Stephen Blott,"Merge pull request #2698 from mc10/patch-1

README: Use the SVG Travis badge and relative links",True
98cb18d94dd0c263869dc66fb085646570a440fa,2017-10-04 14:49:48,Kevin Ji,"travis: Clean up config

Use a non-ancient version of Node in sudo-less mode.
Scripts do not need to be wrapped with quotes.",False
5b9bb1a39d133353cdcac753a40ed4069a869a7f,2017-10-04 14:44:04,Kevin Ji,README: Use the SVG Travis badge and relative links,False
abb32e2f2974832df08395ef7664561bb57c7324,2017-10-02 20:26:45,Stephen Blott,"Merge pull request #2691 from mrmr1993/ff-fix-xml

FF: Lazy load the Vomnibar for XML documents",True
0d2a44fb47d7a6599093c6b4de6bcd54da9b7cb8,2017-10-02 20:06:17,mrmr1993,"FF: Lazy load the Vomnibar for XML documents

Injecting HTML into XML documents on Firefox breaks the rendering
(collapsing it into plain text). By not loading it until explicitly
requested, we can avoid this breakage (at least, until a user triggers
some of our UI manually).",False
10bcb92735f820779950557c5d59d35f769a10fc,2017-10-01 21:39:16,Stephen Blott,"Merge pull request #2687 from mrmr1993/fix-popup

Fix the popup dialog",True
60d6256eec4cb7bbeaa884701cd6b21e4dbcb551,2017-10-01 21:07:36,mrmr1993,"Include DOM utils in the popup dialog

DOM utils are required to inject user CSS.",False
cbaf4dfabf3cf215232f3797c2f9f697684cbca2,2017-10-01 12:47:54,Stephen Blott,"Merge pull request #2685 from alphaCTzo7G/patch-2

Updated ""Treat find queries as regular expressions""",True
ee2ccd5b82b686ccbc71d7d183ade034ebc18dda,2017-09-30 23:18:18,Dibyadeep Paul,"Update ""Treat find queries as regular expressions""

Changed ""Treat find queries as regular expressions"" to ""Treat find queries as Javascript regular expressions"", to reduce confusion. There are tonnes of different types of regular expressions, so specifying what type of regular expressions is used, will reduce confusion.",False
56c5ab637ffe888a48fb68a7536781f6400eb13a,2017-09-30 12:32:10,Stephen Blott,Merge branch 'curipha-search-compl-amazon-co-jp',True
3b119c7de52af858a59db8ed786b27b7d215c84c,2017-09-30 12:30:20,Stephen Blott,Use Japan instead of Jp.,False
7376efbb11cd3a8b4f9844368f5b440db89821bd,2017-09-30 12:25:33,Stephen Blott,"Merge pull request #2665 from curipha/search-compl-google-co-jp

Search completion; add support for Google.co.jp completion",True
0d059c1ac60798598ad6608eca38f6008cc50f53,2017-09-30 11:52:22,Stephen Blott,"Merge pull request #2683 from mrmr1993/inject-css-for-frames

Inject user css into all frames",True
245fd88b58297733765571b4db37ff958f7a32c2,2017-09-30 11:48:00,Stephen Blott,"Merge pull request #2682 from mrmr1993/ff-setOpener

Use openerTabId in chrome.tabs.create when possible",True
e3e4347038c7580241e44c0d8b0f2febc3796c8c,2017-09-30 11:43:04,Stephen Blott,"Merge pull request #2681 from mrmr1993/ff-link-hints-new-tabs

FF: Simulate default click action for <a target=""_blank"">s",True
55fde386c99bae9748212ef66fd57929ffd316a5,2017-09-29 23:49:20,mrmr1993,Add stub to fix unit tests,False
7f45a5e40128aadf02fe598310d40fca850a8e1f,2017-09-29 23:31:39,mrmr1993,Manually inject custom user CSS into our own frames/pages,False
50615a6f3ebb80cedf1807497a6cd73d12950cdb,2017-09-29 23:09:06,mrmr1993,"Inject custom user styles into all frames

This fixes #2594.",False
fdc374f0904ddc0179f352aa9b4049c68872768e,2017-09-29 22:45:28,mrmr1993,Use openerTabId in chrome.tabs.create when possible,False
2c0963dbc44bd03abbaa4ae8424d893df57ff8b2,2017-09-29 22:15:06,mrmr1993,"Simulate default click action for <a target=""_blank"">s",False
c18d4f065c9529c62a82bc2a3bd518da318d89ff,2017-09-28 12:03:11,Stephen Blott,Bump to 1.60.4 (firefox only).,False
f0c90f39b463593b6f2d6c71a938f7dc9d93b345,2017-09-25 15:23:33,Stephen Blott,"Merge pull request #2602 from mrmr1993/ff-link-hints-new-tabs

Firefox: Simulate default action for clicking links with link hints",True
d9bbc7132b2289d658bc05697caede3bd7b96de9,2017-09-23 14:53:52,Taichi,Search completion; add support for Google.co.jp completion,False
e513a9d1589488c1ab791de90ed80844bfa0b4dc,2017-09-23 14:39:59,Taichi,Search completion; add support for Amazon.co.jp completion,False
92d2b4058a378c276d52ecc53409603679c3865c,2017-09-22 02:35:53,mrmr1993,"Move simulating click default action to DomUtils, add shift handling",False
7fa22da6954d28dbd578b0cd490ada638d98b373,2017-09-22 02:16:39,mrmr1993,Add openUrlInNewWindow command,False
a8337e93b33cfbaba17c4a237fe7330f27145c0c,2017-09-22 01:07:27,mrmr1993,Use Utils.isFirefox for link hints fix,False
e6a529ea00033d44226581c48df4e84f4cb80237,2017-09-22 01:05:59,mrmr1993,FF: Simulate default action for clicking links with link hints,False
4099067f7c03551bea20b6cf6504e4c15d6e7506,2017-09-18 19:37:03,Stephen Blott,"Merge pull request #2658 from smblott-github/recognise-moz-extension-URL

Recognise (FF) internal URLs.",True
fbd9d54b68446f30441149ffa4a77045b259438b,2017-09-18 16:56:56,Stephen Blott,"Recognise (FF) internal URLs.

Recognise URLs like:
   - moz-extension://c66906b4-3785-4a60-97bc-094a6366017e/pages/options.html

Fixes #2657.",False
2def9eac46d2bb61eafa016dff4d7019949743a2,2017-09-15 15:18:32,Stephen Blott,"Merge pull request #2653 from smblott-github/use-textContent

Use .textContent instead of .innerHTML, where appropriate.",True
c363e4b18eee636f7cc9ef48473ba6d610e06220,2017-09-15 15:12:58,Stephen Blott,"Use .textContent instead of .innerHTML, where appropriate.

From a FF extension reviewer (gatekeeper) on Mozilla add-ons:

  Comments:
  Thank you for your contribution.

  Please note the following for the next update:
  1) For inserting text, textContent (or JQuery text) or createTextNode() should be used instead of innerHTML.
  eg: $(&quot;saveOptions&quot;).innerHTML = &quot;Save Changes&quot;;

So, here, `.innerHTML` is replaced with `.textContent` for elements
which only ever have text content.",False
a36768439ae253fb42131fbb205e78ac8d298b68,2017-09-15 14:08:37,Stephen Blott,Bump to v1.60.3.,False
29bb5cca58e549432b57634da582601f87c9c687,2017-09-15 11:36:50,Stephen Blott,"Merge pull request #2649 from mrmr1993/linkhints-scaled-display-fix

Always use getBoundingClientRect for getViewportTopLeft",True
09abac4c4c6be7a567478f726dab5f2456ee433d,2017-09-15 00:52:09,mrmr1993,FF: Tweak getViewportTopLeft to use borderTop/Left for clientTop/Left,False
12826329347221b46496c6ff5dfa390c20a01585,2017-09-15 00:10:16,mrmr1993,Always use getBoundingClientRect for getViewportTopLeft,False
e60f329eb6180cbe3261adf582ee4df3cdc0b0fe,2017-09-14 18:34:52,Stephen Blott,Bump to v1.60.2.,False
3b8c0f1060640efd0a9383707a1d892d102e414f,2017-09-14 18:33:05,Stephen Blott,"Merge pull request #2645 from smblott-github/fix-zoom

Revert #2636.",True
b38324d75ff248ea9c50843e2d6cc4f6911ee8a3,2017-09-14 18:29:45,Stephen Blott,"Revert #2636.

Mention @mrmr1993.
Mention @gdh1995.

We have zoom issues resulting from:
   - style
   - zoom
   - --force-device-scale-factor=1.5
   - HiDPI

This intended to fix HiDPI, but seems to have created problems in the
some of the other cases.

I don't have time to figure out the problem right now, so I'm going to
revert this and push it as 1.60.2.

That leaves us pretty much where we were before, I think, in terms of
zoom.

We can come back to it later.",False
1dcfe54327f329c19b922cd15bc2097144311243,2017-09-14 17:47:40,Stephen Blott,Add link to issue.,False
d1a0e4c510fa727ffb6cc71bcf043abd0b3f1377,2017-09-14 17:39:59,Stephen Blott,Bump to 1.60.1 - fix #2642.,False
25d561a57a0b88a1e74b5c539fa6864fddc718f1,2017-09-14 17:38:15,Stephen Blott,"Merge pull request #2644 from smblott-github/fix-2642

Fix #2642.",True
2225bdb7227bf39938172a2ec4d2a6dba4fa02df,2017-09-14 17:34:03,Stephen Blott,"Fix #2642.

Fixes #2642.",False
468faa2858bea95584ba8356e6fd1f2f0cd2cb13,2017-09-14 14:21:43,Stephen Blott,Bump version number to 1.60.,False
23425118b80239b99f4d9a71727bd6ce65c8794e,2017-09-12 16:24:28,Stephen Blott,"Merge pull request #2637 from mrmr1993/linkhints-scaled-display-fix

Exclude Firefox from the scaled DPI fix",True
263a7c63ded6289242263601ed014fe8447876dc,2017-09-12 16:12:35,mrmr1993,FF: Don't use devicePixelRatio fix for HiDPI link hints,False
504e63cd9a833b236b3d7f87ea71d58707db8804,2017-09-12 16:12:35,mrmr1993,Use browser.runtime.getBrowserInfo to identify Firefox,False
4d148a48ec375db2dc86f09f274bf5c3f76cce39,2017-09-12 16:12:18,mrmr1993,"Add Utils.isFirefox

This also stops the content scripts from being injected into each frame
on reload (in Firefox only). They do not successfully connect to the
background page, and it causes considerable lag, so we lose nothing by
doing this.",False
f3b186c0228f68e15e6c8d2aad53c227efb187f4,2017-09-12 15:51:48,Stephen Blott,Note bug fix.,False
6a5377125a00af51c943649093d4ba7d5f3404c3,2017-09-12 15:48:27,Stephen Blott,"Merge pull request #2636 from mrmr1993/linkhints-scaled-display-fix

Consider devicePixelRatio when calculating viewport",True
f9ea449901bc10c81d564e28af64756c7d6f9c9f,2017-09-12 15:38:49,mrmr1993,"Consider devicePixelRatio when calculating viewport

This should fix #2635, fix #2633 and fix #2620.",False
62b36b3bcce6ab1f5b8735ecf1335e40600c5617,2017-09-07 19:17:07,Stephen Blott,"Merge pull request #2626 from smblott-github/ignore-keyboard-layout

Ignore keyboard layout",True
4b6e35d50c6aa75eaccb86370eac86f49f31da83,2017-09-07 19:16:41,Stephen Blott,Note ignoreKeyboardLayout in README.,False
0725cac5ebee6da7737be0e0bd063b7802c45fc8,2017-09-07 19:13:30,Stephen Blott,"Merge pull request #2631 from mrmr1993/fix-travis

Fix tests: Explicitly select a PhantomJS version for Travis",True
f2d4acfbe0c63a1ec4c11501151ef0e97006a1f8,2017-09-07 18:51:02,mrmr1993,Fix tests: Explicitly select a PhantomJS version for Travis,False
a78246316b7062f9cd64226a885e1fb2b0cac6ee,2017-09-07 18:45:46,Stephen Blott,"Use stubs from window.top for tests.

(Similar to idea suggested by @mrmr1993.)

This way:

- we do not have to replicate the stub code, and
- we have minimal impact on the live implementation.",False
0d21fb070e93030beb591540face9138f7df557a,2017-09-06 17:06:13,Stephen Blott,"Merge pull request #2605 from mrmr1993/isTrusted-events

Check whether events are trusted before executing listeners",True
4df6b532d0925980e9542821d8bda400c981a5ac,2017-09-04 12:52:40,Stephen Blott,"Fix tests for #2626.

This fixes the tests for #2626.

Note: This may not be th best approach.

The problem is that, for the first time, we're using `Settings` (and
hence `chrome.storage`) within the Vomnibar and HUD iframes, and our
`chrome` stubs are not injected into those frames.

Mention @mrmr1993.  Matt: Do you know of a better approach?  Can we
inject the stubs programmatically in the tests?  An alternative approach
would be appreciated.",False
1e3a618b89d053f16715790f539350680b993b0f,2017-09-02 18:08:56,Stephen Blott,Fix special keys (e.g. <Shift-Left>).,False
2c1c86ee35f8437473de11f47e6a3a754cb8c1e5,2017-09-01 21:25:09,Stephen Blott,"Use event.key for numpad.

See this comment:
https://github.com/philc/vimium/pull/2626#issuecomment-326553282.",False
1358fff3981cab5d8e0aa273cca2378aca2d766c,2017-09-01 21:18:35,Stephen Blott,Handle shifted numeric keys.,False
bbad2739341c59e4b1eb413dd52a4cf7b9159fd8,2017-09-01 18:24:15,Stephen Blott,Load settings.js in the HUD.,False
37b26d736b901eaf08a260d7d97af4d8749a2536,2017-09-01 18:21:20,Stephen Blott,Translate event.code key representations to the corresponding event.key format.,False
02c09ba0dd0ff9573eb4d32d66fda5c0928c4d2c,2017-09-01 17:57:27,Stephen Blott,Better explanation of ignoreKeyboardLayout.,False
c48a2affc3c62fe60cb60cdc0e0c5a67bf08214a,2017-09-01 16:03:28,Stephen Blott,Include Settings in Vomnibar page.,False
28f6702b4e8fd5a21f2f1484a99732e703c5f37c,2017-09-01 15:58:03,Stephen Blott,"Implement ignoreKeyboardLayout option in getKeyChar.

Fixes #2618.",False
54b77bee1cfab13d34d078d05a20678412dfba6a,2017-08-31 20:51:59,Stephen Blott,Add ignoreKeyboardLayout option (under advanced).,False
dd7dc27f2ddc11e2eba15803c5d880e2393e04cf,2017-08-31 16:14:28,Stephen Blott,"Merge pull request #2623 from davidjb/master

Update URLs to use HTTPS",True
684d118683e1c923877a218f925610eaa8b910eb,2017-08-31 07:15:53,David Beitey,"Update URLs to HTTPS in code, pages and docs

Updating URLs to use HTTPS provides greater privacy and reduces the
potential of having content modified whilst in transit (as it happening
more and more by ISPs, networks, state actors etc).

These URLs themselves have been tested and confirmed to work over HTTPS.",False
5024d44910048d39888ecb1f22709365fbc85ba0,2017-08-31 06:49:58,David Beitey,Use HTTPS for shoulda.js submodule URL,False
1826e88cf723a74a6b9869b67e96321f32ae76fb,2017-08-25 11:06:12,Stephen Blott,"Merge pull request #2614 from mrmr1993/ff-options

Firefox: Use options_ui to declare the options page",True
fcac8d54eaddddac78acf367004e34dfabce58f1,2017-08-25 07:46:12,mrmr1993,"FF: Use options_ui to declare the options page

Firefox doesn't recognise the ""options_page"" manifest key, and so isn't
showing a preferences button for Vimium-ff. By moving to ""options_ui"",
we enable it, and still get the same functionality in Chrome.",False
d946a98df10bf1ae5bb02e5cd7eaa2a0c3a06aad,2017-08-18 23:21:45,mrmr1993,Check whether events are trusted before executing listeners,False
3125664816e427ea19285d3f1e4b85af95548431,2017-08-17 19:47:37,Stephen Blott,"For Firefox, prune more files and bump subversion number to 1.59.2.",False
696feed903fe815af50c89b1badbb1e5680d6921,2017-08-17 17:45:19,Stephen Blott,Exclude Coffeescript files for Firefox build.,False
c7cd9a4abab78887bf422d3c64c53e3f3282f0ae,2017-08-15 18:28:51,Stephen Blott,"Bump version to 1.59.1.

This is a bug-fix release affecting Firefox only.

Accordingly, the Firefox Add-On has been updated, but the Chrome store
version will not be updated.",False
7ca63fbaabb3542a4a54dd16e255d448afb0c7b0,2017-08-15 18:20:31,Stephen Blott,Note search completion fix (Firefox only).,False
e0bbc1370abe6d27b78745ce87983055ba1bfdc3,2017-08-15 18:15:09,Stephen Blott,"Fix search completion (Firefox).

The problem is that Firefox balks at function properties within the
response sent via `postMessage` (whereas Chrome does not).

A concise and safe way to sanitize the response is to convert it to JSON
and back.

Fixes #2576.",False
441b5266fcb6c8cdf57d4228a8f4c5a4deccc4c3,2017-08-08 20:10:57,Stephen Blott,"Merge pull request #2573 from alphaCTzo7G/patch-1

Update README.md",True
64abb5cba337bd6ced8d2cb570980920069c4c83,2017-07-20 17:59:20,alphaCTzo7G,Update README.md,False
452b5c7a673df7cca6f1ac37fd72f1e548513054,2017-05-23 11:50:05,Stephen Blott,Rename to vimium-ff.,False
36919d958b88db540ff773876fc727437a440101,2017-05-20 11:19:16,Stephen Blott,Note Firefox port.,False
2b4d668ff34047033dba5af56f9b5cb9027627ee,2017-05-17 16:10:39,Stephen Blott,"Consume keyboard events for marks.

We were leaking both the `keypress` and the `keyup` events when marks
are created and used.",False
400602e11a4dfa5e00c50d123bf2e976d47b2dfb,2017-05-08 16:23:47,Stephen Blott,"Merge pull request #2507 from bingocaller/update-css-gradient

Update linear gradient syntax to avoid deprecation",True
38981e3a23aa886cbd7e5a3e12f55b5314bc589e,2017-05-08 15:54:35,Jesper Nellemann Jakobsen,"Update linear gradient syntax to avoid deprecation

This updated syntax avoids the following deprecation warning in Chrome Canary v60.0.3090.0:
```[Deprecation] -webkit-gradient is deprecated. Please use linear-gradient or radial-gradient instead.```

This syntax is also supported in Firefox (and [all other modern browsers](https://caniuse.com/#feat=css-gradients)), which could help transitioning the Firefox version, which is in the works.",False
8a74fd31f3086538cfad50df30e0e2c87cd0a6cc,2017-05-01 11:31:18,Stephen Blott,"Merge pull request #2500 from mrmr1993/ff-fix-exclusions

FF - Fix ""Save Changes"" from the exclusions popup",True
9a1b56a899575d71e07eb3466e5fbf16d5a18571,2017-05-01 04:45:51,mrmr1993,"FF - Fix updates from the exclusions popup

This stops |Exclusions| from holding a reference to the |value|
parameter passed to |Settings.set|. In Firefox, this object is garbage
collected when the owning context (the exclusions popup) is closed.

The fix for all such cases in the future is to switch to using
|Settings.get|, which implicitly does |JSON.parse JSON.stringify value|
and thus returns an object in the same context as |Settings|.

We could fix this generally by doing this for the
|Settings.performPostUpdateHook| call in |Settings.set| instead.
However, I'm not convinced that it warrants the overhead of a
|JSON.parse| for every |Settings.set| call.",False
c3b16da8391f4c37c79611f79f0ecadaa7b3b300,2017-04-25 19:32:19,Stephen Blott,"Merge pull request #2496 from mrmr1993/modes-exit

Make Mode::exit idempotent",True
c1c8cb71383f3f36df6c93ba106cc51f03666e78,2017-04-25 01:18:26,mrmr1993,Make Mode::exit idempotent,False
7c96c19c434de5242727d1a662c327cd697bef71,2017-04-22 18:00:22,Stephen Blott,Firefox:  Add build target to Cakefile.,False
205610d6613680e2bdcc35123070ba25566f342a,2017-04-22 12:24:53,Stephen Blott,"Fix global marks.

This is a follow up to the move to using keydown for all events, and
fixes a bug I introduced.

Specifically, we were reacting to the first keydown event, which could
be just the `Shift` key.",False
681c61d37f0b937939e739d888e93c65add51463,2017-04-22 12:08:22,Stephen Blott,"Firefox: Polyfill for selection.type for visual mode.

@mrmr1993... This puts the logic of how we choose the selection type in
one place; so, if you have a better idea of how to determine the
selection type, then we just change it here.  Once.",False
0975076abe3529e19dcd23655697791c39c3ff78,2017-04-22 12:02:41,Stephen Blott,"Refactor getSelectionType() to DOM utils.

This is a no-op.  It is preparatory to implementing a suitable polyfill
for `selection.type` for Firefox.",False
961f7130a60ae041fb0304353160d6fc74529aa7,2017-04-22 11:43:05,Stephen Blott,"Revert ""Firefox: Fix visual mode.""

This reverts commit 50b117733c4f0ecf9fd507c28d2f2967b5b1404b.

Reverting this.  In response to comments from @mrmr1993, this is not the
best way of achieving what's required.",False
3296e8355280e10a8a96fcc7d03cc6bdc55fea54,2017-04-21 18:34:53,Stephen Blott,"Firefox: Fix waitForEnterForFilteredHints.

This is the filtered-hints feature whereby links aren't activiated until
the user hits `Enter`.

There was a race condition caused by forcing this setting to true for
new users *before* the correct storage area was determined in
`Settings.init()`.

Mention @mrmr1993.",False
50b117733c4f0ecf9fd507c28d2f2967b5b1404b,2017-04-21 17:53:55,Stephen Blott,"Firefox: Fix visual mode.

The problem with visual mode is that `@selection.type` isn't implemented
in Firefox/Gecko.  Here, we simulate the same effect with `anchorNode`
and the length of the selection.

Mention @mrmr1993.",False
c0a9f3fe9139ff2ad89fe7ba5253d347f3b074b1,2017-04-21 15:59:36,Stephen Blott,"Firefox: Fix createTab.

Firefox baulks at ""about:newtab"" in createTab (but seems happy with no
URL specified).  Chrome is also happy with no URL specified.

(Does this mean that we don't need ""about:newtab"" ANYWHERE in the code
base?  Could Settings.defaults.newTabUrl just be """"?)

Mention @mrmr1993.",False
f5007e2f69cfcf87c44d1eb34532bc1d3c2f591b,2017-04-21 15:31:19,Stephen Blott,"Fix tab for link-hint selection.

We were leaking the keydown event to the page when using TAB to select
link hints (filtered hints).",False
20b039c2b5910718a1bb4e76f32f68fad0ac890a,2017-04-21 15:03:19,Stephen Blott,"Firefox: Fix format of popup buttons.

@mrmr1993: This is trivial fix for Firefox, so it doesn't warrant a PR.
I'll mention you just to keep you up to date on commits like this,
though.",False
8359488e8f3255a57d0f8241790cf6921826f1be,2017-04-21 11:25:19,Stephen Blott,"Merge pull request #2484 from mrmr1993/ff-focus-top-frame

Fix gF (mainFrame) command on Firefox",True
df72a1be0213d211645f39f1ec6aeeba4d8e7896,2017-04-20 22:04:46,mrmr1993,"Blur the focused iframe when restoring window focus

This works around FF issue 554039, which prevents window.top.focus()
from working.",False
e3cce413029dd5efa718a48a057d0bcf77d31fb9,2017-04-20 19:30:24,Stephen Blott,"Merge pull request #2482 from smblott-github/firefox-history-no-title

Firefox: some history entries have no title.",True
9a7b46ae59ed3a745e76e8f86c213fee631574d6,2017-04-20 19:20:40,Stephen Blott,"Firefox: some history entries have no title.

This causes `o`/`O` to crash (producing no suggestions).

As a workaround, set any such title to """".",False
0f26a68a2b601df61656607227e2c2c165e77111,2017-04-19 12:02:03,Stephen Blott,Simplify isPrintable(event) test.,False
366d2fb69207244e1a49921d2c15799312cc535f,2017-04-18 10:28:38,Stephen Blott,Note Firefox and key handling in README.md.,False
4f4abdadfb283ee296bb4f4d286923eaca41cd13,2017-04-18 10:21:35,Stephen Blott,"Merge pull request #2470 from smblott-github/rework-key-handling-to-keydown

Rework key handling to keydown",True
41907f524275415cfd0f5336655a285105aa86e7,2017-04-18 10:20:51,Stephen Blott,Better check for handlerId.,False
b80f11b6f36b6302b1b5bb4d033681305fe961fc,2017-04-18 10:20:51,Stephen Blott,Set handlerId directly to a non-id.,False
748f1dcc204d1c08d6deb683d896824a15fa4fe3,2017-04-18 10:20:51,Stephen Blott,"Fix <Shift> or <Ctrl> link-hint behaviour.

Error was introduced by seemingly innocuous but nevertheless significant
change in previous commit.

Tests picked up the problem.",False
1979d60f224453d9508e55d82a7ccb590a3a2912,2017-04-18 10:20:51,Stephen Blott,"Make the consumeKeyup handler a singleton.

That is, allow at most one handler to be installed at any one time.

I have not observed this to be necessary.  However, if there were any
systematic way in which we weren't seeing the necessary keyup events,
then these handlers would just be added and added.  So this seems safer.",False
17722aa93ba2f0fb08ee87dc76698fb37a2e0fd9,2017-04-18 10:20:51,Stephen Blott,"Fix filtered link hints.

For filtered link hints, "" "" was broken; it was treated as ""space"".",False
4c32c0383964e178e0196a87df7fc7a4ad7f8f27,2017-04-18 10:20:51,Stephen Blott,"Use event.code to detect/suppress keyup events.

This avoids the possibility of leaking keyup events if the keys a
released in a different order from that in which they were pressed.

Also, replace suppressKeyupAfterEscape with this same mechanism.

This fixes a bug (in master/1.59) whereby we leak the keyup event for
`i` when entering insert mode.

TODO:

- `/`, `<Escape>` leaks a keyup event
- `i` leaks a keyup event",False
40ece51a53ee4042caad7854e415de56c0c69cab,2017-04-18 10:20:51,Stephen Blott,Continue bubbling unmapped events.,False
95cd386ce3ae09c45df8fbf7bda78cf8146b0b3d,2017-04-18 10:20:51,Stephen Blott,Do not reset key state for modifiers.,False
b88ee579c4471d27dbb4aba59215f5e85b7d32a2,2017-04-18 10:20:51,Stephen Blott,Avoid repeating Backspace and Delete keys.,False
ee83d1a9603a304c9328d3587e2db829fcec7aaf,2017-04-18 10:20:51,Stephen Blott,"Ignore keybiard repeats.

Keyboard repeats were interfering with smooth scrolling.  But we should
be ignoreing them anyway.",False
d03845e3151babbd63cf13e9e3d74d98351671f9,2017-04-18 10:20:51,Stephen Blott,"Remove use of keyCodes entirely.

event.keyCode` is depricated:

  - https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode",False
8e4119f84bbde748eb595e6766dbb47a6cd0133c,2017-04-18 10:20:51,Stephen Blott,Rework tests for all key handling on keydown.,False
388d866e995249a0be3154c349db2edac664a3fa,2017-04-18 10:20:51,Stephen Blott,Remove out-of-date comment.,False
bd66c90a6e678fe931bed75f9dda562adc9e4b7d,2017-04-18 10:20:51,Stephen Blott,Migrate marks to keydown only.,False
044990fd24f9d39b11147a8430c531c548eb1347,2017-04-18 10:20:10,Stephen Blott,Migrate link hints to keydown only.,False
44555e7863a66b906c47f0c94507d9e055922d3e,2017-04-18 10:20:10,Stephen Blott,Move keyboard utils to keydown and migrate normal/visual modes.,False
8058a54fd5a6a2f0e1a62a3a66f837a07045396e,2017-04-18 10:17:15,Stephen Blott,"Merge pull request #2476 from mrmr1993/firefox

Improve firefox support",True
84723d7561d0cc12f54a6d388dcd505ddd6105ac,2017-04-18 10:13:36,Stephen Blott,"Merge pull request #2478 from mrmr1993/always-update-help

Regenerate help page data when key bindings are updated",True
b0fc681480da40ec0bdb43773275ef7181c78cf1,2017-04-18 06:48:14,mrmr1993,"Check whether chrome.storage.sync is enabled, fall back to .local if not",False
50eb814dfff68426dac03b0a804424c3eb7e9770,2017-04-18 04:21:20,mrmr1993,Regenerate help page data when key bindings are updated,False
93a07e4c4ccc64b5939adbf71a12bfad403845ad,2017-04-17 22:06:04,mrmr1993,Remove content_script_loader and all references to it,False
42025fd9ceb7042e80b09744fdcdd47d447dec2f,2017-04-17 22:03:16,mrmr1993,Clarify postFindFocus and obviously separate it from the try..catch,False
1190be3c0182e1a93bb67e695c4238f286910bdc,2017-04-16 20:39:13,mrmr1993,Use browser independent new tab page URL (about:newtab),False
1df58a31b95705b2ea065c11af80fb2a667be1ec,2017-04-16 20:37:22,mrmr1993,Rework FindMode HUD refocusing to not depend directly on the HUD,False
8b37743fa6f924995bb5fce581c4c73ad886257d,2017-04-16 20:30:25,mrmr1993,"Catch errors thrown by window.find when it wraps/fails on FF

This does NOT fix wrapping, only catches errors",False
0ba625a210f707a66c7f87d350948ab61716409a,2017-04-16 20:27:46,mrmr1993,Guard against unsupported non-standard contentEditable=plaintext-only,False
73bb694fb26c8a990ea624e9e35cb878ddc96afa,2017-04-16 19:54:35,mrmr1993,Only remove settings from storage.local if it's not our main store,False
6745640bc04f1d2ea7c5afde149c86efcfcb7bf6,2017-04-16 19:54:35,mrmr1993,Add a comment to manifest about content scripts in pages/*.html,False
11e4fc2e1fbb1f2c3633a7ab23dfc24eb4ca511f,2017-04-16 19:54:35,mrmr1993,"Revert ""Use HTML5 import to load content scripts.""

This reverts commit d00345f45b5b3e56970237799c69808527e91919.

This is not (and will not be) supported by Firefox.",False
1d9a5b4935d6cab867ab44d0d8265738c37ce988,2017-04-16 19:54:15,mrmr1993,Workaround type error for unsupported openerTabId in FF,False
905fc2d147d1bc656c9e9fec74cda364a686d638,2017-04-16 19:54:15,mrmr1993,Fallback to storage.local if storage.sync is not available,False
f4f017b8fd496b1b4ccd79504ca76cc144cc233e,2017-04-13 20:42:52,Stephen Blott,"Merge pull request #2471 from mrmr1993/ff-options-textbox-wrap

Show line breaks for newlines in the options page (FF)",True
9be3050051267fe993036f4e1c115559661cdcac,2017-04-13 20:20:27,mrmr1993,"Use white-space: pre; for options page inputs

For textareas, we still want line breaks, otherwise we would use an
input. Chrome (incorrectly) renders newlines in `white-space: nowrap`
as line breaks; however, firefox collapses the newlines into horizontal
whitespace.

`white-space: pre` is spec'd as intended, and works correctly in Chrome
and FF.",False
8cee2f6e710edd8f4e9afb981e44bacfd8d97ac0,2017-04-13 20:04:25,Stephen Blott,"Merge pull request #2460 from novelview9/patch-1

fix typo",True
a527d355534514ae762753e3c0c6d2f35d32080c,2017-04-07 14:25:59,Stephen Blott,Bump version to 1.59.,False
d0f8307ac6e6092f9487b9f1c85db34bd9020123,2017-04-06 15:00:56,Stephen Blott,Better note re. key handling and PDF tabs.,False
a79032079297b6dd5d9312bfbf752b5d4e1830fc,2017-03-25 22:59:48,Luke,fix typo,False
dae50e2bea229c3c4e31ea9757a1eac9d3303747,2017-03-24 13:16:17,Stephen Blott,Note key-handling changes in README.md.,False
6d57b8a35b6c957bd610bc6895e637954638c585,2017-03-24 12:31:34,Stephen Blott,"Merge pull request #2456 from smblott-github/always-keydown-and-event.key

Always use keydown and event.key (partial PDF-tab fix)",True
1e6f5f7c2db2fc2a7da511c57a287f5165c8a835,2017-03-22 18:06:58,Stephen Blott,"Note TODO re. keydown, keypress.",False
e19f5c95c19eff13be96b8438711d37dc37884d1,2017-03-22 16:44:15,Stephen Blott,"Include utils in the HUD.

Fixes #2454.

Because `Utils` wasn't available, neither were the `mapkey` mappings.",False
f2d27321d96cd31c63abceb3e09bfa97ca13b698,2017-03-22 15:13:03,Stephen Blott,"Move key handling to keydown and event.key.

- For PDF tabs, we see keydown events but we don't see the corresponding
  keypress events, so this allows us to navigate through PDF tabs with
  J/K.

- This relies on using `event.key` instead of `event.keyIdentifier`
  (which is no longer supported).

- Also move mapkey handling into the keyboard utils.

The effect of all of this is to simplify and unify much of our key
handling.

Fixes #1243 (for tab commands).

There are known places where we can prune a considerable amount of key
handling code.  However, that code is left in place for now in case this
change throws up some unexpected issues.",False
a8f44aa35d4a9735637e07b48a3b40654b3f0f65,2017-03-22 13:10:47,Stephen Blott,"Remove and refactor mapKeyRegistery.

1. Remove the use of mapKeyRegistery from the mode handler.
2. Refactor use of mapKeyRegistery keyboard utils.

This is preparatory to refactoring all of the keyboard handling.",False
a2d3b2042e540f0c4b065fffacdac01982053014,2017-03-19 12:36:26,Stephen Blott,Bump version to 1.58.2.,False
171c2e927b0dff8343b20d9272d10f1592c8d739,2017-03-19 12:27:51,Stephen Blott,"event.key is not always defined

Fixes #2453.",False
16b43ce1d3ad28fdd049020cd07e51af36b5d98e,2017-03-13 16:24:08,Stephen Blott,"Merge pull request #2448 from mrmr1993/use-right-check-for-hashChange

Minor fix: Use the appropriate handler for hashChange",True
410e81f41a8bd0328ea261c358cbd8bc154d020b,2017-03-10 21:17:38,mrmr1993,Use the appropriate handler for hashChange,False
e08e379876398c0a02796d02ba22bfd5ceae8730,2017-03-09 15:29:10,Stephen Blott,Bump version number to 1.58.1.,False
10dcaa389958483a988a5bd86d3fd3d4e2799a77,2017-03-09 15:25:12,Stephen Blott,Fix #2445 (link hints with queue broken).,False
6828a9cb3664d58ebbc19e5ab9e61e7c575206a3,2017-03-08 18:38:47,Stephen Blott,"Merge pull request #2444 from rdpate/patch-1

fix typo",True
f2a784f20bf76c64551a33854a50584f8c27b23b,2017-03-08 18:34:31,Roger Pate,fix typo,False
4415d5d0b2ab12cc8e47f6a4567a51ebf27eafaf,2017-03-08 16:14:30,Stephen Blott,Bump version number to 1.58.,False
ea9622a3819d376a575c8d4d0cf64e3165d5eafd,2017-03-04 13:29:01,Stephen Blott,"Merge pull request #2369 from gdh1995/zoomed-docEl-offset

getViewportTopLeft: support zoomed static documentElement",True
5cdaf6b8fa341ff9f1a3c2c7c21416deb1724d08,2017-03-04 13:25:45,Stephen Blott,"Merge pull request #2384 from gdh1995/pass-keys-on-body-locked

InsertMode should not handle key events if document.body is editable",True
0d239c338c04b5fdbdfbcbf13614c341383429a2,2017-03-04 13:09:08,Stephen Blott,"Merge pull request #2428 from mrmr1993/use-event-argument

Use event argument instead of global event object",True
3f8026dfc1ce12fb179b758f84254e34e65ac339,2017-02-11 22:32:43,mrmr1993,Don't depend on global event for Frame event listeners (FF),False
ddbc94875a19c2b9c57ca6c282e3d6918c16b279,2017-02-11 22:32:43,mrmr1993,Don't depend on global event for CoreScroller event listeners (FF),False
771b0abc9d60a31d29cb59de6edfe529a5e3005c,2017-02-11 12:57:55,Stephen Blott,"Merge pull request #2426 from mrmr1993/no-depreciated-apis

Replace depreciated APIs",True
97586506fb861c9ca0af1e7fd4941ed0ec5b1b9b,2017-02-10 00:03:30,mrmr1993,Guard against undefined (out of spec) getDestinationInsertionPoints,False
e053530dc82cdf202c67483d9148d006daab7979,2017-02-09 01:57:48,mrmr1993,"Stop using deprecated key 'selected' of tabs; switch to 'active'

The documentation suggests that 'highlighted' is equivalent to
'selected'. However, multiple tabs can be highlighted in a window -- in
fact, everywhere 'selected' was used, we wanted the unique active tab.",False
bebedfa4e7abc45fc72ce961d28b6ee44f84b895,2017-02-09 01:55:40,mrmr1993,Stop using non-standard event.srcElement; switch to event.target,False
992149b64edf264fcd86179a2ba0f4d741f3cddd,2017-02-08 23:35:00,mrmr1993,Remove stub for deprecated onActiveChanged,False
47ba34083e229293753854dab32bf03947caea6b,2017-02-08 23:31:26,mrmr1993,Remove stub for deprecated tabs.onSelectionChanged,False
935a3b4acc063317571df9397032e23d7b29dcd1,2017-02-08 23:30:12,mrmr1993,Stop using deprecated tabs.getAllInWindow; switch to tabs.query,False
32f4a88943bb9bae5398241937f298287ad39417,2017-02-08 23:28:40,mrmr1993,Stop using deprecated tabs.getSelected; switch to tabs.query,False
48c169bd5a61685bb4e67b1e76c939dbf360a658,2017-01-03 14:15:19,gdh1995,"InsertMode should not handle key events if document.body is editable

For example, the host JavaScript may create an ""about:blank"" iframe with a
`content-editable` `body`, and then:
* the parent frame may handle `Escape` key events by itself
* but now, Vimium always grabs `Escape` events
  * and tries to exit `InsertMode`
  * although `document.body` is still current `activeElement`
    after `body.blur()`
* as a result, neither the parent can receive and handle wanted keyevents,
  nor Vimium will succeed in returing back to NormalMode",False
a6ee639ecaf758fbe4652b5d70beaa607821ca04,2017-01-03 14:14:41,gdh1995,take documentElement's border into consideration,False
c288100d9ea5c09efa14b0d4d32ee87b077b8588,2017-01-03 14:14:41,gdh1995,"getViewportTopLeft: consider the new style ""contain""

If an element's `contain` is/contains `paint`, then it will be forced
showing just as its `position` is `relative`.",False
0338c08ed7a15e11363b6218da8cb495b769ecfa,2017-01-03 14:14:40,gdh1995,"getViewportTopLeft: support zoomed static documentElement

if `document.documentElement` is zoomed, Vimium's hints `<div>` are also zoomed,
and then `scrollY` may be not equal with viewport client rect's `top`.

Example:
* make the tab zoom level is 1, `documentElement`'s `zoom` style is 2
* open a page, scroll to the top left corner
* press `f`, and all things are right
* exit LinkHints mode, scroll down for 100px, and then press `f`
* this time all hints has moved down 200px from the correct place",False
b12ed93d0b96df90511d3331e8a5f54e7b1b7da4,2016-12-26 12:13:35,Stephen Blott,"Merge pull request #2386 from smblott-github/fix-infinite-scrolling

Fix (another) infinite-scroll issue.",True
4855173ec4e8e9852c4a6d51be0a8a5519e9daba,2016-12-26 11:47:30,Stephen Blott,"Fix (another) infinite-scroll issue.

Steps to reproduce:

- Press and hold `j`.
- Tab `k`.
- Release `j`.

The tap on `k` is uninstalling the `cancelEventListener` installed by
`j`, and because we advance `@time`, the `j` stops scrolling and
removes the `cancelEventListener` installed for `k`.  So we end up with
no `cancelEventListener` installed.

The fix is to make the `cancelEventListener` specific to the scroller
instance.

The more fundamental problem here is that we're mixing dynamic and
static state.  A better approach would be to have `CoreScroller` as a
class, with a new instance created for each scroll instance.",False
4a54a75fe1f987b1ccc266fbeaf2a2078a8e1508,2016-12-26 11:10:11,Stephen Blott,"Merge pull request #2385 from smblott-github/tagName-not-a-string

Guard against element.tagName not being a string.",True
ea7b2005c078dbe862b805a47e5723ba52bbef85,2016-12-26 10:55:27,Stephen Blott,"Guard against element.tagName not being a string.

Example page: http://codeforces.com/contest/752/problem/B.

There, `element.tagName` is an element with `name` `tagName` (not a string).  Here, we guard against that case.

Fixes #2305.",False
351489c7c5e093531aa8cd5870a3f78c99fb2923,2016-12-21 21:39:59,Stephen Blott,"Don't focus non-focusable node.

Try the following....

- load page
- `/`
- type some junk which matches nothing
- `Escape`

We expect to leave find mode.  Instead, we have to hit escape again to
get out of find mode.

Here, `focusNode.focus()` is not a function.",False
e89a831ecbcc39ccce6b33e6ee65b29611e03418,2016-12-21 10:52:17,Stephen Blott,Note passNextKey normal in README.md.,False
3d7e37611c4af4877f72fa40f73cc6714d5b5485,2016-12-21 10:43:54,Stephen Blott,Tweak #2327.,False
3fa11be0a64d5b98f9db8f052c46327aa0cc1deb,2016-12-21 10:41:01,Stephen Blott,"Merge pull request #2308 from achew22/cake

Don't set the update_url by default.",True
42a1f3ddecfaaab730dca16ce68188c0b81b2ac5,2016-12-21 10:40:22,Stephen Blott,"Merge pull request #2379 from smblott-github/match-about-blank

Add match-about-blank permission.",True
320f433afb53cc774b175dab0f6a1ad7a47d60f9,2016-12-21 10:39:42,Stephen Blott,"Merge pull request #2311 from smblott-github/enterNormalMode

New command option to enter normal mode",True
caa63d6642141d2fe4cd6941ec1e84dd2d3e8225,2016-12-21 10:37:11,Stephen Blott,"Merge pull request #2327 from sco-tt/capitalized-link-hints-options-2

Makes sure all custom link hint characters defined in settings are lowercase",True
dfbd68dd4462181be2e4d61ed255adaee5d39311,2016-12-21 10:19:59,Stephen Blott,"Add match-about-blank permission.

This allows Vimium to run in iframes with `about:blank` URLs.

Fixes #2360.",False
3da653a2c570e9a708e67b8a5a5db5c3ad3fa0f1,2016-12-15 06:35:23,Scott Pinkelman,Forces user defined link hints to when options are saved on options page,False
9fb755929f5b629c57f77e6407c5c24ccd06e4a4,2016-12-14 11:09:53,Stephen Blott,"Add ""swap"" command option for marks.

In a browser, I find global marks considerably more useful than local
marks; for example, I use marks to quickly jump back to my email tab.

Unfortunately, inheriting vim's approach, global marks require capital
letters, so the `<Shift>` key.

This PR implements:

    map m Marks.activateCreateMode swap
    map ' Marks.activateGotoMode swap

which inverts the `isGlobalMark()` test for the `<Shift>` key.

Is the name `swap` the best one?  It could be `invert` instead, or
perhaps there's something better.",False
edfb7ba3ca148f7b00bd683d1979330f395f2e7e,2016-12-12 16:01:30,Stephen Blott,Remove unused parameter.,False
0474ca38ce8e687422c82303a2b3a24c0b638098,2016-12-12 15:57:07,Stephen Blott,Remove references to enterNormalMode command.,False
9225b2a1b9baa96ca94c2fa23e4a293478223c7e,2016-12-12 11:46:20,Stephen Blott,"Merge pull request #2370 from smblott-github/float-find-mode-matches-right

Float find-mode matches to the right.",True
c4c2f428966631fc8fd66a45044be7607e5654c5,2016-12-12 11:40:08,Stephen Blott,"Float find-mode matches to the right.

This floats the ""5 Matches"" text in the find-mode HUD to the right.

This looks nicer, because the ""5 Matches"" text doesn't move as you type.

As it happens, it also fixes an issue which arose a few months ago (for
unknown reasons) with the positioning of the cursor in find mode.  The
cursor position was becoming ""jammed"" after the first character as you
type.",False
5a3818db59e4778b60feef3f9de6f64595300ca2,2016-12-11 21:46:57,Stephen Blott,Tweak custom-search-engine help HTML.,False
572ad759a61d0b36839723d82779f26aa2833294,2016-12-11 21:22:38,Stephen Blott,Better wording fo command description.,False
849829d41469e113fc81cbe1b65d32b511e59905,2016-12-11 21:13:56,Stephen Blott,Documentation for  updates.,False
f490b85757656c2276dcb9faa6237ca8231f8046,2016-12-11 21:08:22,Stephen Blott,"Use registryEntry.optionList.

This means that we get the new tabs in the same order as they are
specified in the key mapping.",False
d142f4c4c75eceb92184c0773f4d7b376870accf,2016-12-11 20:58:56,Stephen Blott,"Extend createTab to open specific pages.

Example:

    map a createTab http://edition.cnn.com/ http://www.bbc.co.uk/news

which creates two new tabs, but preloaded with these specific URLs.

`2a` creates four new tabs, two copies of each.

Limitation:

- We cannot control the order of the tabs, so we might get CNN then BBC,
  or BBC then CNN.  This happens because command options are stored in
  an object, and we cannot control the order of the keys.

Also, with:

    map a createTab http://www.bbc.co.uk/news http://www.bbc.co.uk/news

we only get one new tab (same reason as above).",False
b4eb7140f5cf4f567c83f7af952b09e8bc80918d,2016-12-11 20:57:07,Stephen Blott,"Add the raw option list to the command registry.

Keep the option list (in addition to the parsed command options) because
some commands may depend upon the command option order.  One currect
example is #2318.",False
7fe88a70031c09f530ad2c22be88c30c7f1e787e,2016-12-11 20:52:02,Stephen Blott,"Merge pull request #2368 from smblott-github/rework-key-mapping-parsing

Rework key-mapping parsing and help-dialog HTML",True
bd607cf57512580cf5c9c7d81be5b79b93d1ae9f,2016-12-11 20:29:49,Stephen Blott,"Ensure that we get the last  for a key.

(Because we're scanning backwards throught the mappings, we shouldn't
overwrite an existing mapping.)",False
96fcc551188a548c565103285701aed9622e5a99,2016-12-11 20:27:32,Stephen Blott,Remove Utils.nextTick() to fix tests.,False
cc09af6921228033b822ef4ad4713abd26c375e7,2016-12-11 20:22:21,Stephen Blott,"Rework help-dialog HTML.

Previously, the dynamic HTML for the help dialog was generated on the
background page.  The HTML itself was tangled in with program logic.

Here, we move all of the HTML to HTML5 templates; also, we build the
help-dialog contents in the help dialog itself, not on the background
page.

Note: #2368 is included here too.

(Background: I'm trying to clean up some of the command and help-dialog
logic in preparation for addressing the issue of how to document command
options, see #2319.)",False
1664a02c02be27a824b19633740a23ec01573c77,2016-12-11 13:52:18,Stephen Blott,"Rework key-mapping parsing.

There are two changes here:

1. Treat built-in key mappings and custom key mappings in the same way;
that is, we prepend the built-in mappings to the custom mappings and
then parse them all together.  This results in a number of
simplifications due to previous duplication of logic and the elimination
of special cases.

2. Parse key mappings in reverse order, so we can just ignore key
mappings after first encountering a key sequence.  So, `map`, `unmap`
and `unmapAll` are all treated in more or less the same way.

This is preparatory to reworking some aspects of the help page.  In
particular, regardless of the order of maps, unmaps, etc., this approach
makes it easier to find the mapping in effect for a key sequence (and be
able to recreate the order of those mappings).",False
bd06c7ccfbfcf36e6d15fba72b7af90254b05da2,2016-12-10 16:21:57,Stephen Blott,"Merge pull request #2326 from smblott-github/move-search-engines-to-bg-utils

Move SearchEngines to bg-utils.coffee.",True
3019e38d6db4d56036eff8aaa2d2d37f85e4fb07,2016-12-10 16:11:54,Stephen Blott,Use 'map X passNextKey normal'.,False
856f0ff8b35a66ecfa8a77ae41f4b761c1b1951c,2016-12-10 16:02:13,Stephen Blott,Tweak #2338.,False
6e782d8cb78ce0faf30d1cb7ad2c5a1e6e023496,2016-11-09 21:56:38,Ramiro Araujo,update credits,False
c5d6b80cb6eae99aed461e20c99a286eaf352a2a,2016-11-09 21:53:48,Ramiro Araujo,"treat select element as an input, setting focus to it",False
2287f67a32bd4cb8012892c782b913e7ca1b9952,2016-10-24 09:16:49,Scott Pinkelman,Makes sure all custom link hint characters defined in settings are lower case when link hints are generated,False
24a6217f26911ba4e934f4a7bff8bcd30c227163,2016-10-23 21:20:51,Stephen Blott,"Move SearchEngines to bg-utils.coffee.

`SearchEngines` was previously in `utils.coffee`, which means it was
loaded in *every* content frame.  This is unnecessary, since it is only
used on the background page.  So this PR moves it there.

Also:

- Simplify some unnecessarily complex logic in `vomnibar.coffee`.
- Re-use `Utils.parseLines()` to parse the custom search engine configuation text.",False
84b3e7d65d6cd7391f5b00cb77398cb60fe245bb,2016-10-23 20:35:48,Stephen Blott,Better line parsing (add note in README).,False
e9183dcc9675ed9a710d2ba6839f008560c6e91a,2016-10-23 20:35:24,Stephen Blott,Better line parsing (add note in README).,False
458c7401394a8e2a97dbddfbf850b643990a1e70,2016-10-23 20:32:53,Stephen Blott,"Merge pull request #2315 from smblott-github/better-line-parsing

Better line parsing (for custom key mappings)",True
4486be1f40c582bf159e034f590cb82cb84caafc,2016-10-23 20:30:08,Stephen Blott,Better line parsing (add tests).,False
decf9a145d4a1f7107fe0ce533765891960f5555,2016-10-23 20:20:46,Stephen Blott,Better line parsing (simplified).,False
bc2f5e0f52179e915ed7a439fc6bfa03525156ee,2016-10-17 12:45:06,Stephen Blott,"Better line parsing.

1. Explicitly remove comments.
2. A trailing backslash means the current line continues on the next line.

E.g.

    a \
      b \
      c

is a single line `a b c`.

This helps alleviate the fact that configuration lines can be very long,
whereas the *Custom key mappings* input is quite narrow.

TODO: We should use the same line parser in the custom-search-engines
input.",False
f01c01383d5826a028d4c5c2c43d7b5f18f2fef2,2016-10-15 19:53:57,Stephen Blott,Note mapKey in README.md.,False
39cc3747aa5b9f195b07690e8265b89c60e58a5a,2016-10-15 19:43:16,Stephen Blott,enterNormalMode; tweak indicator.,False
32dc2bf3bf5c28ff44fff89d2436a76bb7bba925,2016-10-15 16:43:25,Stephen Blott,"enterNormalMode; new command - implementation

Here's the problem...

Many sites define their own keyboard shortcuts, for example Google Play
Music defines `gh` for ""go home"".

On such sites, it's natural to set up pass keys for `g` and `h`.

But that makes any Vimium key bindings which begin with `g`
inaccessible.

Here, we add a new command `enterNormalMode` which installs a new
normal-mode instance (without any pass keys).  This executes a single
normal-mode command then exits.

Example:

    map \ enterNormalMode
    map | enterNormalMode count=999999

Assuming `g` and `o` are pass keys:

- `gh` or `o` - use the page's binding
- `\gg` - scroll to top
- `2\ggo` - scroll to the top and open the Vomnibar
- `\g<Escape>o` - open the Vomnibar
- `\<Escape>o` - use the page's bindings
- `\\\\\\<Escape>o` - use the page's bindings (new normal-mode instances
  displace previous ones)

This required some changes to the scroller.  Previously, we only ever
had one normal-mode instance, and could arrange statically that the
scroller's key listeners were above normal-mode's key listeners in the
handler stack.  Here, we fix this by adding and removing the scroller's
listeners dynamically, so they're always at the top of the handler
stack.",False
68205d32188cd94c4c533d8bacc8a2b384821bae,2016-10-15 11:23:44,Stephen Blott,"No-op; rearrange content-script command arguments.

This is a no-op.  It arranges that the registry entry for each command
is passed to the command, for every command.

That required a small ammount of reworking in a couple of cases.",False
f9c3a805b3540b9fb889c3cf29aa996f191e1d55,2016-10-11 02:20:51,Andrew Z Allen,"Don't set the update_url by default.

Setting the update_url by default can lead to accidentally updating to
the version you host on github. Setting this to a safe default of """" and
leaving a comment explaining why.",False
1eb6bfdcad6d7091911e395083afe1148b2a4c76,2016-10-10 18:25:47,Stephen Blott,"Merge pull request #2306 from smblott-github/add-key-translation

Add ""mapkey"" command for key mappings.",True
0346b2d971ffab26a8d37946aca1c550b316e317,2016-10-10 18:24:12,Stephen Blott,Add TODO.,False
c5e26d75cb8525ba34f6f54f1a1c041df66075e3,2016-10-10 17:58:15,Stephen Blott,Rename 'translate' to 'mapkey'.,False
a3c4b530f24ee8bc1f9a1219cf35fb87a1aa0402,2016-10-10 17:53:56,Stephen Blott,"Merge pull request #2307 from smblott-github/disable-grab-back-focus-in-all-frames

Disable grab-back-focus in all frames.",True
9270c91a4db2c4824dacb64b23002a53557ef52b,2016-10-10 15:53:05,Stephen Blott,"Disable grab-back-focus in all frames.

When the user begins interacting with one frame, we disable the
grab-back-focus mode in *all* frames.

Previously, grab-back-focus was preventing users from selecting inputs
in frames other than the active frame.

Fixes #2296 (possibly).",False
1df19294c544b897bf5fe52401050dd43b69129d,2016-10-09 22:18:59,Stephen Blott,Tweak (simplify) #2306.,False
9c1012ad3a731b015b8a70b58828fbcd0acb7db0,2016-10-09 21:01:23,Stephen Blott,"Extend key translation to include Escape.

Here, these map to escape:

    translate x <c-[>
    translate <c-c> <c-[>",False
6596e30392a1ca053223825eda5cde060394a4aa,2016-10-09 19:50:15,Stephen Blott,"Add translate command for key mappings.

Under *Custom key mappings* (on the options page), this implements:

    translate x y

Whenever the users types `x` in normal mode or in visual mode, the `x`
is replaced by `y`.

For example:

    map √ß l

(which apparently would be helpful on Brazilian keyboards).

Issues:

- Do we want yet another hack like this?  This would be documented only on
  the wiki.

- If we allowed `translate <c-c> <c-[>` (and extended `isEscape()` to
  use the translation), then we'd get the `exitMode` command for free
  (#2253).

- Alternatively, instead of adding a new ""command"" called `translate`,
  we could overload the existing `map` command.  Since these are
  single-key mappings, there's no ambiguity.  (Although, I guess there's
  a risk some user has junk in their key mappings and would be taken by
  surprise).

Inspired by isssue posted by @vhoyer (#2305).

Fixes #2305.",False
801dd4ea5edfff8b22c3c8c875808ee33e96571e,2016-10-09 18:52:32,Stephen Blott,"Move logging to the frame's port.

Comminication by the frame's port is faster, and no response is sent.",False
8535fdde4f7dae1a1a5148d25ee0829423e92e7e,2016-10-09 18:11:12,Stephen Blott,"Remove description from registry entry for key-state mapping.

We do not need the registryEntry's decription in the content scripts, so
remove it (saving a marginal amount of memory and time).",False
895925600e37cc88c95d1864faebe6e7aa05348a,2016-10-08 19:50:34,Stephen Blott,"Grab back focus prevents focusing embeds.""

Partially addresses #2303.",False
da2be746332c69326b008f555aec2f1a166de7b0,2016-10-08 18:44:37,Stephen Blott,"Better positioning of link-hints flash rect.

When an <a> spans the end of a line and the start of the next line, we
now highlight both parts of the link (instead of just the first).

Also, refactor code for calculating the position of the viewport into a
separate utility in DomUtils.",False
219298f7f418f51721ce6a673ffb956ec00c1633,2016-10-08 18:33:22,Stephen Blott,"Merge pull request #2301 from gdh1995/documentElement-offset

handle documentElement's top/left margin correctly",True
71612af7eb81fa77c0be98a2a69e4852f4003e66,2016-10-08 12:22:22,Stephen Blott,"Refactor (and fix) key-parsing regexp.

Fixes #2299.

Also, separate this regexp out into its constituent parts, because it is
becoming too different to read.",False
d14ec3b571df2d0581506e329e593d5cd2344aa7,2016-10-07 22:08:07,gdh1995,handle documentElement's top margin correctly,False
49194546a00ba5d9540b252fb10a699319c0d64d,2016-10-05 08:56:53,Stephen Blott,Note backspace key (fix typo).,False
6b079c6e12c82813397d8123f6bd5bf95061fd13,2016-10-05 08:56:09,Stephen Blott,Note backspace key.,False
30387142cd1fee828f0dc39864c68960167deff1,2016-10-02 20:39:55,Stephen Blott,Tweak logging.,False
3cabcc92adebabf7b5665fddc29c2fa3330ec000,2016-10-02 18:41:24,Stephen Blott,More key-sequance parser tests.,False
264c1e56505ae4c2f323752877696f7ab79ccdfe,2016-10-02 17:21:26,Stephen Blott,Add post-1.57 notes.,False
a6af88d3c88b3795a207aae6b364713e855ee602,2016-10-02 17:03:39,Stephen Blott,"Merge pull request #2284 from smblott-github/silent-releases

Enable silent/patch releases.",True
c370855afd2f9f4123de3e9d2d8492c036a605b6,2016-10-02 17:03:00,Stephen Blott,"Merge pull request #2289 from smblott-github/rework-key-parsing

Rework key-sequence parsing.",True
5accaae40ebb50d5eaac19899fe1942574daf103,2016-10-02 17:01:20,Stephen Blott,Add tests for compareVersions().,False
54139c11231bf7e7a3a9f4c98fb688d2d0fe22c9,2016-10-02 16:55:20,Stephen Blott,Better regexp (to match legacy behaviour for '<c->>'.,False
d0092f4f078a7b590746092c78b91da35c6a403e,2016-10-02 14:10:56,Stephen Blott,Single quotes are clearer here.,False
4305730d512276fd929eaf12b8c134e69df52437,2016-10-02 14:09:21,Stephen Blott,"Rename normalizeKey to parseKeySequence.

The new name better describes which the function does.",False
3245cb8e605ba3fd59b9f99bdd28714157ed06eb,2016-10-02 14:04:06,Stephen Blott,Add comment giving example key parsing.,False
967aa7bf31998f667616f19f9b83e409340b66d1,2016-10-02 13:52:09,Stephen Blott,"Rework key-sequence parsing.

This reworks the parsing of key sequences like `<c-a-Z>x`:

Advantages over the status quo:

- Parses key sequences in one only place (previously two),
- Removes two hideous regular expression.
- Admits multi-modifier bindings (like `<c-a-Z>`).
- Adds more (and better) tests.
- (And it should be easier to maintain.)

Replaces #2210 (this also simplifies key parsing substantially).",False
d439a13afd1569548e62def33278f31b258984db,2016-10-01 18:02:28,Stephen Blott,"Merge pull request #2285 from smblott-github/content-loader-via-import

Use HTML5 import to load content scripts.",True
469e085c3645a26f460c793082fd3c8beb24ef16,2016-10-01 17:37:26,Stephen Blott,Remove legacy migrations.,False
d27a4bd53b8bd2939a9d5c5ecd8b251c2645c1ed,2016-10-01 17:24:21,Stephen Blott,Use full-path URLs for Vimium resources.,False
d00345f45b5b3e56970237799c69808527e91919,2016-10-01 16:48:24,Stephen Blott,"Use HTML5 import to load content scripts.

This is one approach to fixing #2277 properly.  (Currently there's a
temporary fix in place.)

This uses HTML5 imports in place of the content-script loader.

This is better than the current ""fix"" because content scripts are only
listed in one place two places (as opposed to six).

It's worse than the previous content-script loader, though, in that
content scripts must be listed in two places, instead of one.

Fixes #2277.",False
4d58c8a9324475f41986e84cd0fac19f05c5dd6d,2016-10-01 14:59:04,Stephen Blott,v1.57 release,False
9c556de63f4f159dd89582409ea4a4a69dcbf45f,2016-10-01 14:43:18,Stephen Blott,"Enable silent/patch releases.

Currently, all new releases trigger a notification.

This changes that behaviour such that if the previous and current
releases have the same major and minor release numbers, then no
notification is shown.

This allows us to push bug-fix and minor releases without bugging the
user.",False
c39ba088359a0572c9f5b7267ba4f638a209a114,2016-10-01 11:21:35,Stephen Blott,Note  hangs Vimium bug fix.,False
53bc921af7d5ac96bc17754dcee5f2fe72ccde39,2016-10-01 11:12:06,Stephen Blott,"Merge pull request #2283 from smblott-github/fix-find-mode-hangs

Find mode can hang Vimium (fixed).",True
4fb3e8aa0d6b5ab0147761971e74baf3f02284af,2016-10-01 11:11:53,Stephen Blott,"Merge pull request #2282 from smblott-github/fix-coffeescript-version

Remove Coffeescript 1.10 dependency.",True
fb876164338e865144402689b159e4edf35cf777,2016-10-01 10:55:00,Stephen Blott,"Fix find-mode hangs.

""/"" followed immediately by ""i"" can hang Vimium.

The problem is that launching find mode is asynchronous (we wait until
the HUD is available). Because normal mode is still active, we can enter
insert mode *before* the find-mode HUD receives the focus.

The result is that we end up in both find mode and insert mode, the HUD
has the focus, but the HUD is in insert mode, so it ignores keyboard
events (including `Escape`).

The only way out is to click the page's body and then type `Escape`.

This commit demonstrates the problem: 7d2b00411eae3293fa4c7b1f61b384c0c495b5a2.

This happens in practice, for example while a busy page is loading.

This commit fixes this by ensuring that find-mode blocks keyboard events
immediately (and synchronously) on launch.",False
f6f4adfd95c34bb3beb5c42972623fe2acb39ec9,2016-09-30 20:02:22,Stephen Blott,"Remove Coffeescript 1.10 dependency.

Fixes #2273.
Fixes #2281.

This fixes the build with Coffeescript 1.11, so we can remove the
hard-wired dependency and notes.",False
43e5f231b2ea81be62db862af82f2a8b0ac34191,2016-09-30 19:27:29,Stephen Blott,Note use Coffeescript 1.10.,False
59942281ce88283345a201f1bfaa76b628308472,2016-09-27 18:15:42,Stephen Blott,"Reinstate loading vimium.css.

Follow on from 8601edd71e74ba522e32658309cb2e7acca8aeeb.",False
e32fde64116421a1d7c2c8fb0728f744469e6df7,2016-09-27 16:37:48,Stephen Blott,"Merge pull request #2278 from smblott-github/fix-travis

Fix Travis builds (lock down Coffeescript version)",True
18f4270086f7baf41b366ba578f29b63bd236950,2016-09-27 16:29:08,Stephen Blott,Note reason for locking down Coffeescript version.,False
e40092ccdb84afe6cf559a3b2e966c6e765cf92e,2016-09-27 16:24:11,David Yan,Attempt to fix travis builds by locking coffee-script to 1.10.0,False
8601edd71e74ba522e32658309cb2e7acca8aeeb,2016-09-27 11:15:19,Stephen Blott,"Disable content-script loader (temporary).

Scripts loaded via the content-script loader previously were loaded
synchronously.  In recent versions of Chrome, they now seem to be loaded
asynchrnously, which causes errors.

This is a temporary commit to keep master healthy until I (or somebody)
figures out properly what is going on.

It is expected to be reverted in due course.",False
6a14a480809e78c33034eac94b223b54dd35925a,2016-09-26 20:19:40,Stephen Blott,"Use title attribute for link text.

Google seems to be using a lot of ""title"" attributes on buttons.  This
makes it possible to type the text in filtered link-hints mode.  (And
you can often guess the text; e.g. ""close"").

We could also show the title text.  That is very visually noisy though,
in practice.",False
afeb65f5af849f04df8380212dbf50a6bf186bc4,2016-09-26 18:14:16,Stephen Blott,"Tweak jsaction detection and add tests.

This tweaks the jsaction detection, in particular excluding elements
where the ""actionName"" is ""_"".  I see a lot of these, and clicking them
doesn't do anything.

Also, added corresponding tests.",False
8c1957e600cff896b2a673d7ba8dbcaa132b37e5,2016-09-26 09:38:30,Stephen Blott,"Fix comment.

Thinking about it more carefully, this algorithm is always O(n^2).",False
92477459341c1308ac48dad46617aea5de788089,2016-09-25 21:38:00,Stephen Blott,"Active hint marker may be in another frame.

Do not set the style on the active hint marker if it's in another frame.",False
6fafe8bc8057c90240b74b56d94707f4f1cd2968,2016-09-25 21:30:57,Stephen Blott,"Reinstate highlighting of first hint.

Applies to filtered hints only.",False
e7c64d80d04c57da09b63e99a4b63396f3a96fcd,2016-09-25 20:58:41,Stephen Blott,"Do not reset tab index on modifiers.

The prevents the active element from being reset when we rotate hint
markers.",False
1b1b9c25e8b234598ff110dce7bb150f6d886169,2016-09-25 20:39:17,Stephen Blott,"Make tab-selected hint visible.

When the user selects an active hint with Tab (for filtered hints),
adjust its z-index such at it is top of the stack.",False
91976ed2fc8026d1b688f210e086af764f1f057a,2016-09-25 20:31:38,Stephen Blott,Refactor z-index allocation to a separate function.,False
194229b6d469d28fa784387a7972aa7306d4f153,2016-09-25 20:25:16,Stephen Blott,Don't forget the tab count on <Space>.,False
1bc4b3e4b5eed07bd478564008b1f2526f1f10f8,2016-09-25 18:00:12,Stephen Blott,Note toggleMuteTab advanced usage.,False
e38af26d3ea2f61ceaa6ffb209e65786e415444f,2016-09-25 17:15:11,Stephen Blott,Note <Space> hint rotation for link hints.,False
ab94f80f1a8c264950b9f5559e1675bdd642f9ec,2016-09-25 17:11:00,Stephen Blott,"Merge pull request #2270 from smblott-github/advanced-toggleMuteTab

Add ""all"" and ""other"" options for toggleMuteTab.",True
6678fabf67e662e004f156432e7dd1a9803d7118,2016-09-25 17:06:53,Stephen Blott,"Merge pull request #2272 from smblott-github/rotate-hints

Space rotates hints (to make hidden hints visible).",True
6d72a51f361c3fcaf105fed82448fa7c15cdaa3a,2016-09-25 16:33:47,Stephen Blott,Fix vomnibar z-index.,False
f691391539ddaa2725e9e7f6eeb29bbafcf40eed,2016-09-25 16:26:56,Stephen Blott,"Hint rotation, tweaks for readability.",False
19e1178b16fd27882c7834d66ad6597847e6baff,2016-09-25 16:02:51,Stephen Blott,"Space rotates hints (to make hidden hints visible).

It is common for link-hint markers to be close togother, and
overlapping.

Here, `<Space>` rotates hint markers such that hidden markers become
visible.

For filtered hints we additionally require a modifier (because `<space>`
on its own is already a token separator).

The calculation of overlapping hints is quite expensive: O(n^2) in the
best case and O(n^3) in the worst cast.  The worst case is
extraordinarily unlikely to arise in practice.",False
3df2dc7299051f96736b65ee8ed774e0d7fbb173,2016-09-24 15:52:18,Stephen Blott,Note changed behaviour of global marks.,False
33ef2322055f70ff106d71b0f1da8109d39a90de,2016-09-24 15:06:58,Stephen Blott,Note 921429924c6b212f7d2a5d7cd15975f243cb2ed6 (handling of three-key bindings).,False
46f785a12ccd402d18f178a8711e99e3a871a567,2016-09-24 14:52:41,Stephen Blott,"Add ""all"" and ""other"" options for toggleMuteTab.

This adds advanced options for toggleMuteTab.

Examples:

   map X toggleMuteTab all
   map Y toggleMuteTab other

In the first case, all audible, unmuted tabs are muted; otherwise all
muted tabs are unmuted.

The second case is the same, except that the current tab is excluded
from consideration.

Follow on from #2269.",False
921429924c6b212f7d2a5d7cd15975f243cb2ed6,2016-09-24 14:47:43,Stephen Blott,"Fix key handling for 3-key mappings.

This only affects key mappings of three keys or longer.

Consider:

    map goa something
    map gob something

Previously, we launched the vomnibar (`o`) on the after `go`, making
these mappings unusable.

This commit fixes that: `go` no longer launches the Vomnibar, but waits
instead to see what the next key is.",False
fc8ed2ae1b237b83974b7408b6a174a3af3ab9cc,2016-09-24 14:21:11,Stephen Blott,"Merge pull request #2250 from smblott-github/better-global-marks

Use prefix matching for global marks.",True
a75e99c1a4a2ca327bf46dbf78b5ce973f3fe082,2016-09-24 13:35:29,Stephen Blott,Tweak #2269 (toggleMuteTab).,False
cfca5794e4073baacb9b3d4a6b0ce21d6587fd34,2016-09-24 13:24:08,Stephen Blott,Merge remote-tracking branch 'tobimensch/master',True
89c93f61aace514487c918ae2c55674136953058,2016-09-24 11:53:41,Stephen Blott,Merge branch 'dpogue-scrollingElement',True
07bc4fbe820ff17b5a6b559a2ebcceb7d52700a2,2016-09-24 11:47:44,Stephen Blott,"Tweak #2168 (scrolling via scrollingElement).

Instead of setting a property of document for `scrollingElement` (if it
is not defined), just use a function and make the decision dynamically
instead.",False
d6db15d6d558b3def86c1b0ac25904abf89adef9,2016-09-23 22:41:29,Tobias Gl√§√üer,fixup! New feature/command: Mute/unmute tab.,True
d6b5a7c26028951f8bb7feeff8801779f9a8506f,2016-09-23 22:37:51,Tobias Gl√§√üer,New feature/command: Mute/unmute tab.,False
641378f58002a4c2314a53eae401e26acc46907c,2016-09-23 18:10:02,Tobias Gl√§√üer,New feature/command: Mute/unmute tab.,False
9b5e26b9009c1ff6b5c55ebd4d0e6c3915df0261,2016-09-23 08:24:43,Darryl Pogue,"Use document.scrollingElement for scrolling

This fixes Vimium with the 'Experimental Web Platform Features' flag
enabled, and ensures compatibility across quirks mode scrolling (via
document.body) and standards-compliant scrolling (via
document.documentElement).",False
4b1654f820b645a339f98160a1607c042217bf9d,2016-09-19 17:20:37,Stephen Blott,Better wording of description for `gi`.,False
947c24259ba31d41dcbbffc2da15cd6873d0e19d,2016-09-17 18:18:56,Stephen Blott,Note <Backkspace> on README.,False
c9369c3e34490afdfa39c6f9520ee24367c0eacd,2016-09-17 15:35:22,Stephen Blott,Merge branch 'gdh1995-backspace-as-go-back',True
9f0ec8cd06903fc25d65b0b82cf8e5fb4e9f5c7a,2016-09-17 15:35:06,Stephen Blott,Rework #2223 (backspace).,False
36afaafc98708a8c0f3915e0c494fcc94bf65b3e,2016-09-17 12:57:39,gdh1995,use keyNames to check backspace keyCode,False
d6b3845a8a9d7604bad7f1a24d87c39bdc116125,2016-09-17 12:34:38,Stephen Blott,Tweaks to comments.,False
48e3893076a6ca93223743bee73b713721070eb5,2016-09-14 12:40:55,Stephen Blott,Fix omission from 722cd3c40f89d93682f08e88b6d4cb46ca70991e.,False
722cd3c40f89d93682f08e88b6d4cb46ca70991e,2016-09-14 12:32:22,Stephen Blott,"Require exact match when we will be scrolling.

If the user is jumping to a scroll position within a tab, then we need
an exact match on the URL (because otherwise the scroll position doesn't
really have a meaning).  Otherwise we only require a prefix match, a la #2250.",False
fd20405ddf27365cfaf69e16289b2fc6d39c2a5e,2016-09-14 10:40:08,Stephen Blott,"Match globa-mark URLs by length.

This changes the logic for selecting an existing tab when using global marks.

Previously, an exact RUL match was required.  Here, we only require a prefix match.

For example, if the global-mark URL is:

    https://inbox.google.com/u/0/

Then a tab with the URL

    https://inbox.google.com/u/0/sent

will be selected.

This is a more usable approach when the user uses global marks to visit
important sites like gmail, Facebook or Twitter.  On these sites, the
URL changes, but the user still thinks of the tab as their ""gmail tab"",
for example.

Also, when choosing between multiple candidate tabs:

- If there is at least one candidate in the current window, then only consider candidates in the current window.
- If there are more than one candidates, then don't select the current tab.
- Finally, select the remaining candidate with the shortest URL.

Closes #2248.",False
0006776fecdd5eb02da8973ae6856824c090c82e,2016-09-11 20:31:27,Stephen Blott,Note changes since 1.56.,False
3a7a1ab035181ab1346181d8bdda5db5038b9c89,2016-09-10 12:28:26,gdh1995,simpler logic to detect backsapce,False
adf6d49b3d7e095b588ee7e18fb55fcb5a4ce9f1,2016-09-09 18:41:01,Stephen Blott,"Merge pull request #2242 from gdh1995/hint-label-for-not-disabled

hint a label only if its control is not disabled",True
92bfced758957fa65ec1e8209a70d3009911fe0f,2016-09-09 18:30:54,Stephen Blott,"Merge pull request #2222 from bouk/summary-hints

Add support for opening details elements",True
7a954b7b51b791ccf9a4d76370bf6275506e038a,2016-09-09 18:27:12,Stephen Blott,"Merge pull request #2215 from colin-kiegel/colin-kiegel-partly-fix-986

Consider the alt-key status when trying to detect <c-[>",True
953bd8e1dd7d76191b1b60b0febab675d8c06259,2016-09-09 10:28:38,gdh1995,"hint a label only if its control is not disabled

example:
``` html
<label><input type=checkbox disabled />exlpanation</label>
```",False
f1c4f28536f3b5e2e0cc37c67d71f224504cce79,2016-08-18 08:27:02,gdh1995,"support mapping <backspace>

Chrome stop using <backspace> to go back, but some still wants this
feature.

This should fix #2207 and #2214.",False
51489b165d9639fef06660b0c992ade963f96a70,2016-08-16 22:18:35,Bouke van der Bijl,Add support for opening details elements,False
7ccaf67e7be5b600948e57a2f2fa63ec7cb0fc5c,2016-08-15 13:33:47,gdh1995,"replace \xA0 on copying and pasting

The char `\xA0` may be contained in a string if we use `y` to yank a line
which contains `&nbsp;`.",False
408f85b04e2cb69dcb08d1c4dfa306e555239d07,2016-08-10 20:39:55,Colin Kiegel,"Consider the alt-key status when trying to detect <c-[>

see https://github.com/philc/vimium/issues/986#issuecomment-53955175",False
aa178b03ea1e4d12071751b81be9237428e5a97e,2016-06-28 13:22:22,Phil Crosby,"Merge pull request #2179 from gaving/patch-1

Mention edit URL keybindings",True
45de1c9851b31b2484b7a15c4b842e5d6a065cd6,2016-06-27 14:52:41,Gavin Gilmour,"Mention edit URL keybindings

Tracked down some keybindings I was after under #1004

Added them to the main documentation.",False
747944cbf90939eca8ae3b3fae01c3bdb35d47aa,2016-06-17 19:14:37,Stephen Blott,"Revert ""Adds important to hint marker font-family declaration""

This reverts commit 2526bb3b0433e5cf645dfd7007ec42860b11ba2a.

See #2164.  It seems this is no longer necessary.",False
43e3c47dafeb122c83213bd0f7b7c937610f9b1a,2016-06-15 10:21:15,Stephen Blott,"Merge pull request #2164 from sco-tt/fb-hint-markers

Adds important to hint marker font-family declaration",True
2526bb3b0433e5cf645dfd7007ec42860b11ba2a,2016-06-14 22:17:36,Scott Pinkelman,Adds important to hint marker font-family declaration,False
7329d8c91dfdc9cff72571e887ade3d981cae974,2016-06-12 12:10:51,Phil Crosby,v1.56 release,False
59f7df00677d7356070d910d84196c80c781759f,2016-06-02 10:55:21,Stephen Blott,Update README to reflect current status of master.,False
2789c16e25416a6763c075a1b7718973a83403ef,2016-06-02 10:48:36,Stephen Blott,"Favour event.keyIdentifier over event.key.

See #2147.

Chromium's implementation of event.key currently fails to take account
of keyboard mappings (e.g. neo2).

Here, we favour using event.keyIdentifier (while it's available) as a
workaround.",False
ae7c6f98f47868f5aecdaad5bd33aaa91f2550fd,2016-05-27 16:41:24,Stephen Blott,Note visual-line mode bug in README.md.,False
4826d1cf01accf47f71335ce5f93bc51ca556737,2016-05-27 16:29:58,Stephen Blott,"Fix visual line mode.

Due to a typo, VisualLineMode is broken in 1.55.

Fixes #2146.",False
176865b667af8d2719416854d79e823873e56b4b,2016-05-27 15:15:45,Stephen Blott,"Merge pull request #2132 from sco-tt/master

Adds single left/right angle quotation marks to next/previous patterns",True
9d1c398c2777e271b9d38d0fd27323adabb2ff37,2016-05-27 10:28:33,Stephen Blott,"Note visitPreviousTab command in README.md.

Now that 1.55 has been released, we should note this new command in the
README.",False
42545d66ca8ec854e05cee4a37cd634afc140f18,2016-05-26 23:35:28,Phil Crosby,Bump version to 1.55,False
3243a69ce62ce53ea86c43a745aece3d371269d8,2016-05-26 23:35:19,Phil Crosby,Tweak changelog,False
539cc1969f173171a21bc659f700a317d6f8dc4d,2016-05-17 11:33:55,Stephen Blott,"Merge pull request #2133 from smblott-github/use-event.key

Use event.key (not event.keyIdentifier).",True
eced401764bb679af6f34559861c2b1bc39c2752,2016-05-15 13:35:21,Stephen Blott,Handle <space> in the same way as other special keys.,False
6f08521e946b39ca9254bbc94455641f90f33215,2016-05-15 12:28:35,Stephen Blott,"Also remove event.keyIdentifier in getKeyCharString().

This was an oversight from a5262f4e68f62a922c9c05d871c4a874f6737a7b.",False
a5262f4e68f62a922c9c05d871c4a874f6737a7b,2016-05-15 11:40:26,Stephen Blott,"Use event.key (not event.keyIdentifier).

event.keyIdentifier is depricated and will be removed soon.  It is being
replaced by event.key.  Unfortunatelty, event.key is not yet available
in the stable Chrome version.

Here, we use whichever API is available.  In due course, we can remove
the event.keyIdentifier implementation (and a considerable amount of
machinery surrounding it).

For the time being, if both APIs are available, then we verify one
against the other and show a warning message of they do not match.  This
should help us track down any issues which arise.

Using event.key has the additional benefit of correctly detecting
shifted characters on the numbers row on keydown, which has been a
problem for some users.

Fixes #2128.

Note:  We have a problem with the tests.  phantomjs does not currently
support event.key, and possibly never will.",False
e393159c54d2c09bd228aa1c9d03d1c8e0231091,2016-05-12 20:14:34,Scott Pinkelman,Adds single left/right angle quotation marks to next/previous patterns,False
a1c00c38abee530f84572c36c7422e4ee793316b,2016-05-12 12:19:43,Stephen Blott,"Guard against non-string values.

If the link's value is not a string, then the previous version of this
fails.  The new test will be false for such links.",False
22f0ed9c3c63ecbc4fc2413dc5235a9489d9cf25,2016-05-12 11:51:07,Stephen Blott,"Revert ""Improves next/previous links by targetting button elements and adding single left/right angle quotation marks""

This reverts commit ee8c235aeaf52d2bc867a00c37731690e337c7ff.
This reverts #2117.

This breaks next/prev on Reddit (it chooses a different link).

Reddit is an important site, so we should unwind this for now.

Mention @sco-tt.",False
25587a5ae039dc8a1f57a441195b0b93dc8a3475,2016-05-09 12:54:34,Phil Crosby,Add a comment,False
d00cc696c8e43b1b0298bce61fa18e22d78f270d,2016-05-07 09:07:36,Stephen Blott,"Merge pull request #2118 from smblott-github/fix-ui-component-init-issues

Fix UI-component initialization issues (maybe).",True
62a3a7bb3568c3312abe693c267093994d143d4a,2016-05-07 09:06:49,Stephen Blott,"Merge pull request #2125 from smblott-github/fix-link-hints-not-launching

Fix link-hints failing to launch.",True
bd0bcadf130db6d34ba99e4d43eb57c05eb52970,2016-05-07 08:49:46,Stephen Blott,"Fix link-hints failing to launch.

Sometimes, link-hints mode fails to launch.  See Issue 1 from this post:
https://github.com/philc/vimium/issues/2081#issuecomment-210980903.

Here's a reproducible case:

- visit twitter
- using the vomnibar, visit any other page (in the same tab)
- hit `f` - the link hints fail to load.

What's happening is that the unregister/register frame messages for the
main/top frame arrive in the wrong order (first register, then
unregister).  Because these both have the same frame Id, the effect is
that the main/top frame ends up not registered.  So there are no
registered frames, so link hints mode doesn't launch.

Only the main/top frame has a re-usable frameId (`0`).  All other frames
receive a unique frame Id (which is never re-used).

Here, we just never unregister the main/top frame.  That way, it doesn't
matter which order the register/unregister messages arrive in.  If the
tab is navigating to a new page, then there'll be a new main/top frame
along soon.  If the tab is closing, then we tidy up in the
`chrome.tabs.onRemoved` handler.",False
804fdc96f5dc1698d0ed3872de6c1d78feda2e59,2016-05-06 11:00:35,Stephen Blott,"Fix binary-search OOB.

This affects binary search in the history cache.

The returned index can be one beyond the end of array, and so we get an
error when we look it up blindly.  So, we need to check.",False
3959369a69fd058bd2ca723e8aa65c0c5a01c20f,2016-05-06 10:10:17,Stephen Blott,"Merge pull request #2124 from gdh1995/bug-fix-in-find-mode

install the real selectionchange listener after window.find",True
f387d2e0d743a18b5983ff5debb74e2634cb5f87,2016-05-05 16:25:47,gdh1995,install the real selectionchange listener after window.find,False
b6c535704816d3016f0feee65322c563824c6a08,2016-05-03 10:46:42,Stephen Blott,"Merge pull request #2122 from sco-tt/master

Make findAndFollowLink look at element values so <input> can be used ‚Ä¶",True
7aa53edf5776370b6da7ddfb1dae9e7017693f59,2016-05-03 03:29:38,Scott Pinkelman,Removes unnecessary parentheses and makes precedence of || and && explicit,False
e347a3735d30a1a596c0b1958d584b07d79e399f,2016-05-01 19:56:09,Scott Pinkelman,Make findAndFollowLink look at element values so <input> can be used for next/prev links,False
1597664119a4b3660886f83f81e6ad91a0d7062c,2016-04-29 18:03:41,Stephen Blott,"Vomnibar, on tab: require there to be completions.

Do the following:

- `b`, `Tab`

The Vomnibar crashes.  The problem is that we're advancing the selection
even though there are no suggestions available.

Here, we require there to be a suggestion or suggestions before
advancing the selection.",False
f83e99fd42a4cf412c79fb15c58f59c105c25723,2016-04-28 18:25:08,Stephen Blott,"Fix UI-component initialization issues.

This fixes some UI component initialization issues.  It's a long
story...

The problem.

- Go to this page: http://www.thejournal.ie/seanad-election-results-2016-2737768-Apr2016/
- Click one of the links from the ""Most Popular"" box on the right.
- Navigate back (`H`) and, as the original page is loading, activate the Vomnibar.

In 1.54 this renders Vimium unusable.  In `master` this renders the
Vomnibar unsable, but the rest of Vimium usable.

It seems the source of the issue is that we're initializing UI
components too soon.  We need to wait until the `readyState` is
""complete"".

With this PR:

- The Vomnibar is initialised when the `readyState` is ""complete"" (in
  the top frame only, and only if Vimium is enabled).  Requests arriving
  prior to then are silently discarded.
- The HUD is also initialized only when the `readyState` is ""complete"";
  however, requests arriving before then are queued.  So, if the user
  immediately enters insert mode, then the ""Insert mode"" indicator will
  eventually be displayed.
- The help dialog silently discards requests until the `readyState` is
  ""complete.

I'm posting this as a PR because:

1. It needs some visibility.
2. With this, if the `readyState` *never* reaches ""complete"", then the
   Vomnibar would be unusable.  And that's pretty serious.",False
fc8519e4e3a770253a35f1af7546d432f64392ea,2016-04-28 11:21:35,Stephen Blott,"Make vimiumFlash a class.

There are circumstances when we hav two (identical) vimiumFlash elements
displayed: specifically, when using the waitForEnter keyboard blocker.

So, we should use a class (rather than an id) to style the flash
element.",False
ac340e2346247b5cd1878e1a814d4c151df3e892,2016-04-27 14:56:24,Stephen Blott,"Unregister frame port on onDisconnect.

I seems that we cannot rely upon either the ""unload"" event in the
content script or the port's onDisconnect handler there to unregister
frames.

To see this, go to a frame-busy page like this one:

- https://www.theguardian.com/technology/2016/apr/26/apple-iphone-first-revenue-decline-13-years

and then navigate to any other simple page (in the same tab).  Navigate
back and forward with `H` and `L`.

If you watch frames registering anf unregistering, almost all of the
frames from the frame-busy page do not unregister.

Here, we unregister frames on onDisconnect in the background page too.

It is possible that this is the source of the problem mentioned as point
1 in this comment:

- https://github.com/philc/vimium/issues/2081#issuecomment-210980903

And for which #2116 is a workaround.",False
637a03c74b56bfb8879049c4e7da90c654276ec0,2016-04-27 10:39:56,Stephen Blott,"Merge pull request #2117 from sco-tt/master

Improves next/previous links by targetting button elements and adding‚Ä¶",True
ee8c235aeaf52d2bc867a00c37731690e337c7ff,2016-04-27 00:31:49,Scott Pinkelman,Improves next/previous links by targetting button elements and adding single left/right angle quotation marks,False
ef4dcf99f5a68860558db44d0535b4b6091bc6e2,2016-04-26 12:51:51,Stephen Blott,Note help dialog re-styling in README.md.,False
018cdb906f005ff7276e096d2b4081ea909dc769,2016-04-26 12:32:02,Stephen Blott,"Help dialog; consistent ordering of commands.

It reads weird on the helpd dialog if we don't put the full-page and
half-page commands in a similar order.",False
26667165720a81aee49e959b7bc930b0cd959eb4,2016-04-26 12:12:03,Stephen Blott,"Merge pull request #2107 from smblott-github/modernize-help-dialog-styling

Modernize help dialog styling",True
05b2289ab0bb2278a60d77c5e08b7603e49e014d,2016-04-26 11:23:18,Stephen Blott,"Help dialog; use Vimium-blue for links.

On the help dialog, use the same blue of the ""Vim"" of ""Vimium"" for
links.",False
8449ad05ebc2b08e7575d6090a3d80daa6c466bc,2016-04-26 11:16:53,Stephen Blott,"Help dialog; re-order and tweak command descriptions.

- Re-order commands such that we keep like with like, and have the more
  important commands nearer the top.

- Re-word some command descriptions such that we use the same words for
  the the same thing consistently.

- Move ""View Source"" to the ""Miscellaneous"" category.

- Make some commands ""advanced commands"".",False
0b6e9b806df828864eac1fc3dda038238881c4bf,2016-04-26 10:58:37,Stephen Blott,Help dialog; use fixed-width font for keys.,False
314ba252add73387ec3d95a29aff6a51b4da908a,2016-04-25 14:55:22,Stephen Blott,"Help dialog; revert font colour for command names.

If we're not using the previous font for other links on the help dialog,
then it doesn't make sense to use that font for command names either.",False
9b7e9b6cc6fc5928adb202b1d8a63e78861200ca,2016-04-25 14:53:44,Stephen Blott,Help dialog; fix show-advanced-command button position.,False
91bed52461c87b0c5d08a0beb8a7b80fc4b4ddf6,2016-04-25 14:50:17,Stephen Blott,Help dialog; tweak key styling.,False
6066364d4c331b89cf2b4f6d2a5cf11a3c2bbe3f,2016-04-25 14:36:11,Stephen Blott,Help dialog; reposition close button.,False
5866a01b9570f93c79340dac796226ac88211d3c,2016-04-25 14:29:51,Stephen Blott,Help dialog revert styling of links.,False
ad9fe3ed81d01e1a164ecc1c0efa21daebdf0276,2016-04-25 11:25:34,Stephen Blott,"Make zoom-in/out images clickable.

Make zoomable images clickable: e.g. http://i.imgur.com/LdCeLlk.jpg/.",False
166efcbda9b1e9c32378b3226f8054f4f7109c22,2016-04-24 15:05:49,Stephen Blott,"Filtered hints; tweak scoring.

Re-order the tests such that we don't even do the scoring if there are
no query (search) terms.

This might (very) marginally speed up link-hints launch.",False
64a54f252cadc1b3ea5865514482cd24e187f6bd,2016-04-24 13:48:12,Stephen Blott,"Fix tests following 029741ea2d93031f0c9d5e57ba9cf75546976798.

Following 029741ea2d93031f0c9d5e57ba9cf75546976798 (which seemed
trivial), I forgot to check the tests (which were in fact broken, and
correctly broken).

If there is no link-text key queue, then *all* links should match.",False
029741ea2d93031f0c9d5e57ba9cf75546976798,2016-04-24 13:19:45,Stephen Blott,"Filter filtered-mode link hints.

Only keep non-empty link words.  Empty link words cannot be matched, and
leading empty link words disrupt the scoring of matches at the start of
the text.

E.g. ""9 new messages"" with a query ""new"" should score as a match at the
start of the text.",False
306361f3f1cf3ec4f49d7c23f4ce4b2987acb8b4,2016-04-23 20:19:47,Stephen Blott,Help dialog: CSS tweaks.,False
7e7c8e6cf9e1739fcbf8aa35ebe4331aeaaed6d8,2016-04-23 13:38:14,Stephen Blott,"Tweak help-dialog font size.

Make the font size (and color) match those used in the footer.",False
5906b1237562e28faa1e2f2206d953ae3ab59f62,2016-04-23 13:27:51,Stephen Blott,Fix help-dialog scroll bars and min width.,False
98ea279485fc456bbe4349559f9c08a24e2c4214,2016-04-23 11:46:33,Stephen Blott,"Show tip re. clicking command names.

It's pretty undiscoverable that you can click command names to yank
them.  So, this adds a tip to the bottom of the help dialog.

Also, change the cursor to a pointer when hovering over command names.",False
546d8b91c2e0991c410a42b2098ff1d478f24c73,2016-04-23 10:58:05,Stephen Blott,"Fix help dialog HTML.

- Style the links at the top the same as those at the bottom (re.
  colour).
- Fix HTML indentation.",False
a7446f09538e0b0314611c9d847016a85f735644,2016-04-22 21:25:04,Stephen Blott,"Nicer styling of command names in help dialog.

The commands names (in the help dialog) look nicer in italics.  They
also format better that way.",False
4c707140985ae03e3c523f2e6e4b6cb4c8465236,2016-04-22 21:05:39,Stephen Blott,"Better help-dialog formatting.

Use margins to centre the help dialog.  This works better on narrow
windows, and seems to produce a balanced dialog in a variety of cases.",False
aeca4facc27e694d79228637994f2a5608606ab3,2016-04-22 19:41:24,Stephen Blott,"Fix x-axis position.

This gest the centring calculation correct.

Also, remove the shadow; it's not visible.",False
740df9a23fa9a1e5b812584ce0702b813b226623,2016-04-22 19:22:45,Stephen Blott,Help dialog; do not offer hints outside of the help dialog.,False
4a670aaa3d121834685a672acc904f9824721824,2016-04-22 19:22:45,Stephen Blott,"Help dialog; better formatting of command names.

This needs more work.",False
1115f2719c3e647ca1c1764c1b8a0140211bf3fa,2016-04-22 19:22:45,Stephen Blott,Help dialog; set maximum width.,False
3adae8c9a683955641fe1417c977a3a06356107b,2016-04-22 19:22:45,Stephen Blott,Help dialog: put keys in greyed-out box.,False
cfad0ded611149b2757baa19fbac587a7d4f210d,2016-04-22 19:20:00,Stephen Blott,Help dialog: increase size and make white background.,False
761c5697aa3a33565a53f5a9656069054df39f12,2016-04-22 19:09:45,Stephen Blott,"Place help dialog in darkend frame.

This mimics the look of Google Inbox or Github.

The background colour is from Google Inbox, Github uses a slightly
lighter colour.",False
b353233e695033c0eb526db068ad538734a4503c,2016-04-22 19:03:01,Stephen Blott,"Fix help-dialog links.

It's not clear when -- possibly when we moved the help dialog to an
iframe -- the links at the bottom of the help dialog stopped working.

Here, we reinstate them by opening the referenced page in a new tab.
This is consistent with the behaviour of the links at the top of the
help dialog.

Also, the ""please review us"" link now points to the ""reviews"" tab on the
Chrome store.",False
c279d9ae9a802219e327c88d673a6f891ebc6b28,2016-04-22 18:50:00,Stephen Blott,"Merge pull request #2108 from smblott-github/prime-focus-input-on-options-page

Prime focus input on the Vimium options page.",True
b809fd8d2245793decb45160455939c3cc7993d8,2016-04-22 18:48:52,Stephen Blott,Simplify 618d66bbd57d7709f211149305ebc41f1b6941f9.,False
618d66bbd57d7709f211149305ebc41f1b6941f9,2016-04-21 12:13:59,Stephen Blott,"Prime focus input on the Vimium options page.

This is a bit of a hack, and pertains to focusInput (`gf`).

The problem...  On the options page, there are *lots* of inputs
(specifically, for every exclusion rule there are two inputs).  This
makes `gf` almost unusable.  It's impossibly to `Tab` through them all.

Here, on the options page, we prime the pre-selected input to be the
key-mappings input:

- arguably, this is the most frequently used input, and
- other inputs (such as custom search engines) are just one `Tab` away.",False
c5198e1b6cc90389e15979fb72cccd314feb73b8,2016-04-21 11:29:28,Stephen Blott,"Reinstate Vomnibar init on load.

This effectively reverts 4b564e8517dd3415cb8e2209ce019fa024e88770.

Reinstate pre-initialization of the Vomnibar.

Without pre-initialization, there is a small but noticable sluggishness
the first time the Vomnibar is opened.",False
810dafcb7c4d76bf0bebfab12bbb869e0e19bd3a,2016-04-21 11:11:57,Stephen Blott,"Help dialog; remove ability to blur the dialog.

Previously, you could blur the help dialog on the options page (to read
and type command names).

With the reinstated help-dialog styling (whereby the help-dialog iframe
extends across the entire window), this doesn't make sense.  So it's
removed.",False
ff2bb00565eb1111a5b2d5ced5f6405591ae7bc6,2016-04-21 11:02:41,Stephen Blott,"Revert ""Rework the help dialog styling.""

This reverts commit 86470f13d853b33cda8cb006ae24aeb2dcec0c9c.",False
c9c508ce9adc0b8c8a51e7ba631f2884804a7d4a,2016-04-21 11:02:27,Stephen Blott,"Revert ""Reinstate help dialog shadow.""

This reverts commit d95f811a8bc32803bfaec69e4853c5d48500905e.",False
d95f811a8bc32803bfaec69e4853c5d48500905e,2016-04-18 21:38:52,Stephen Blott,Reinstate help dialog shadow.,False
86470f13d853b33cda8cb006ae24aeb2dcec0c9c,2016-04-18 21:11:36,Stephen Blott,"Rework the help dialog styling.

We make the help dialog iframe cover most of the height of the window,
but only be as wide as it needs to be.

Like this, the user can click to the side of the dialog (on the options
page) to enter bindings in the custom ley mapping input, with the help
dialog open.",False
ebd57ddaad0849c61b9cd5b413d61b9f8e3fa74b,2016-04-18 19:24:40,Stephen Blott,"Ensure help dialog is scrollable.

When we open the help dialog, scroll it, close it then open it again,
the scroller loses track of the scrollable element.  This is because the
scroller is still referenceing the old scrollable content as its
""activated element"".

Here, we click the dialog element to get the scroller back in sync.

(Note:  This is a more general problem which we need to look into.)",False
a5a61567730f3055eefdf84435a80253d5cb1cc3,2016-04-18 19:17:18,Stephen Blott,"Tweak max height of help dialog.

Apart from looking better (ie. symmetric), this also ensures that the
help dialog does not overlap the footer on the options page (which is
ugly).",False
d5e7e210f19c97ed656e974255efc6223c81ce82,2016-04-18 18:17:29,Stephen Blott,"Revert ""Fix options page when help-dialog showing.""

This reverts commit f0911e52f0e71c6d2539bdc74a09ff2dbd5ab125.

Conflicts:
	content_scripts/vimium.css

Revert previous change to help-dialog styling.",False
247878a7919c5e9b27638395d479939f9ad5d22e,2016-04-18 16:50:32,Stephen Blott,"Cache content_scripts/vimium.css in chrome.storage.local.

Previously, we had two different approaches.  This seems like a simpler
approach.

We simply cache the Vimium CSS in chrome.storage.local (in the
background page) and fetch it from there (in UI components).

There is also a minor change in the we no longer cache the CSS in
memory.  This seems to be the right thing to do.  Caching the CSS in
memory consumes a small amount of memory.  However, it can only speed up
the fastest loads.  It cannot speed up the first load -- which is likely
the one that matters most.  So caching the CSS in memory seems to make
little sense.",False
dd07ffaa15efc6dff138cdaf89a146f229cc5b9d,2016-04-18 16:20:39,Stephen Blott,"Revert ""Cache content_scripts/vimium.css in chrome.storage.local.""

This reverts commit 0a49cc45732175c65651b5f054c677d6c42a28c0.",False
0a49cc45732175c65651b5f054c677d6c42a28c0,2016-04-18 16:13:53,Stephen Blott,"Cache content_scripts/vimium.css in chrome.storage.local.

Previously, we had two different approaches.  This seems like a simpler
approach.

We simply cache the Vimium CSS in chrome.storage.local (in the
background page) and fetch it from there (in UI components).

There is also a minor change in the we no longer cache the CSS in
memory.  This seems to be the right thing to do.  Caching the CSS in
memory consumes a small amount of memory.  However, it can only speed up
the fastest loads.  It cannot speed up the first load -- which is likely
the one that matters most.  So caching the CSS in memory seems to make
little sense.",False
2e9e0d30f8f6ecb4c0c7ba6e6192006c19264d0b,2016-04-18 15:30:28,Stephen Blott,"Remove unused message data.

The raw query is not used by this message handler, so don't send it.",False
20c1fef75eef7a203cc550f2d035ee5c82be5bd6,2016-04-18 14:58:25,Stephen Blott,"Simplify find-mode exit event.

Previously, we were transferring a ""transferable event"" from the HUD UI
component to the content script (when find mode exits).

In addition to being unnecessary, this was triggering a warning in the
console because we were reading *all* of the events keys, including one
which triggers a ""this is being deprecated"" warning.

The approach here is simpler, transfers less data and avoids triggering
the warning.",False
61e94c77d37011f675478c95b33ccd1dcf70ca6d,2016-04-18 14:55:39,Stephen Blott,"Fix tests.

When the implementation of windowIsFocused() changed, the tests started
failing.

(It's not clear how I didn't spot this sooner.  I've run the tests
countless times - and they passed - since that change was made.",False
d0d958b88776bdaff803707167ff1ada92d9b872,2016-04-18 12:26:18,Stephen Blott,"Abandon HUD on help-dialog close.

If the help dialog loses the focus and closes, then we abandon any HUD
which is being displayed.  This ensures that - when the help dialog is
reopenned - we're not displaying an old, out-of-date HUD message.",False
289798866a332f52253c4c52f8d6874211d25611,2016-04-18 12:15:36,Stephen Blott,"Wait for documentReady() when whoeing ui components.

Previously, requests (like opening the Vomnibar) would be silently
discarded if they arrive before the document is ready.  Here, we queue
them instead.",False
9c4c79eef9267d4bde62a996f82fcb0eff66df91,2016-04-18 11:31:36,Stephen Blott,"Require documentReady for all UI components.

This replaces c01d7eea8675f9a7d84999777e8de72244d687b6.

All UI components require the document to be ready.  So, here the
constructor waits for DomUtils.documentReady().  The diff looks big, but
mainly it's a result of changes in indentation in the constructor and in
hide().

Also, hide() now uses @postMessage() to post a null message.  This
forces hide to use @iframePort.use(), which ensures that hide()s cannot
overtake activate()s.

This continues #2100.",False
8846d04f3043e4be4be3d8e63c1efb46fe7e0b0e,2016-04-18 10:09:01,Stephen Blott,"Revert ""UI-compnent commands must wait for the document to be ready.""

This reverts commit c01d7eea8675f9a7d84999777e8de72244d687b6.

Preparatory to implementing an alternative approach.",False
c01d7eea8675f9a7d84999777e8de72244d687b6,2016-04-17 21:21:55,Stephen Blott,UI-compnent commands must wait for the document to be ready.,False
44ddab1e1eca01ae6c958756d149be2d4128b290,2016-04-17 20:52:28,Stephen Blott,"Merge pull request #2101 from smblott-github/rework-help-dialog

Move help dialog to top frame",True
4b564e8517dd3415cb8e2209ce019fa024e88770,2016-04-17 20:49:08,Stephen Blott,"Only Vomnibar.init() when the Vomnibar is needed.

The Vomnibar isn't needed on most tabs, so don't init it.

I cannot detect any sluggishness as a result of this.",False
5327d51946fa86ed494c7b5cd2ba39fb79d8e9e9,2016-04-17 20:41:57,Stephen Blott,"Do not init() the HUD until it's needed.

This avoids initializing around 15 (almost all unused) HUDs on sites
like GMail and Google inbox.

Because the HUD is small, there is not noticable flicker.",False
12350784fc45998819ef92d6b5badf03e99128ae,2016-04-17 19:32:56,Stephen Blott,"Make showHelp a top-frame command.

Replaces #2037.",False
10982f57bbbbe802ecc59173ce8a60582f8b34ff,2016-04-17 18:45:08,Stephen Blott,Make showHelp not a background command.,False
27385e81debd5fcd9000c718d73e296d6723e83a,2016-04-17 16:47:46,Stephen Blott,"Fix 5c3e4bda2968486e23f8cc3410e776de67fec849.

In 5c3e4bda2968486e23f8cc3410e776de67fec849, I omitted to observe that
we need to know whether the window has the focus *before* the DOM is
ready when checking whether Vimium is enabled.

This fixes that.",False
b87ed872263c46919f3098fca3a00705c015b736,2016-04-17 16:27:30,Stephen Blott,"Merge pull request #2089 from smblott-github/do-not-show-javascript-URLs

Simplify javascript: URLs in vomnibar.",True
cefbb461a3b564845a61893fcbe5faa0084c6f4c,2016-04-17 16:27:16,Stephen Blott,"Merge pull request #2100 from smblott-github/rework-ui-component-focus-handling

Rework ui component focus handling",True
5c3e4bda2968486e23f8cc3410e776de67fec849,2016-04-17 16:24:28,Stephen Blott,"Better window focus handling.

This fixes two issues:

- We cannot set windowHasFocus until the DOM is ready (because
  document.hasFocus isn't set until then.
- We should use windowhasFocus in prefernce to document.hasFocus
  because, for framesets, document.hasFocus is true for both the
  frameset and a focused contained frame.",False
d43f18bd5ce7c39e8e663a657027b233707e2926,2016-04-17 16:13:18,Stephen Blott,More code review of UI-component focus handling.,False
025b7f930205e9dfbae5f2dff5c7c1fd4a45e4c1,2016-04-17 14:48:10,Stephen Blott,"Use register/unregister frame in help dialog.

Remove special-purpose code from `gf`.

Instead, register the help dialog frame when it launches, and unregister
it when it's hidden.

This way, when the helpd-dialog frame is hidden, it simply isn't
available for `gf` and for link hints.",False
c4850e7bfa5b894f448d06919f902b7e888b2cc0,2016-04-17 14:05:49,Stephen Blott,"There's no need for a new suggestion property...

We do not need ""displayUrl"", we can re-use ""shortUrl"" instead.  It does
what we need already.",False
7e5b2dc0ca85f28c5aebce8686f6e7900ddf94f6,2016-04-17 14:02:51,Stephen Blott,Do not deduplicate javascript: URLs.,False
9f91a3fc41a9ad97e1e92337819145e604ac4f34,2016-04-17 13:23:00,Stephen Blott,"For javascript URLs, do not match javascript content.

We only match the text ""javascript:..."".

The affects only the bookmark completer.",False
e07a252508eea45c4dcadc92cdad02d42df2f5f8,2016-04-16 21:31:38,Stephen Blott,Minor code review.,False
ae1a54157291c0bcc69a6e8652bc15e69b72b4e4,2016-04-16 21:06:35,Stephen Blott,"Do not focus a hidden help dialog.

When the help dialog UI component has been created but subsequently
hidden, `gf` was nevertheless selecting it.",False
e60066218806ca42ebe94fd1ce0042993909658d,2016-04-16 19:50:45,Stephen Blott,Reinstate vomnibar from within help dialog.,False
59d6ce006da3cb125252dfd98819daf65650781e,2016-04-16 19:16:59,Stephen Blott,Self code review re. ui-component focus handling.,False
b94caa42ec2433ec61132be30bec2fbe0bd22aa5,2016-04-16 19:07:05,Stephen Blott,"We cannot wait for nextTick() here...

It interferes with the HUD's timing.",False
f3aba1914dc645d4de15ff6e6a9104dcb99018ee,2016-04-16 19:00:05,Stephen Blott,Remove dead code from the HUD initialization.,False
5bfe6dc5d1e0aeb1ab3e372821997d83ba5c9164,2016-04-16 18:45:33,Stephen Blott,"Rework UI component focus handling.

The code to handle the focus for UI components has been tweaked and
adapted over time, and has become quite complicated (and brittle).  This
reworks it from scratch, and co-locates similar code which does related
things.

Fixes #2099.",False
014f53fb091ac8672d3efbeca13a494c15d8afcb,2016-04-14 15:07:08,Stephen Blott,Note #2093 in README.md.,False
f1cb5a70fac210eaaa33609c1a4553b04f00b910,2016-04-14 15:05:23,Stephen Blott,"Merge pull request #2097 from smblott-github/ui-component-init-sequence

Rework UI component init sequence.",True
f9c00d9d56373566c034685d0e4bb99ff3b0367b,2016-04-14 15:05:10,Stephen Blott,"Merge pull request #2093 from smblott-github/c-y-c-e-for-visual-mode

Add <c-y> and <c-e> for visual mode.",True
39115e921af964a73d49da3085319fc1160009d2,2016-04-14 13:02:15,Stephen Blott,"Rework UI component init sequence.

In testing global link hints, it seems that UI components can be opened
before they're actually ready, and Vimium hangs with a broken UI
component displayed.  This issue seems to be in 1.54 too.

It's not clear what's causing this -- and it's hard to reproduce
systematically.  However, it only seems to happen on navigation.
Therefore, it seems likely that there is an issue with the
initialization sequence.

Here, we wait for:

- the DOM content to be ready, and
- the port to be provided

before registering the UI component as ready.",False
72ff4204655b8e87f7bdfbe8c9974376fbbc15a6,2016-04-13 11:20:43,Stephen Blott,"Add <c-y> and <c-e> for visual mode.

Fixes #2092.",False
f144c7c9d3f141636ce6a3856db3abf08a4fc063,2016-04-12 11:06:03,Stephen Blott,"Set the mode indicator last.

Similarly to the previous commit: 454f5272c71388c53665d7505aa6832566284e2b.

This is intended to mitigate some CSP violations we're seeing.  In some
circumstances - as yet not fully pinned down - messages to the HUD
trigger CSP violations.  Until we track that down, we move all HUD
operations (in link hints) to the end of their execution slice.  So, if
HUD operations fail, then they won't affect any other operation.

The error message for offending HUD operations is:

ui_component.js:55:
  Failed to execute 'postMessage' on 'DOMWindow': The target origin provided
  ('chrome-extension://hiihfcebjbnoniicphblpiekhfmbdmog') does not match
  the recipient window's origin ('null').",False
81fa2852b9ebfd1a0a2abd8b5ea374ac9bc49ca8,2016-04-12 11:06:03,Stephen Blott,"Make rects absolute in window earlier.

This is part of an effort (as yet incomplete) to track down some CSP
violations we're getting, in this case related to global link hints.

Prior to this, we were seeing CSP violations when accessing the window
subsequently to collecting the hints, specifically when accessing
window.scrollX/Y.  Here, we collect the window position immediately,
when initially harvesting the hints.",False
598f6fa4ffa1348c096ad681a10bee28adde4a3e,2016-04-11 11:32:32,Stephen Blott,"Better visual-mode selection handling.

Assume there is an existing range selection.

Consider `v`, `Escape`.  Previously, this had the side effect of
clearing the selection.  That behaviour seems odd and wrong.

Here, we retain the selection if there was an existing range selection
when visual mode was launched.

Arguably, this removes a ""feature"" whereby `v`, `Escape` clears the
selection.  Here, we take it that the oddity above outweighs the loss of
this arguably unintentional ""feature"".",False
ad2ed18dff81297f43ea89331ba227c26aed654a,2016-04-11 11:08:28,Stephen Blott,"Only add find-mode HUD text if there is any.

This applies to when find mode is launched.

When the text was empty (which is always), we were triggering a console
error message (selection range isn't in document).  However, when the
text is empty, we don't actually need to add it to the input.  So, here
we don't.",False
931e1b73a518b8c40671ec90331403aaae5e5b46,2016-04-11 10:49:26,Stephen Blott,"Revert always initialize help dialog.

Here's the trade off... We either *always* initialize the help dialog in
every frame of every tab, or we initialize it only when needed.

The help dialog is rarely used by anybody except beginners, so the
latter seems like the better approach.  However, on busy/slow loading
pages, the help dialog can fail to load on page start up.  (We need to
fix this, but I don't know how right now).  In the meantime, the better
compromise seems to be to initialize the help dialog only when needed.

This was the status quo prior to 6e12e005a4261711583571be23018481a4a23230
and 09e119db8d8c3ad2077ac509f73fefb76a08fac0.",False
09e119db8d8c3ad2077ac509f73fefb76a08fac0,2016-04-10 17:46:08,Stephen Blott,Always init() the help dialog.,False
6e12e005a4261711583571be23018481a4a23230,2016-04-10 17:14:12,Stephen Blott,"Fix Vomnibar initialization issue.

On a slow loading page, as the page is loading, hit `o` repeatedly.
Eventually, Vimium hangs.

We seem to have had this problem for quite some time (e.g. it's in
1.54).

This fixes the problem by ensuring that the Vomnibar is initialized
before launching it.

Also fix the same issue for the help dialog.",False
a57b7ea02d9c40580c3238f240bd9fae7d50d6f7,2016-04-09 17:46:06,Stephen Blott,"Simplify javascript: URLs in vomnibar.

Show ""javascript:"" URLs as ""javascript:..."".

Fixes #961.",False
c5d0ed09b8ed5c0351e11f985ceeae244f0f0caa,2016-04-09 13:40:01,Stephen Blott,"A UI component isn't ready until it's ready.

1. Do not initialize UI components until the DOm is ready.
2. Do not register UI components as ready (specifically the HUD) until
   the full initialization sequence is complete.

This goes some way towards fixing the issue described in this comment:

  https://github.com/philc/vimium/issues/2081#issuecomment-205758102

It relates to link-hints mode hanging when launched during a navigation.

This problem exists in 1.54, but emerged during testing of global link
hints.

""Some way toeards fixing..."" because it is still possible to trigger
issues.",False
ac9543d9017fbb56e670c0728173432a879d4d13,2016-04-09 11:02:53,Stephen Blott,"Minor performance tweak.

Two minor tweaks:

1. Do not use "".indexOf()"" three times for each comparison; do it just
   once.
2. Check the common case (no match) first.

These are very minor performance tweaks; but, with global link hints,
we pay this cost n times (for n frames).",False
c8ca94bd83bb1a651cd4efdaef41906f46004ee5,2016-04-08 19:37:04,Stephen Blott,"Trim linkText when it's collected, not repreatedly.

There's no need to repeatedly trim linkText.  Instead, just trim it when
it's first collected, then we can assume from there on that it's
trimmed.",False
7ea8e0a5e829a282dfc4f21595d76146fd6b5334,2016-04-08 18:32:54,Stephen Blott,"Filtered hints; do not accept split characters.

There is no point accepting characters which are used for splitting the
link text in the query string, since such characters cannot appear in
link text words.",False
047befd24c2cbb1ab35158cc480653591843efc0,2016-04-08 18:24:30,Stephen Blott,"Simplify filtered hint matching.

- Reduce the number of passes over hint markers from two to one.
- Filter out non-matching hints before sorting.
- Do not trim the search string twice.",False
9d7351903d0148373a2ad4c06d006e8ee0613be2,2016-04-08 18:06:24,Stephen Blott,"Merge pull request #2088 from smblott-github/filtered-hints-better-typed-text-matching

Filtered hints: better typed text handling.",True
77ea849b0849219550c7a8caa47698a35ed2fdab,2016-04-08 15:25:55,Stephen Blott,"Refactor setModeIndicator().

Previously this had two independent functions:  set the @mode and update
the indicator.  We don't always do those two things at the same time.
So this refactors things into two separate functions.",False
a1dc889746eebb657ff7d82912ff17106cf352b2,2016-04-08 14:45:09,Stephen Blott,Show filtered characters in mode indicator.,False
1a71dc6c8f323cef31eb006a8a6299b4dfe71332,2016-04-08 14:15:22,Stephen Blott,"Filtered hints; ignore unmatched text.

When the user is typing a link's text, any mistyped character exits link
hints mode.  This makes little sense.  In practice, this usually happens
because the user mis-typed something.

Here, we ignore typed characters which do not match any hints.

(Also, add a test for this.)",False
5704688e2ab7effef701f2ac5282b3bd4e0c53c7,2016-04-08 12:31:52,Stephen Blott,"Reinstate necessary test.

Reinstate test removed incorrectly in d1c230cabb051a5429242c98e67d37b65edc58b8.",False
d1c230cabb051a5429242c98e67d37b65edc58b8,2016-04-08 12:25:16,Stephen Blott,"Do not post hint descriptors back to the frame itself.

When distributing hint descriptors, do not post a frame's own hint
descriptors back to the frame itself.  It already has them.

With regard to the message-passing cost only, this represents a speedup
of approximately 3/2 for link-busy sites like reddit -- several tens of
milliseconds for me.  There are other costs too (such as processing the
hint descriptors) bu these are not affected.",False
bee5ee8416be776f379beb1bf772665a19cd3fa4,2016-04-05 20:12:54,Stephen Blott,Frame Ids must be integers.,False
00446479a02bacebec7c63ae2dd7b551e8b0130e,2016-04-05 19:30:12,Stephen Blott,Unregister frame when postMessage fails.,False
adce73cb68f7ca3e3e01ca6fbb08a1008c9c8b90,2016-04-05 19:12:48,Stephen Blott,"Better close-down for global link hints.

- Unregister frames with the background-page hint coordinator.
- Better page cleanup in the content scripts.
- Require documentReady before harvesting hints.

There is still an issue in some cases when link-hints are activated as a
page is transitioning, but that problem case seems to have existed in
1.54.  I'll continue to investigate.",False
17a24b4b3df24c5b3a354dd195e2f4fe3e4bfb54,2016-04-05 11:23:48,Stephen Blott,"Unregister frame on ""unload"".

It seems we cannot rely on the port being disconnected to unregister a
frame.  So we need to unregister it on ""unload"".",False
84bea357c879090a833b096c00be5c4318d48c4f,2016-04-05 11:20:38,Stephen Blott,"Check for document.activeElement.

When DomUtils.isFocusable() is called from GrabBackFocus-pushState-monitor
it is possible that document.activeElement is not ready.  So we should
check.

Here, we check in DomUtils.isFocusable(), because we always need element
to be defined for this test, not just in GrabBackFocus-pushState-monitor.",False
24b3301e047cf84f02df41766cfe9710c14d9d95,2016-04-04 20:32:47,Stephen Blott,Remove keyboard-suppressing mode when necessary.,False
ee3dc128ff48b07abf2eea28a5384cbbaf6c52ec,2016-04-04 14:51:00,Stephen Blott,"Only send required link-hint properties.

There's other stuff (ports, frameIds) in @tabState[tabId] that we don't
need in the front end.  Here, we only send the three properties which we
do need.",False
5e25e67e762818f499ee24278c9512b21a191c3e,2016-04-04 13:02:28,Stephen Blott,"Add backstop for global link hints.

This is not at all satisfactory.

I've seen cases where global link hints hangs, apparently because we do
not hear back from a frame.  The issue is repeatable when it happens,
but not repeatable in general (if you reload the page, then it goes
away).  This suggests that there may be something fundamentally wrong
with the global link-hints logic.  However, what?

In the interim, this adds a timer to trigger link-hints mode activation
with whataver hints we do have after a short period of time.

Ideally, we'll be able to get rid of this soon.",False
52fc561350becabd8ba554159f01e7186c78aa09,2016-04-04 11:31:16,Stephen Blott,Better indicator message.,False
5d11b86ce60678558784039a7cf85c50dee5bf20,2016-04-04 11:14:14,Stephen Blott,"Shorten link text.

When a link's text is particularly long, displaying all of its text
makes the hint look weird - so shorten it.

We still use the full text for matching.",False
240433c3b50fc01e72d840b4b6062334e208b59a,2016-04-04 11:01:52,Stephen Blott,"Do not offer activated element as scrollable.

Scrollable divs are offered via link hints.  It makes no sense to offer
the current activated element for selection - so don't.

On a ""normal"" page where there's just one scrollable thing,
document.body, this means that we no longer offer the unnecessary
""Scroll."" hint.",False
cc4e02d04adb60743fe20102ec40324aa622bcd1,2016-04-04 10:45:52,Stephen Blott,"Better handling of port failures.

If we lose contact with a frame (it's goine away) while still awaiting
hints from that frame, then post a dummy/empty list of hints instead.

This seems very unlikely to come up, but we should guard against it
anyway.

We use ""nextTick()"" so that we finish sending the current message
before sending the dummy hints.",False
ca89992afd75e98db07e931d9e978f7ed678a137,2016-04-04 10:45:52,Stephen Blott,"Handle all frames the same (for frames/ports).

This is experimental, and may be reverted.

I suspect that the special treatment of the top frame may actually be
causing problems for global link hints (rather than solving them!).",False
c99af1b7d1d559e54a8849a617920f946ca9bd0b,2016-04-04 10:45:52,Stephen Blott,"Handle requireHref for link hints locally.

The check that an element as an href (for certain hint modes) can be
done earlier, thereby avoid the need to pass that information between
frames.",False
7bdbebf7b50c305c01152c02e9bebf6aa00b3f87,2016-04-04 10:45:52,Stephen Blott,Document hint descriptors.,False
34f05dcc98c89ce64f242f46f57d95b4da4b77aa,2016-04-04 10:45:52,Stephen Blott,"Keep showLinkText local for link hints.

We only need showLinkText in the hint's local frame, so do not transmit
it to remote frames.",False
f8f29c0ea1801be68cec47fa86861afab9cc9055,2016-04-04 10:45:51,Stephen Blott,"Keep reason local for link hints.

The ""reason"" a hint is available is only ever needed in the hint's own
frame, so there's no need to pass it to other frames.",False
4cbeb44d7ae33e6bfeb221b47b63eac6b727ef8d,2016-04-04 10:45:51,Stephen Blott,"Keep rects local for link hints.

Previously, we passed each hints rect to every other frame.  However,
the rect is only actually needed in its own frame.

Here, we instead keep (and use) each hint's rect locally only.",False
ad97d7e4c09e6c26bbacd1d6f2375cf39af0d8eb,2016-04-04 10:45:51,Stephen Blott,"Do not render link hints in remote frames.

Previously, we were rendering hints in all frames, but displaying only
in their own frame

With n frames and m hints, we rendered n*m hints.

With this, hints are only rendered in their own frame, so we only render
m hints.",False
94cfcc5de7275c4c2774941088a2cc24ae98ef0b,2016-04-03 12:12:28,Stephen Blott,"Freeze frame state on link-hint activation.

We take a copy of the frame Ids and ports at the point which link-hints
mode is launched, and use that subsequently.  Therefore, a newly created
frame cannot cause the hint coordinator to become confused.

Also: add debugging code.",False
9d3e6cc399e69aec49ff59e78e58d403fe0bdf4b,2016-04-03 11:03:18,Stephen Blott,"Remove blocking mode when no hints found.

This fixes an error in 39adee9090fc5aadfd5dd681f91b80025084858a.

Specifically, if there are no hints to select from, or no
documentElement, then link-hints mode exits without initiating an actual
mode (i.e. without calling its super() constructor).

With 39adee9090fc5aadfd5dd681f91b80025084858a, that leaves a mode in
place which blocks all keyboard events, thereby rendering Vimium
entirely hung.

See this line:

  https://github.com/philc/vimium/commit/39adee9090fc5aadfd5dd681f91b80025084858a#diff-e9abcb9ebcdb5af8e9f33651364673a1R59.

Here:

   - we explicitly remove the keyboard-blocking mode
   - we add exitOnEscape (so that the situation is at least
     recoverable), and
   - we add an indicator (so that we can see what's going on).

It is proposed that the indicator is a temporary feature, while the
global link hints feature is in shake down.",False
96c74e4aa7e39a99bf5511440ba7a4155f1e2db8,2016-04-02 21:32:41,Stephen Blott,"Simplify UI component initialisation.

There's no need for the previous complicated approach to UI component
initialialisation, in particular for the Vomnibar.

We only initialise the Vomnibar in the top frame.  However, if for some
reason it hasn't been initialised by the time it's needed, then we can
just initialise it then.  We are only initialising it early to avoid
flicker, so it's not a correctness issue.  And the only reason it
wouldn't be initialised is if Vimium is disabled in the top frame, but
enabled in some other frame -- which is not a common case.",False
4f74307ed382ce942a1210007b99ed426f997a81,2016-04-02 18:50:57,Stephen Blott,"Revert previous tweak.

We need to wait for documentReady() here to ensure that the document is ready in the top frame.",False
deca2ecb726174303dd024209585e522b79e33b8,2016-04-02 18:09:38,Stephen Blott,"Make stableSortCount per instance.

I've not observed this, but it could possily happen...

If the stableSortCount gets out of sync in different frames, then
different frames might make different decisions about the ordering of
the hints.

Ti avoid this potentially happening, we initialise the stableSortCount
every time link-hints mode is activated.",False
eb1b9ee9b4db56068cdc6b7864a6ff1a0fbf1ee4,2016-04-02 17:39:27,Stephen Blott,"Make document.body selectable as scrollable.

Previously, we could select divs, uls, and ols for scrolling, but we
couldn't get back to scrolling the document body.

This makes it possible to select document.body for scrolling.

Unfortunately, sometimes the hint appears in a rather odd place (because
it's ""on top of"" something else which is clickable.",False
57c3cae5abd5c796b093ad02661b040b2c877fc4,2016-04-02 16:57:21,Stephen Blott,"Refactor DomUtils.documentReady.

We do not need to install separate event listeners for every callback.
Just install one listener and keep track of the callbacks ourself.

This is clearer, and also determines the order in which callbacks are
called.  (Although, we don't rely on that currently.)

This also adds a tests.",False
89df06fa6c00c9295ff064308c03f770b01d79be,2016-04-02 16:24:04,Stephen Blott,"Rework DomUtils.documentReady().

There seems to be an issue on this page:

   - http://i.imgur.com/PdmUjij.jpg

whereby ""DOMContentLoaded"" isn't firing.  The page structure is unusual
(involving a shadow-DOM element), which might be the source of the
problem.

What happens is that the ""DOMContentLoaded"" event fires as required, but
the document state is still ""loading"".

Here, we just say that if the ""DOMContentLoaded"" handler has fired
once, then we're good to go.",False
175f4b275c49ba332000ab773061777af820a87f,2016-04-02 15:05:43,Stephen Blott,"Do not register tiny frames.

This affects focusFrame and link hints.

We do not register tiny frames.  The reason for doing this is that link
hints messages all (registered) frames to collect their hint
descriptors.  On some sites (e.g. Google Inbox and other Google
properties), there are many tiny iframes (on the order of 12 or 15 or
so).  Those frames cannot provide useful hints, so -- by not registering
them -- we don't ask them for hints.

The intention is to speed up the link-hints activation sequence.",False
03e010f0aeb835778664438549f168ccae297d7c,2016-04-02 13:24:59,Stephen Blott,"Move the test for small windows to DomUtils.

The reason for doing this is that we will be using the same test to
decide whether or not to register a frame.",False
3d7b6e1f548da2f76fe0828e902fbe0a02e2c70d,2016-04-02 13:12:11,Stephen Blott,"Separate registerFrame from port initialization.

This is a no-op.

It separates the process of registering a frame with the background page
from the port initialization.  The idea is that -- soon -- we will only
register some frames; in particular, we should not register the many
tiny iframes on pages like GMail.

The eventual goal is to speed up the global link-hints initialisation
sequence.",False
dc62bc6f300052a75cadcfc47b0703cdf20bbb2d,2016-04-02 13:01:30,Stephen Blott,The name argument isn't being used here.,False
50ec8fc5b1387c8b423d8c7bb9fe6855951b7ca0,2016-04-02 12:00:53,Stephen Blott,"Use ports for all link-hint messages.

This seems to be considerably faster than using sendMessage().",False
a51f18c04d28b77e7cc2728c0cb85a2b2998ef54,2016-04-02 11:21:59,Stephen Blott,"Use port for frame-to-background messages.

Without considering the size of the data passed, ports seem to be about
5 times fast than sendMessage(), so we use ports of link-hint messages
wherever possible.",False
64d8c34a628d142400abb8f417a1f9d48220e60c,2016-04-02 10:47:25,Stephen Blott,"Wait for docomentReady to generate hints.

If document.documentElement isn't ready, then we can'r generate hints.

Moreover, this would crash -- thereby hanging global link hints.",False
a0cd21a2bd75fa9706d897fbfc2334ecf4d77963,2016-04-02 10:30:04,Stephen Blott,"topFramePortForTab is no longer needed.

We use portsForTab[0] instead.",False
9e6c2c36b4f53c5dc1029e4d7992311cdb55e0f7,2016-04-01 19:46:50,Stephen Blott,"Maintain portsForTab mapping tabIds to frame ports.

This maintains a mapping from tab Ids to a mapping from frame Ids to
their ports.",False
cdedb6bdb25fcb67ee2c9fae79583eeef28ee487,2016-04-01 18:49:31,Stephen Blott,Tweak hel dialog height.,False
8a14d3dddc99cb457a30fd00d8b3a8df9851ccb3,2016-04-01 18:46:25,Stephen Blott,"Fix height of help dialog.

Following on from f0911e52f0e71c6d2539bdc74a09ff2dbd5ab125, I omitted to
verify that the height of the dialog was correct on taller screens.",False
8574dec533e5c2b3d4623de359c30a16846cd0e6,2016-04-01 18:21:34,Stephen Blott,"Ensure settings are loaded.

With global link hints, hints might be launched in one frame when the
settings are not yet loaded in another.  This could lead to one frame
using one settings value, and another another value.  (Because we use
the default value if the settings are not yet loaded.)  And this in turn
could cause link hints to crash if filetered hints are used (because, in
that case, we would not calculate hint.linkText in one frame, but then
try to use that value later in another frame).",False
777af41df142e2a461073aed8c5941d2dfdc24d1,2016-04-01 17:43:27,Stephen Blott,"Tweak Settings to add onLoaded() method.

Settings.onLoaded() is similar to Settings.use(), except it does not
require/expect a key argument.

Would could simulate .onLoaded() with .use() by artificially adding an
(unused) key, but that would make the code less clear.  So it seems
better to have a separate method.",False
caac7b924af6570c7f3ec3a2f555ba9a45b31813,2016-03-31 14:53:23,Stephen Blott,"Merge pull request #2079 from smblott-github/rename-handlerStack-constants-v3

Rename handler stack constants, and rework logic for greater clarity",True
dd04abbfed292d7c73f7c29176dd611107da6805,2016-03-31 14:50:26,Stephen Blott,Fix @suppressEvent and tweak comments.,False
342ec4a2a5a435420b770cec4517e3aa6b31c014,2016-03-31 13:22:48,Stephen Blott,Use @suppressEvent instead of false.,False
69a20856ae711d5d86fc6876f840c62dc4c47ef5,2016-03-31 00:45:29,Stephen Blott,Rework handlerStack.bubbleEvent() for greater clarity.,False
dc6562ae1374272c61d9155a4cc50a4b5f5f12ab,2016-03-31 00:08:05,Stephen Blott,Tweak 21da3fcafbb29540788037dbcdbdce79ad14e650.,False
21da3fcafbb29540788037dbcdbdce79ad14e650,2016-03-30 19:28:46,Stephen Blott,"Rename handlerStack constants.

Problems:
  - The meanings of some of the Mode/handlerStack constant names is far
    from obvious.
  - The same thing is named different things in different places.

This changes various constant names such that:
  - the names used in the handler stack and in the modes are the same.
  - ditto vis-a-vis DomUtils.

Also, break out the core of the handler stacks' `bubbleEvent` method
into a switch statements.  This makes it more obvious that the cases are
mutually exclusive.",False
a2fba970e089254adae2631a5b154e6bd92ec1e2,2016-03-30 17:19:40,Stephen Blott,Add tests for GrabBackFocus.,False
8fc46ff8b00ae82b574e3314ebc8ae6046c3215f,2016-03-30 16:10:01,Stephen Blott,"Add test for SuppressAllKeyboardEvents.

Which:
  - uncovered a typo in 39adee9090fc5aadfd5dd681f91b80025084858a.

Also:
  - make Mode.debug a class variable, which is more helpful while trying
    to debug.  Specifically, you can turn debugging on or off from
    within the tests, for example.",False
39adee9090fc5aadfd5dd681f91b80025084858a,2016-03-30 14:12:52,Stephen Blott,"Fix link-hints race condition.

Because there is a small amount of time between link-hints mode being
requested and it being activated, it was possible to launch other Vimium
commands (e.g. the Vomnibar) after requesting link-hints mode, and
before link-hints mode starts.

This prevents that.",False
de2616493ea549c6eaa435b409f74438d8692f93,2016-03-30 11:10:23,Stephen Blott,"Minor refactor of link-hints exit sequence.

The exit sequence is clearer like this.",False
a332f0cc7139c9185fcea3e82c800915712b5491,2016-03-29 21:20:55,Stephen Blott,Fix typo in debugging code.,False
77a2c6b41959f978147bd953ac94f5484394b276,2016-03-29 20:21:28,Stephen Blott,"Fix race condition in grab-back-focus.

See the newly-added comment.",False
7ecc65d8215203b89248d8f313783ce48e8ba1c4,2016-03-29 19:35:52,Stephen Blott,Add tests for WaitForEnter.,False
3b72ced87f4dc6402f4ab8f8dbf2873e9a53093d,2016-03-29 19:27:40,Stephen Blott,Ensure window has focus in tests.,False
824477a9c7472ffb1cf9c7d828cbed39abb3c90c,2016-03-29 18:34:24,Stephen Blott,"Escape to exit WaitForEnter.

Context: filtered link hints with wait-for-enter enabled.  Once a link
is selected, it is highlighted.  We then consume all keyboard events
until the user hits enter, at which point the link is activated.

Problem:  When we're waiting, the link is highlighted.  It looks to the
user like `Escape` should cancel.

This implements escape to cancel at that point in the exit sequence.",False
359cb9f245a37c3843f24caeed0e0d5604b28379,2016-03-28 14:05:06,Stephen Blott,Disable Ctrl modifier for filtered hints.,False
e30811c15704144042f2af8a418877d3e4f0297f,2016-03-28 12:56:41,Stephen Blott,"Merge pull request #2070 from smblott-github/icon-use-image-data

Use image data for icons.",True
23884b31ba643f1ad1e44f5fc949bd3329df6985,2016-03-28 12:51:20,Stephen Blott,"Use image data for icons.

This uses image data (instead of a path) for the page icon.  It also
only builds 19x19 and 38x38 icons, as per the
chrome.browserAction.setIcon() documentation.

This appears to fix a memory leak related to a recent Chrome regression
(versions 49+).

Fixes #2055.",False
091afd73bb5952d2b30b8de657afb6c3a874d274,2016-03-28 12:15:16,Stephen Blott,Update README.md for recent changes.,False
ef9b822e377dcbaa691f8f8ea97ce34f76ffd65b,2016-03-28 11:47:11,Stephen Blott,"Change hintMarkers to @hintMarkers.

hintMarkers was previously passed around (within the link-hints mode
class) from function to function.  With #2048 (global link hints), it is
better if this becomes @hintMarkers (that is, is available directly to
all methods within the class.

With #2048, we used bind to avoid having to do this - to keep the diff
clearer.  Here, we do it directly.",False
7997d7f21e096fde96dd7e06c872e33df78bba9c,2016-03-28 11:36:10,Stephen Blott,"Better names for variables.

These variable names are misleading.  The things being manipulated are
actually hint descriptors.

So this renames the variables accordingly.",False
9c1ea0ce9f4b31e288c0808dd28796bb36df1aaf,2016-03-28 11:29:20,Stephen Blott,"Move LocalHints out of link-hints mode.

This code (LocalHints) has been embedded into the middle of the
link-hints mode class.  And it shouldn't be.

This moves it out, and allows us to unwind some of the gymnastics #2048
(global link hints) introduced to avoid having an incomprehensible diff.",False
9700c9f2c315abfc1c11634a36df76eb093a4f85,2016-03-28 10:59:50,Stephen Blott,"Merge pull request #2069 from smblott-github/global-link-hints-++

Link hints: false positives and scrollable divs",True
d2b14cbe04acf1e03f988aa3ef8deb78c0480782,2016-03-28 10:29:47,Stephen Blott,"Better test for scrollability.

Testing the `scrollHeight` is cheaper than testing scrollability.  There
are a lot of non-scrollabile divs, so it makes sense to use this cheaper
test as a filter.",False
32ebe749a0242deda845558340aee02bafa83e76,2016-03-28 10:29:32,Stephen Blott,"Fix for f6925630a7e22b4483bc872d9242776bce5337c1.

We should start by checking the *parent* of the candidate descendant.",False
d2691a43cc97a89c4d127ef6ef0be4c0417c675d,2016-03-28 10:29:19,Stephen Blott,"Filter out link-hint false positives.

We recognise elements with a class names containing the text ""button"" as
clickable.  However, often they're not, they're just wrapping a
clickable thing, like a real button.

Here, we filter out such false positives.

This has two effects:

- It eliminates quite a number of real false pasitives in practice.
- With fewer hints close together, fewer hint markers are obscured by
  the hints from (non-clickable) wrappers.  This reduces the need for
  rotating the hint stacking order, e.g #1252.",False
f49d4b2f5980d48e76fd2e32491c9793f5f6fdf8,2016-03-28 10:28:42,Stephen Blott,"Make scrollable elements selectable with hints.

Fixes #425.

Conflicts:
	content_scripts/scroller.coffee",False
2a62e4811fc2360257dd99066b4caa3e95025cbf,2016-03-28 10:21:46,Stephen Blott,"Merge pull request #2048 from smblott-github/global-link-hints

Global link hints",True
00c9e9e1a0c26fc8ece99318bf5eec85a090ecc2,2016-03-28 10:16:36,Stephen Blott,Global link hints; fix tests after rebase.,False
7532d1c1dda67cb233e488afafbbf29308dc65bf,2016-03-28 10:16:36,Stephen Blott,Global link hints; make frames selectable.,False
742dcfcca95918996a27930bfdd86b19307d8450,2016-03-28 10:15:38,Stephen Blott,"Global link hints; self code review (3)...

... Also, do not set an active hint marker initially (because it's not
predicatble which hint will be selected).",False
b7f0487d32dd50b73cf7729bbb4a900db9b786c8,2016-03-28 10:15:38,Stephen Blott,"Global link hints; revert b7535a604954b5873d825eb66bfecd08f1f2c99b.

Here's why:

- b7535a604954b5873d825eb66bfecd08f1f2c99b is complicated and complex (O(n^2)).
- With experience, it is not obviously better than what was there
  before, and in some cases it's worse.
- b7535a604954b5873d825eb66bfecd08f1f2c99b selects way too much text in
  some cases; e.g. on Google Inbox, it selects text lengths in the tens
  of thousands of characters.  That cannot be useful.
- With global hints, this extra cost (resulting from passing large
  objects between frames) is significant and noticable.
- The simpler approach of accounting for text length when scoring
  filtered hints (tweaked here: 5cbc5ad702a01a81b98f8c82edb3b6d227c2c7b5)
  works better in practice.",False
6271ce2ba4e73c7506f638113660a5fb1e66e999,2016-03-28 10:15:38,Stephen Blott,"Global link hints; self code review (minor tweaks).

Just tweaks.",False
1cc4ab0bd5f3a7b1292ea70e06755fef6f9c7750,2016-03-28 10:15:38,Stephen Blott,"Global link hints; self code review.

- Better comments in places.
- Better variable and message names in some places.",False
5e7536145be34f4415396a45cc584c480d76465c,2016-03-28 10:14:54,Stephen Blott,"Global link hints; better comments, exit() fix.",False
9a83ccc49e30af30f39fc3fa15208993c28fa520,2016-03-28 10:14:54,Stephen Blott,"Global link hints; focus window for selectable elements.

Because we're running hint modes in multiple frames, we need to ensure
the right frame has the focus for selectable elements (inputs).",False
9ca85dde948e1e4983f24c2cc6c7ba3d200bcc42,2016-03-28 10:14:54,Stephen Blott,Global link hints; do not exit in Esc here.,False
52ce015c04b22ae8c519fcd5b420788f8825c800,2016-03-28 10:14:54,Stephen Blott,"Global link hints; fix focus issue for options page.

Here's the issue (and we may have to address this ouside of this PR).

If we put the HUD in the top frame, then the top frame grabs the focus
when the HUD is displayed.

If we open link hints with the help dialog open, then the help dialog
loses the focus, and we can't `Esc` out of it.",False
c8414d92886c7705dc0892cdedf3939f75336889,2016-03-28 10:14:54,Stephen Blott,"Global link hints; rename message name.

We cannot use ""request"" and ""name"" to describe a link-hints message.
The message is then accepted (and fails) on the options page where there
is no handler.

So, here, use ""messageType"" instead of ""name"".",False
409d1c69acb61ba6ac7ff7981fd8eb0354ba548f,2016-03-28 10:14:11,Stephen Blott,Global link hints; reinstate mode toggling.,False
bdf1469075c8e5cca8cd328ca326ac8df145a141,2016-03-28 10:14:11,Stephen Blott,Global link hints; reinstate href-based modes.,False
fe2e958ebbb4157d06a963ee8479ece7f2685c94,2016-03-28 10:14:11,Stephen Blott,Golbal link hints; fic tests.,False
060e2397d18de00e7ccfc68af52db87b0a4cbbae,2016-03-28 10:14:10,Stephen Blott,Simplify diff (again).,False
5c230c79933f583e792342a60dffab5f6cc04f79,2016-03-28 10:14:10,Stephen Blott,Simplify diff.,False
20fa0828cbb0b71159cf0a519341d120b78c5466,2016-03-28 10:13:42,Stephen Blott,"Global link hints...

TODO:
  - fix tests",False
17379d86faefdeb158b30ccdfb5c3814008bfea3,2016-03-28 10:11:09,Stephen Blott,"Move link activation to HintCoordinator.

This moves the link activation logic out of LinkHintsMode and into the
hint coordinator.

At this point, there is (almost) no DOM-specific logic left in
LinksHintMode.  It only depends an a list of ""elements"", each of which
has a rect property.

The main exception to this is filtered hints.  In the following commits,
we're going to leave filtered hints behind - mainly to keep the diff
shorter and cleaner.",False
09519db103b1cef197e183435e864287ab67e7e3,2016-03-28 10:10:09,Stephen Blott,"Add HintCorrdinator stub.

This adds a shim between launching a link-hints mode and creating the
LinkHintsMode object.  The shim is responsibly for for finding the
clickable elements.  This is preparatory to implementing global hints.",False
8b19dfcf3bc4fbc0c426f057a4481bd699c09f72,2016-03-28 10:10:09,Stephen Blott,"Separate ClickableElements functions from LinkHintsMode.

Really, all of the code related to finding clickable elements is
unrelated to LinkHintsMode.  Unfortunately, it's embedded in the middle
of the class.  So, we can't use it from outside of the class.

This is a temporary restructuring of the link-hints code.  The intention
is to move the lines around eventually.  For now, however, we do it like
this to keep the diff smaller and clearer.",False
3539ad89382c02bf2f89d890b86e49409059391f,2016-03-27 17:05:36,Stephen Blott,"Finally fix help-dialog focus issue.

In the previous commits, I omitted to actually check that the help
dialog wasn't closing on the options page.

I should be good now.",False
9c96f750f7c2d22eb0098dcb05b34c51c802e8ac,2016-03-27 16:50:43,Stephen Blott,"Handle focus events for UI components.

The help-dialog UI component was ignoring requests to ""hide"" when other
frames are focused (because previously it covered the whole screen, and
no other frame could get the focus).

With f0911e52f0e71c6d2539bdc74a09ff2dbd5ab125, the help dialog no longer
covers the whole screen, so it must listen for and react to
""frameFocused"" events.

However, the help dialog should not ""hide"" when the frame that is
focused is itself!  This required a little extra plumbing.  That
plumbing is helpful, though, because it allows individual UI components
to decide what to do when another frame receives the focus (as opposed
to the previious version, which simply unilaterally sent a ""hide""
message).",False
f0911e52f0e71c6d2539bdc74a09ff2dbd5ab125,2016-03-27 16:10:49,Stephen Blott,"Fix options page when help-dialog showing.

This allows the user to enter key mappings on the options page with the
help dialog open.

Fixes #2045.",False
5e26626dace96bdfe8189ee4138dbc273427733c,2016-03-27 15:13:09,Stephen Blott,"Merge pull request #2066 from smblott-github/fix-help-dialog-issues-2045

Fix help dialog issues #2045 (release blockers)",True
da4dc100da8ac862a84dac7f78cfb22e71d544a4,2016-03-27 15:08:41,Stephen Blott,Remove simulateUnhover(); not being used.,False
984126292903b305aacb484ff25b79dc971ac6b6,2016-03-27 14:56:25,Stephen Blott,Remove longestCommonPrefix(); not being used.,False
277ee6876af0c187ff73eff83ed25ac391907e8f,2016-03-27 14:55:12,Stephen Blott,Remove copyObjectOmittingProperties(); not being used.,False
6af7cae45c498628c7052116cedccc369e9fbe64,2016-03-27 14:52:58,Stephen Blott,Add test for extractQuery().,False
824ab0dc6bd8bec3c75834b736360276877dd74c,2016-03-27 14:40:28,Stephen Blott,Add test for escapeRegexSpecialCharacters().,False
0656f3ef0dd5f3cfa12f6c925298f30168b00e12,2016-03-27 14:35:20,Stephen Blott,Add test for invokeCommandString().,False
c68b5e599607acbda54316056ad067a7aee9d251,2016-03-27 13:30:05,Stephen Blott,"Fix handler return for escape.

We've consumed the event here, so we should suppress it.",False
61f207c12a1617132115ce28e3f0262fffe187f4,2016-03-27 12:10:46,Stephen Blott,"Do not hide help dialog on click (on options page).

Normally, we close the help dialog when the user clicks outside of it.

On the options page, however, the user might want the help dialog open
while they type command names into the key-mappings input.

Therefore, we disable hide-on-click for this specific use case.

This is a rather unfortunate hack.  However, #2045 is a serious problem
for an important use case.

Fixes #2045.",False
11ade4ed2dae1b6f873d5c33e533f39a03838adf,2016-03-27 11:34:09,Stephen Blott,"Escape closes help dialog.

With the help dialog in an iframe, Escape no longer closes it if that
iframe loses the focus.  This fixes that.

See point 2 of #2045.

This is not a perfect solution: it only works if the focus ends up in
the frame from which the help dialog was launched.  However, that is the
the common case and, in particular, it is the case which arises on the
options page -- which is a particularly important use case.",False
fa67b115ce1a20e64da5b8eaa67e2979fad8f89d,2016-03-26 21:59:20,Stephen Blott,"Ensure correct sendResponse() is called.

With several frames, only one frame can call sendResponse(), whichever
one happens to call it first.

getScrollPosition, is the only handler for which we care about the
response.  Here, we make sure that sendResponse() will *only* be called
in the top frame - where we want it called.

This fixes a possible race condition in global marks.

Additionally, although it's not the primary intention here, this also
avoids calling sendResponse() unnecessarily in cases where we don't use
the response.",False
b09a7524502e7df993bd1d5eb906553348130591,2016-03-26 21:34:04,Stephen Blott,"Rework global mark activation.

There were two problems, both stemming from the fact that the
notification was being displayed in the top frame, even if the mark was
triggered in another frame:

1. That looks odd, because we close the HUD in one frame then open it in
   another.

2. As a side effect, we were moving the focus to the top frame.

Here, we work out what's going to happen before sending the message to
the background page.  This allows us to display the message in the HUD
in the frame which generated it.",False
e2ea471eff20504b53da36a791769d246fff9593,2016-03-26 19:09:27,Stephen Blott,Add test for badly-formed exclusion regexp.,False
a1103158551ace4232b613d290f5d193a7c5185f,2016-03-26 18:50:51,Stephen Blott,"Multiple minor tweaks.

Some of this code is showing its age, so these are just a number of
minor tweaks (to keep things clear, consistent and concise).

Also, add a couple of tests (while we're at it).",False
bfeaeae0df589e5163cdc9e99ea9d3c3b1b15038,2016-03-26 17:38:43,Stephen Blott,"Merge branch 'standardise-foreground-commands'

Conflicts:
	content_scripts/vimium_frontend.coffee",True
24d305500b4fd3574ed31cff33b177f42cd88457,2016-03-26 17:36:34,Stephen Blott,Get frameId in background page.,False
135de62c2fecea4eb1ef07c155d339c609b6ad1c,2016-03-26 17:35:45,Stephen Blott,"Merge pull request #2064 from smblott-github/standardise-background-commands-v2

Perform background commands on the requesting tab (v2)",True
ebcfe61f785c9717065d4196b60198c2e10a462d,2016-03-26 17:35:32,Stephen Blott,"Merge pull request #2062 from smblott-github/rework-visual-mode

Rework visual mode",True
e133f8d2b3d104568959759e8ec7cf907257eb1b,2016-03-26 17:32:55,Stephen Blott,Simplify expression.,False
b3f9dc520a8f7245db44f843b3994d5e32b19eeb,2016-03-26 17:27:45,Stephen Blott,"Simplify invokeCommandString().

There's no need to have the previous unusual calling style (passing the
arguments as a list.  It looks more natural to pass tham just as regular
arguments, as here.",False
c40f6fa3da204144b6a1a0fca5f7849a9ce5fe3e,2016-03-26 17:20:50,Stephen Blott,"Move command to correct spot.

This command (LinkHints.activateModeToCopyLinkUrl) has been in the wrong
spot for quite some time.  This just moves it to be with the other
link-hints commands.",False
5ab004ba38019aea32408af2bff422e6f01a7430,2016-03-26 17:15:59,Stephen Blott,"passCountToCommand isn't needed.

We pass the count to *all* front-end commands.  All of the commands
which don't use a count, just ignore it.",False
068b6513bc3226e4ef07e8cfb1ef2d5fb0ae2cc4,2016-03-26 17:04:40,Stephen Blott,This parameter wasn't being used.,False
18b323f96796a02b4ef36b7041a8cac18b0c1fbd,2016-03-26 16:57:55,Stephen Blott,"Pass count to find commands.

With this change, now *every* front-end command either accepts a count
argument, or or it doesn't accept a count at all.",False
aa8f568c6c3be795c17c3b5107a8a8c70fc6e930,2016-03-26 16:53:53,Stephen Blott,"Fix inappropriate variable name.

""description"" is the first element here, not all elements.  So
""descriptor"" is a better name.",False
5073fc3005b0cab3b44062d051311a704882d4d5,2016-03-26 15:48:32,Stephen Blott,selected wasn't being used here.,False
d25b2c6fb08d06b87f7bbe69a1bcfecd351c7c7f,2016-03-26 15:48:17,Stephen Blott,Unified approach to repeat background command.,False
e0ab4722f2298addd6d80ea1af1427bb41fc2fd9,2016-03-26 15:47:59,Stephen Blott,Uniform treatment of request for all background commands.,False
9bc02b6fe8329fc6342196070f68f1657075c3db,2016-03-25 17:08:18,Stephen Blott,"Better choice of callapse on exit.

The question here is where to callapse the selection to, anchor or
focus?

When exiting visual mode, mimic vim.  When trasitioning between visual
and caret modes, do what's right to keep the selection in the same
place.

This also adds some related tests.",False
69333f609bcdf3724ae639d7389750cfe18f4523,2016-03-25 16:07:45,Stephen Blott,"More selective integration with the tests.

This is a better way of stubing for the tests.

Previously, if anything went wrong, there would actually be a visual
effect for the user (the page would scroll).  This way, that cannot
happen.",False
326d6c486db97764123fdbeb68212624b9941da2,2016-03-25 15:44:41,Stephen Blott,"Add tests for visual mode.

The coverage here is far from completem but we do catch the basics.",False
a6fc63636c4e815ae128a8a15e7cf13ea028b297,2016-03-21 18:14:19,Stephen Blott,Rework cisual mode; tweaks and fixes.,False
741bc131353eb856022d66252309de23a0873fc7,2016-03-21 18:01:00,Stephen Blott,"Simplify singleton handling.

While working on the visual-mode code, it became apparent that our
current ""singleton"" implementation is unnecessarily complicated.

This simplifies it.  The keys are now required to be strings.

(Previously, they could be any object; which meant we needed to gove
objects an identity.  All of which was complicated.)",False
8783569983d8b3634b1b1eed9b6560dbea5698ab,2016-03-21 17:34:27,Stephen Blott,"Rework visual mode.

- Refactor the three visual-mode modes.
- Use the key-handling framework from #2022.
- Strip some legacy edit-mode code.
- Rename the file (the old file name was misleading).
- Add ""aw"" and ""as"", previously we had the code for this from edit mode.",False
17715e5eed068722ce74fae05a51d67f65cef77c,2016-03-21 10:58:46,Stephen Blott,"Rename visual mode file.

This previous file name was chosen when we (I) had the intention of
implementing edit mode too.

That initiative has been abandoned, so the file name is inappropriate.

Renaming now in preparation for a significant refactoring of visual
mode.",False
7875b5da15998fd4c3f705b08bc0a5972bddce25,2016-03-20 21:05:35,Stephen Blott,"Bump node version to 0.12 for travis.

The travis build was very noisy because we were forcing an old version
of node.  0.12 is a better choice, and keeps the noise levels down.",False
31393c50342186f728c2b9607caf0220b13fd42e,2016-03-18 14:47:13,Stephen Blott,This isn't needed any more.,False
7a0f53a8dceb8ffb4f1080e84f1d875a4fa20b78,2016-03-18 14:16:50,Stephen Blott,"Reduce complexity for initialising the top frame.

In #2053, I omitted to notice that the top-frame (vomnibar)
initialisation sequence also generates O(n^2) messages.

This makes that sequence O(n).",False
009967b9ba7b7a14b9773f7ba18b8d9f5c85c747,2016-03-18 13:06:54,Stephen Blott,Refactor mode initialisation for clarity.,False
a5ff084fba22c43ed170308e41a31b62455e52a1,2016-03-18 13:01:51,Stephen Blott,"Clarify why things are exported.

We have:

    window.XXX = XXX = -> ...

in many places.  This commit reduces the number of these, and moves the
exports to the end, where a single comment explains why they're being
exported.",False
51e67b8c623cb68b9be2e172dffc7790da0ae288,2016-03-18 12:51:25,Stephen Blott,"Refactor the front-end initialisation sequence.

The front-end initialisation sequence has become quite confused.

This simplifies it, makes things which must be idemtpotent explicit and
renames some functions to make it clear when they run.  It also avoids a
situation where we were possibly installing a `domReady` function to
initialise the HUD multiple times.

Should be a no-op functionality wise.",False
5f1acf3c66d9e128883a7a54409a08a42ab9ea05,2016-03-18 11:42:58,Stephen Blott,"Add Utils.makeIdempotent.

The intention is to use this to clean up some of the initialisation
sequences in the front end.",False
307ecffc4b5d1ebfc4e48c09e0f333296d509947,2016-03-17 19:58:34,Stephen Blott,"Merge pull request #2042 from smblott-github/rework-logging

Rework logging (dev only)...",True
34db989cce7e58364572bdf76554e965532e1ddd,2016-03-17 19:58:06,Stephen Blott,Logging; consistent and concise normal-mode logging.,False
452b5bcffbf9ece8648c9e2d2d5649cbcb9193dc,2016-03-17 19:56:43,Stephen Blott,"Logging; do not log the tab Id.

The frame Ids are sufficiently distinct.  And we do not always have
enough horizontal space to keep log messages on a single line.",False
5eae0eebd96357a67853de79a47c01d5e1bd4e3d,2016-03-17 19:56:43,Stephen Blott,Logging; auto scroll to end.,False
5bdf71a3c5b4c1a342c5c6bc644e8feea62d17b8,2016-03-17 19:56:43,Stephen Blott,"Logging; only show the time...

... we know what day it is!",False
a7cd51c8b4c6694ec66711535dbba4ba7a3b813b,2016-03-17 19:56:43,Stephen Blott,Logging; add auto-lauch option.,False
e507eb8e3fc1b7f6a9ff7fb0c46760161997912a,2016-03-17 19:56:43,Stephen Blott,"Logging; move logMessage to BgUtils.""",False
f7ac5152ff79d62d923a9830db990d2b4ad0d592,2016-03-17 19:54:05,Stephen Blott,Minor refactoring.,False
744e293fb9ff65f086d06b8aeb44231db8e6331c,2016-03-17 19:32:02,Stephen Blott,"Refactor setIcon to the background page.

There's no need for the setting of the icon to be driven from the
content script.  We first know the enabled state in the background page,
so set the icon there immediately.",False
1199849d929ae20e79d8e07dbf14957d9c1029f8,2016-03-17 19:20:51,Stephen Blott,"Minor refactoring.

This tidies up some logic that was showing its age.",False
2e197df82a13d3cbc3ad305d08650b1a329bdcad,2016-03-17 18:37:47,Stephen Blott,"Merge pull request #2053 from smblott-github/use-port-for-frames

Use port for frames",True
e1aee8b4867e3d315d799ba06ba46fa7d7077c0c,2016-03-17 18:24:44,Stephen Blott,More tweaks for #2053.,False
16b150c108f72cc7b3e33c6fa46bd5c2d06c71c8,2016-03-17 18:05:33,Stephen Blott,Tweaks for #2053.,False
d6f8e7301ed43a64df77e9bfa0ef9dd7a263faeb,2016-03-17 16:47:03,Stephen Blott,Simplify domReady handling.,False
e19ff7a58ec97de3524a6eb32d5f6e0f57696354,2016-03-17 16:47:03,Stephen Blott,Tweaks.,False
309704eba6673360c8b29a103bc2c76244e82b08,2016-03-17 16:47:03,Stephen Blott,"No need to block until `frameId?`.

Now that we've moved Frame.init() back to before checkIfEnabledForUrl,
there's no longer a need to check that frameId has been initialised.  It
must have been.",False
f504fd305e5b2c16b2053a76090ea2618ab42332,2016-03-17 16:47:03,Stephen Blott,Move isEnabledForUrl to Frame.port.,False
8912215c01504b459ff1c6aa17309a86037f6af8,2016-03-17 16:47:03,Stephen Blott,Fix omission from 3768b54aa1ac12cdd809e7108a6a9fd629a1164f.,False
4009213f0dbe1326263535e0a50a165d179ae47d,2016-03-17 16:47:03,Stephen Blott,"Open frames port pre documentReady.

The intention is to move checkIfEnabledForUrl to the frames port.  That
needs to run pre domReady, so first -- here -- we separate the two
ports.",False
5a6cb052b14fcaa11189b7760ebf480a38db682d,2016-03-17 16:47:03,Stephen Blott,"Add filter for top frame when registering a frame.

We treat the top frame specially (because it always has a frameId of 0).
See point ""Two"" in this comment:

  - https://github.com/philc/vimium/pull/2053#issuecomment-196707223",False
e5e55b4bac1d45dda0568d1b6cccb3387918573f,2016-03-17 16:47:03,Stephen Blott,"Do not unregister the main/top frame.

We never unregister the main/top frame.  If the tab is navigating to
another page, then there'll be a new top frame (with the same Id) along
soon.  If the tab is closing, then we'll tidy up in the
chrome.tabs.onRemoved listener, below.  This approach avoids a
dependency on the order in which register and unregister events happens.

See comment in #2053.",False
a871ffd82b0e8b8ce10b6228819a4ff12ae952bb,2016-03-17 16:47:03,Stephen Blott,"Tweaks and fixes for #2053.

Tweaks, plus... Reinstate deletion of two cache entries on tab close.",False
8be6acd660be212926bff495c8e8f83d3f5917be,2016-03-17 16:47:03,Stephen Blott,Use Chrome frameIds.,False
6653fa0e588d9fb777b627c947b377fa0518bfc8,2016-03-17 16:47:03,Stephen Blott,"Use ports to track frames.

Use `onConnect()`, the `domReady` port  and `onDisconnect()` to track
the frames within a tab.",False
dfb18315f8806f0b86cc6db6ef0623ad283007f5,2016-03-17 16:19:23,Stephen Blott,"Move alphabet hint tests...

... they were in the wrong place (and were being run twice).",False
8390d54b0ccf201f54bdb69d302d7b4c3b75e29a,2016-03-17 16:17:36,Stephen Blott,"Fix long-standing bug in link-hints tests.

This code has been written to test both hints modes, however we were
actually only testing one of them!",False
d53ce1494676fb47504d7822f39efe474ffa080b,2016-03-16 16:48:34,Stephen Blott,"Relocate first scrollable element.

When the scrollers `activatedElement` isn't scrollable, we currently
search up the DOM tree for the next scrollable thing, and stop at
`document.body`.  However, it can be that that isn't scrollable.

When that happens, this commit searches for a scrollable element in the
same way as it does when the frame initially loads.  This makes it
possible to restart scrolling on pages like this one:

  - http://redux.js.org/docs/basics/UsageWithReact.html

after clicking one of index links.

Inspired by example posted by @marlun in #425.",False
aa35d7fe5eae257bc67e13f2f8d3f06442d428c7,2016-03-13 20:01:50,Stephen Blott,"Tweak options page class names...

We were using the class name exclusionRemoveButton for the `td`
containing the button to remove exclusion rules on the options page.

Because of this, we were (correctly) picking up the button itself as
clickable, but incorrectly picking up also its enclosing `td` (which
isn't actually clickable at all).  The effect was to always have two
hint labels over the remove button.

This was happening simply because we have the text ""button"" in the class
name.  So, here, we just rename the classes.",False
d96fc4920cf72ee93d2c98830497774f72ac5372,2016-03-13 17:38:10,Stephen Blott,"Merge pull request #2050 from smblott-github/add-tests

Add tests in various areas...",True
9e72df5b4f8a97fe3079278e82c1dbcc51248abf,2016-03-13 17:27:07,Stephen Blott,"Add tests in various areas...

- key handling
- filtered hints - scoring
- filtered hints - tab
- link hints - changing mode

Also, correct the argument ordering in several assert.equal() calls.",False
511607806cdf6caace67a0a3ae323def768678bd,2016-03-10 14:20:11,Stephen Blott,"Tests; add alphabet-hint hint tests.

This adds tests for a couple of properties that are required of alphabet
hint strings.",False
e4127fc8f779a5c784332e65b1322180c4381dd0,2016-03-09 21:59:16,Stephen Blott,"Fix mainFrame command...

Oversight from #2022.",False
e102c5e526e6257a5ea8add54c0aa9efad2961b8,2016-03-08 20:43:27,Stephen Blott,"Merge pull request #2043 from smblott-github/fix-2038

Fix focus issue with UI components (#2038)",True
3498f725b2a9ac8b155acc117aac8fba2cf01b16,2016-03-06 18:53:57,Stephen Blott,Tweak new features in README.,False
c4e4555fbc8f74a2afa2223032016396c7325762,2016-03-06 18:49:21,Stephen Blott,"Note new features in README...

- map abc insertMode
- no longer spam dev console",False
2c874e3a740f9869dae4134e355451f692421298,2016-03-06 18:07:54,Stephen Blott,"Fix focus issue with UI components.

Problem:

- `?`, `o`, `Esc`, `Esc` leaves the focus in the (invisible) help dialog
  frame, rendering Vimium broken.

Since we do

    @iframeElement.focus()

when we activate a UI component, here we do

    @iframeElement.blur()

when hiding such elements.

Fixes #2038.",False
577d43cbc861ef546f8330ebe9ad79c4054a1cfd,2016-03-06 16:59:26,Stephen Blott,"Merge pull request #2033 from smblott-github/init-ui-components-only-when-enabled

Do not initialise UI components when disabled.",True
a8cd9d5b66f9fd6d46f453e50672611538c801f2,2016-03-06 16:57:45,Stephen Blott,"Tweak documentReady().

We can remove these listeners once we're done.",False
5b2e06747f63fbb120bae527122bd2ea0af9ea7d,2016-03-06 16:57:45,Stephen Blott,Don't HUD.init() until DOM is ready.,False
2035844b1c625ca65c1b9d0fb8c9a6c6df6a0dcd,2016-03-06 16:57:45,Stephen Blott,Do no init Vomnibar pre-DomReady (tweak).,False
7818ab8d6db8e28d6699e64b17bf3a0d63adbdf7,2016-03-06 16:57:45,Stephen Blott,Do no init Vomnibar pre-DomReady.,False
bde730eb473982203f9db9813aebd5657beeebf9,2016-03-06 16:57:45,Stephen Blott,"Address possible race condition in Vomnibar initialization.

This addresses the potential race condition mentioned in this commit
record (3542db7b6c322d803c263db641ae0b02327447ca) and in #2033.

In non-top frames, wait until documentReady before sending the message
to initialise the Vomnibar.  This cannot be before preDomReady in the
main frame, right?",False
0822f8244d328233752c7f986a70e805ee238979,2016-03-06 16:57:45,Stephen Blott,"Initialize UI components only when they're needed.

HUD: Initialize only when the frame receives the focus and Vimium is enabled.
Vomnibar: Initialize in the top frame when Vimium is enabled in *any* frame.

Warning:  There may be a race condition here.  Specifically, if Vimium
is disabled in the main/top frame (T) but enabled in another frame (A), then the
initialisation could happen in frame A before frame T is listening, so
frame T would miss the initialization message (which is only sent once).

Message listeners are installed early (and probably installed first in
the main/top frame), and the `isEnabledForUrl` messaging takes some
time, so perhaps it's OK.  But it *is* a race condition.

Fixes #1838.",False
755c9fb4f837a9f8b80d51610e86c3ba2ea1999f,2016-03-06 16:56:20,Stephen Blott,Make HUD.init() idempotent.,False
18d8c9043f8651a94885831c799e3fda7a8b1dc0,2016-03-06 16:43:51,Stephen Blott,"Fix count handling (again).

`7gj` should be `1j`.

Also, with:

    map ab SOMETHING

`7aab` should be `1ab`.

Replacement for 7774beb6643c0d905f9caba4345453790af948ad.",False
88224d8ee99eac49a57f7137b5f056e151c6a426,2016-03-06 16:39:13,Stephen Blott,"Revert ""Count prefix applies only to leading mapping.""

This reverts commit 7774beb6643c0d905f9caba4345453790af948ad.

Reverting this.  It can be done better (and capture some other incorrect
cases).",False
811d6e864de485a11bb46d4a0618b9a27027f3c7,2016-03-06 14:55:19,Stephen Blott,"Normal mode tests.

With #2022, we can now implement normal-mode key-handling tests.

Writing these tests uncovered the bug behind 7774beb6643c0d905f9caba4345453790af948ad.",False
7774beb6643c0d905f9caba4345453790af948ad,2016-03-06 14:43:24,Stephen Blott,"Count prefix applies only to leading mapping.

E.g. `7gj` should be `1j`; currently it's `7j`.",False
a69a3fdb380e750c3aeaf90512f7ca49366e9569,2016-03-06 12:26:45,Stephen Blott,"Merge pull request #2040 from smblott-github/resize-icons

Resize page icons to 128x128.",True
8d98fc1954419e6e5f2e1d78d97b7e6f962e10e5,2016-03-06 12:09:29,Stephen Blott,"Resize page icons to 128x128.

Fixes #2035.",False
9c3326c43728af844387cce1f1cf315e5b7977be,2016-03-06 12:05:48,Stephen Blott,"Copy 300x300 versions of icons.

Keep 300x300 copies of the page icons, preparatory to resizing them to
fix #2035.",False
fd30a2725916923108aaf331f1a8236e3d0a9328,2016-03-05 20:53:26,mrmr1993,Move LinkHint mode indicator text into modes,False
5580efa30ee11517afeffd4cbf8ab578e4a41c72,2016-03-05 20:36:08,Stephen Blott,Tweak #2036.,False
43db11967f12c9477f1001c88d80de8e0c426a75,2016-03-05 19:37:04,mrmr1993,Use clickModifiers in link hint modes for modifiers for click activation,False
1b03ab022c6280251289bcb259ccb7568464ea01,2016-03-05 19:30:50,mrmr1993,Move non-click link hint activators to the corresponding mode objects,False
e93b6b2cd689016022113006c53d0decfb98d5c5,2016-03-05 19:24:22,mrmr1993,Factor out click activators in link hints,False
4491ba5e988aa069839ca073f9de6bada596857f,2016-03-05 19:13:13,mrmr1993,"Reformat link hint mode objects for easier diffs

This is a no-op.",False
b883af74450faf3683b8077d6ba09864f5632b26,2016-03-05 14:11:45,Stephen Blott,"Generalise topFrame commands.

This generalises the mechanism by which commands are always run in the
tab's main/top frame.  Currently, that's just the Vomnibar.

This is a precursor to moving other UI components to the main/top frame.
It should be fairly trivial to move the help page to the main frame.
The HUD might be trickier.

Mention: @mrmr1993.",False
fbf7791894cb2708774e8870f623a8211e3a0790,2016-03-05 14:02:58,Stephen Blott,"Simplify command-registry generation.

If we just use the name `background` instead of `isBackgroundCommand`,
then we can simplify the building of registry entries.

This is preparitory to adding a new registryEntry field: topFrame;
initially just for the Vomnibar, but thereafter for other UI components.",False
62359adda7bc38917de38e3fc794d37817fa05ed,2016-03-05 11:13:42,Stephen Blott,"Merge pull request #2022 from smblott-github/generalised-key-bindings

Key handling in content scripts.",True
fb67cfdd2ca8c09453cc896fd02d08ed5a74a8a4,2016-03-05 11:10:35,Stephen Blott,"Key bindings; disable on disconnect.

This reinstates the feature whereby we disable the content script when
we lose contact with the background page, e.g., on upgrade.

From my investigations, this doesn't appear to be absolutely necessary.
Nevertheless, it's cleaner like this.",False
632c97eb3485f05c7f813deea788512156116fbb,2016-03-05 11:10:35,Stephen Blott,"Key bindings; reset on passKeys change.

Normal mode updates the pass keys every time the frame changes (so, also
every time we change tab).  Here, we reset the key state too.  Resetting
the key state makes sense when, for example, the user has changed the
pass keys.  However, it also changes a status quo/master behaviour:

- `g`, change-tab-with-mouse, change-back, `g` -- previously this
  scrolled to top; now it does not.",False
9a22be04cb0b5cef3dcffea84cbbd21565906bd9,2016-03-05 11:10:35,Stephen Blott,"Key bindings; do not reset on passKeys change.

This reinstates the legacy behaviour in the following case:

- `g`
- change tab
- change back to the original tab
- `g`
- ..... which scrolls to top.

It is not obvious that this is the best behaviour, but it is the legacy
behaviour, and it certainly isn't unreasonable.",False
a049281ea12e2d31813277ef7777815175881f6b,2016-03-05 11:10:35,Stephen Blott,"Key bindings; miscellaneous...

- remove unused ""event"" parameter
- move methods around to put like with like
- simplify some expressions
- one better method name",False
177a12ca5ccfd08ca5576575611907bfd1f7f34f,2016-03-05 11:10:35,Stephen Blott,Key bindings; document Commands.generateKeyStateMapping().,False
91bcedbf4aebbd2691ef68ca96094206a942a1b8,2016-03-05 11:10:35,Stephen Blott,Key bindings; simplify pass-key logic.,False
5db79c7e8ef05bea07d1e811de4c9a7755be85f2,2016-03-05 11:10:35,Stephen Blott,Key bindings; and one more tiny tweak.,False
91498d457f4398ab467fda4ec67b7444b1335cd3,2016-03-05 11:10:34,Stephen Blott,Key bindings; and yet more tiny tweaks.,False
201451d94edefa8c873d417f5f6190d993204b5e,2016-03-05 11:10:11,Stephen Blott,Key bindings; move Vomnibar commands back to content scripts.,False
ff6d4b92df924b93de4366b1f0e3cc7411ac8065,2016-03-05 11:10:11,Stephen Blott,Key bindings; more small tweaks.,False
7bf8cb11db08c61417a4d72b95c2905a4869cf67,2016-03-05 11:10:11,Stephen Blott,"Key bindings; small tweaks...

- simplify pass key condition
- don't keep key-parsing Regexp in memory
- we should reset the key state when the pass keys change",False
f6f97b373746b198a68b33040ddc4d42e9898445,2016-03-05 11:10:11,Stephen Blott,Key bindings; add line missing from tests.,False
70151ea99cb86bbbf268ecb737337aa7cc266e2d,2016-03-05 11:10:11,Stephen Blott,Key bindings; and yet more tweaks.,False
29708b3297a645966f7943682f8f7b8c2a332297,2016-03-05 11:10:11,Stephen Blott,"Key bindings; refactor passKeys distribution.

It makes more sense to pass the passKeys directly to normalMode.  So, do
so, and remove the trackState mode option - which isn't otherwise being
used.",False
e4193e2752ee7132ff16a7ba977857f70df2946b,2016-03-05 11:10:11,Stephen Blott,Key bindings; tweaks.,False
9cfa00bc7db3e07c3abbeb09e483d9fdf20bbc17,2016-03-05 11:09:33,Stephen Blott,"Key bindings; refactor passKeys.

Previously, the key-handling logic (keyQueue, etc) was and the backend
whereas passKeys were handled in the content scripts - so they were a
long way apart.

Now that they're in the same place, it makes more sense to integrate
passKey handling into the regular key handling, because they depend upon
the same data structures.",False
f2bced459457dcc962d4bafe2fdf2e6245506ee3,2016-03-05 11:09:33,Stephen Blott,Key bindings; tweaks.,False
b0d2f3bfbc36232c235f913131c78a5bb76b59c3,2016-03-05 11:09:33,Stephen Blott,Key bindings; and yet more minor tweaks.,False
b63683a1026e12bfd7bff6b8745d18e3b858bf92,2016-03-05 11:08:30,Stephen Blott,Key bindings; yet more minor tweaks.,False
520b63cb1d64fb5a293988122007bd05bacc49db,2016-03-05 11:08:30,Stephen Blott,"Key bindings; fix tests...

... and fix two bugs:

- not suppressing keyup event after keyChar matched in keydown.
- we cannot check the passKeys keyChar in keyup because the key state
  has changed; so we track what the next keyup response should be.",False
cf7a03dc26415528bc690147ba72c08e67dd65c8,2016-03-05 11:08:30,Stephen Blott,Key bindings; more minor tweaks.,False
6e37f605fe45ee5eca03153c35c55c231e703c95,2016-03-05 11:08:30,Stephen Blott,Key bindings; minor tweaks.,False
f0c0a07a2dcb7c73f6aa93de166d8fa87e21f305,2016-03-05 11:08:30,Stephen Blott,"Key bindings; reinstate keyToCommandRegistry.

... We need it for the help page.",False
1ae95161b021fc9a64e139485b0dac047a874c0e,2016-03-05 11:08:30,Stephen Blott,Key bindings; simplify Commands initialization.,False
5d918f75715cc2c595a77f1e9dc8fe545fabb663,2016-03-05 11:08:30,Stephen Blott,"Key bindings; more tweaks and fixes.

- There's no need to keep `@keyToCommandRegistry`; it's regenerated
  whenever it's needed.",False
a7136933b3e63ec5a7a50cd1dab9547b51f2d6d9,2016-03-05 11:08:30,Stephen Blott,"Key bindings; handle overlapping bindings

With:

   map g something
   map gg somethingElse

The mapping for ""g"" always takes priority, regardless of the order in
which they're encountered in `@keyToCommandRegistry`.",False
f89b58f04af3eae05de9e999c39b2fe047fe6f4a,2016-03-05 11:08:30,Stephen Blott,"Key bindings; more tweaks and fixes.

Miscellaneous fixes and tweaks, including:

- Reinstate key logging.
- Fix count handling in line with expected behaviour in #2024.
- Remove `noCount` option; we don't need it.
- Simplify logic in various places.

Fixes #2024.",False
18b8db13fa5184e0cc3ac5fd6645620fdb9d5cef,2016-03-05 11:08:29,Stephen Blott,Key bindings; tweaks and fixes.,False
93901aeecc842e563ea95ca3cb1b4e5d396f25dd,2016-03-05 11:08:29,Stephen Blott,Key bindings; fix exit help page.,False
a881ade2023a6e602097b0ae28c515fc3e9c5e8a,2016-03-05 11:07:40,Stephen Blott,Key bindings; rewire vomnibar (fix minor error).,False
560112448d00fc9c69c9db03de8fdd5412c700dc,2016-03-05 11:07:40,Stephen Blott,Key bindings; rewire vomnibar (tweaked).,False
6487c09d98b791b3211679d2f1bf970394a696e6,2016-03-05 11:07:40,Stephen Blott,Key bindings; rewire vomnibar.,False
320dfd5419b4a7e676f8690a87b275b305440dc3,2016-03-05 11:07:40,Stephen Blott,Key bindings; more remove legacy code.,False
d388eddd192d925cda43700d7090ce8d52499df0,2016-03-05 11:07:40,Stephen Blott,Key bindings; remove legacy code.,False
47de80f2fcb03c8741ab46308ce982209f74f6ac,2016-03-05 11:07:40,Stephen Blott,Key bindings; fix passkeys.,False
3f63ceb19046157692eac9e9a13486af7e50a57e,2016-03-05 11:07:40,Stephen Blott,Key bindings; partially functioning w/ backgound commands.,False
34b1fb0f4e2ce1696c17e703d0bc43463355d6ba,2016-03-05 11:07:40,Stephen Blott,Key bindings; initial partially-functioning version.,False
7c5fb2c312b9140c2dd091f792535ae8f592ecdb,2016-03-05 11:07:40,Stephen Blott,"Key bindings; initial ""generic"" class.

This implements a generic front-end class for key handling (a la normal
mode).  Also:

- supports count prefixes (or not)
- supports multi-key mappings (longer than two)

Also included is a very poor-man's demo.  See the bottom of
mode_key_handler.coffee for some hard-wired key bindings.

IMPORTANT:

   This does not actually work as Vimium.  It's just a demo.",False
27d3d0087c86a6effd25049cbf0d9273eb0af9db,2016-03-05 11:02:36,Stephen Blott,"Improved test for messages intended for background page.

The options page receives messages intended for the background page (and
we're getting console warnings).  This is a more general test for when
the front end should ignore such messages.

Fixes #2034.",False
b954ffdb6c94fa468eb10d0955513b876b1f1a95,2016-03-04 18:42:40,Stephen Blott,Consistent capitalisation on the options page.,False
0dc6ecae624d5067f0b00332c2f41c556fa8bd03,2016-03-04 15:56:56,Stephen Blott,"Merge pull request #2031 from smblott-github/clickable-command-names

Make command names in the help diablog clickable.",True
58e332fe942d01c8f4633b3415c460f678b2c75b,2016-03-04 15:51:13,Stephen Blott,Use role/link to make command names clickable.,False
67807bf8a80433fdaa8524d12be31031121b8e7a,2016-03-04 12:31:59,Stephen Blott,"Merge pull request #2029 from smblott-github/refactor-link-hints

A small refactor link hints.",True
de6c623b65f072650e70c8c5acf8c9d809bc64f5,2016-03-04 12:14:36,Stephen Blott,"Refactor hints; no need to guard against no rect.

- The check for whether a rect is defined is only used in one of the
  three cases.  So we don't need it.
- Also, better veriable name.",False
36d9b07f7617b18706f9523cfee121a0e2cf61b0,2016-03-04 12:00:09,Stephen Blott,"Do not use standalone @.

The styles guide says not to use standalone `@`.  So this changes the
occurrences I could find (with sed) to `this`.  Occurrences within files
with major outstanding PRs are omitted.",False
2beb94559937a9b97c5d11d24006d84931cdd4a1,2016-03-04 11:37:52,Stephen Blott,"Make command names in the help diablog clickable.

Clicking on command names in the help dialog copies the command name to
the clipboard.  Moreover, command names can be clicked (hence copied)
with link hints.

As a a side effect, any element on any page with the `vimiumClickable`
class becomes clickable.  That's zero elements on zero pages, currently.
But there was a PR some time ago where a web developer was looking for a
way to make their elements vimium clickable.

On the negative side, this is pretty undiscoverable.  Also, the
`indexOf()` class-name test within a string isn't exactly precise.",False
7f0fccf363ce887d8d9b1b92494ab94547931150,2016-03-03 18:54:15,Stephen Blott,Remove methods which aren't used.,False
addceafab244b174aba89718d81f6bcb4cea22ff,2016-03-01 22:43:02,Stephen Blott,Note scrolling change in README.,False
7dfcd123191ff9b7deb9059e1d454d425254125c,2016-03-01 15:28:40,Stephen Blott,"Refactor hints; add `userMightOverType`.

Previously, we set a variable `delay` and then did some logical
gymnastics to get the correct effect.

However, in fact, all we care about is whether the user might over-type
the links text.  So changing to using that as a Boolean flag greatly
simplifies the logic.  And we lose about 10 LoC.",False
66e1f46b8865ff3ae98037590fcb149d2e98e873,2016-03-01 12:57:51,Stephen Blott,"Refactor hints; consistent variable naming.

While we're changing this code, we can renamed the parameter here to be
consistent with its naming elsewhere.",False
9c37e4430b1f4fec946cc0080fb1d944a8ab7d87,2016-03-01 12:53:59,Stephen Blott,"Refactor hints; remove trailing whitespace.

Somehow,",False
0761521e45af560453abb10b35dfae410ae8bce9,2016-03-01 12:36:47,Stephen Blott,"Refactor hints; remove legacy code.

Previously (quite some time ago) we reused the LinkHints object.  But
for some time it's been a class, and we never reuse instances.

Therefore, we can remove the code related to resetting the object's
state.",False
3671382a6a3c14d1f834b6ebcf10605921201c53,2016-03-01 12:32:27,Stephen Blott,"Refactor hints; fix exit sequence.

Previously, the exit sequence when a link was ""clicked"" was spread over
several functions with several callbacks.  This made it difficult to
verify that the correct actions were happening in the correct order.
Indeed, they weren't in at least one case (we were still showing hints
while ""waiting for enter"").

This fixes that by putting all of the various deactivation orders into
one place, `@activateLink()`, and simplifies `@deactivateMode()`
accordingle.",False
0a5f3cc10d5c70aa79adb224cf324ca4b7f58702,2016-02-28 20:20:44,Stephen Blott,Remove some legacy (and unused) code.,False
eb2eb7c4368108fcd0e1472f6ef34ca2416b5371,2016-02-28 17:44:14,Stephen Blott,"Fix for <count>F.

We were immediately restarting link-hints mode if a count was present.
Unfortunately, that meant that we were detecting our own link-hint click
and exiting immediately.  So, with a count of 6, we were only getting 3
link-hint activations.

To avoid this, we add a short delay (just nextTick).

Also, move some other stuff arund to make sure this works in all cases
(e.g. wait-for-enter).",False
a1cf7228f47c2f4c837a442deb7b07d94b5dd2b1,2016-02-28 17:03:12,Stephen Blott,"Fix defualt command ""options"".

The default (for when no options are provided) is of the wrong type.
This works as is, but should really be fixed -- as here.",False
b3280cba4321ba88d8b38f234b4d3d06a156f750,2016-02-28 16:10:01,Stephen Blott,"Merge pull request #2026 from smblott-github/fix-2023

Refactor focusFrame - Fix #2023.",True
ef4cd278038737c99224dcf8dc67d9160aaed749,2016-02-28 16:09:25,Stephen Blott,"Merge pull request #2025 from smblott-github/pass-count-to-scroll-functions

Pass to count to scroll commands.",True
bfe91c609ef9886cfeb5d45bfa1557a9d00faeb2,2016-02-28 16:05:11,Stephen Blott,"Refactor focusFrame.

Only the `flashFrame` part needs to be guarded against the DOM being
ready.  So we can take the `flashFrame` part out as a regular function.

Fixes #2023 (although I don't fully understand why that's happening).",False
8adfa7c4ef8357b6cb945354d6da1b7b92615119,2016-02-28 15:44:41,Stephen Blott,"Merge pull request #2014 from smblott-github/record-install-date

Add install date to logging page.",True
ff6dee4a3f5d49ae4ea7ae037f6e0df78b65eb31,2016-02-28 15:37:19,Stephen Blott,"Pass to count to scroll commands.

Currently, `10j` keeping `j` held down scrolls quickly for a time then
reduces back the regular hold-`j` scroll speed.  Therefore, the user
cannot use a count to influence the smooth-scrolling scroll speed.

This PR fixes that by passing the count to the scroll functions.
Consequently, we adjust the actual scroll amount (which affects the
scroll speed) rather than calling the scroll commands several times
(which doesn't).",False
f6a3bc3aa0c14af41a9b6035cc809071b4a27af1,2016-02-27 22:45:20,Stephen Blott,"Remove unnecessary vomnibar click code.

This is no longer necessary since the help page is in an iframe.",False
f87ae743aa0adf1b09adc8094738916144827145,2016-02-27 10:58:21,Stephen Blott,"Merge pull request #2021 from mrmr1993/click-the-same-way

Make behaviour match LinkHints for goPrevious and goNext",True
cf08ac3f189d91551c52f8faee3aa04596523768,2016-02-27 10:56:07,Stephen Blott,"Merge pull request #2020 from mrmr1993/remove-old-redundant-exclusions

Remove outdated blacklist in DomUtils.isEditable, use DomUtils.isSelectable",True
2d7433e39eb07a2900332a10b34d816ff28ce857,2016-02-27 02:10:42,mrmr1993,Change followLink to use the same method as LinkHints clicking,False
a3cf3d18e94d5d3f39db3e08fdd05a610f55d684,2016-02-27 01:33:17,mrmr1993,"Don't try to evaluate DomUtils.isSelectable on non-elements

This stops us from throwing errors when document, window, etc. end up
being passed into DomUtils.isSelectable.",False
2a631ab75bc23a30f890fa5c557c684225b7bb81,2016-02-27 01:25:24,mrmr1993,"Remove outdated blacklist in DomUtils.isEditable, use .isSelectable

This fixes #1964.",False
e33fbadb834f3f51599780eab9a7d85244a1b380,2016-02-23 11:25:14,Stephen Blott,Tweak #2015.,False
57964b9afe36fc4290396b94b6f45ef637000ae0,2016-02-23 11:25:01,stephane,"Workaround for the hanging part of issue #1944 ""Tests fail/hang with latest PhantomJS (2.1.1)"".
URL: https://github.com/philc/vimium/issues/1944",False
1cd93d83258e9dd239186983852d3a3acfc484a5,2016-02-22 21:38:48,mrmr1993,Format branch better on logging page,False
c96a11b542263d14ed0c6e0ee11de8604992e058,2016-02-22 21:29:24,mrmr1993,Include branch information in the logging page,False
efbcdea1ad25ec13d93403a3abd26da5905da732,2016-02-22 15:57:01,Stephen Blott,"Correct name on the logging page.

Oversight from #1958.",False
51884d5889047f5a130c9c409a3e833ccdea0f14,2016-02-22 15:52:08,Stephen Blott,"Remove legacy reference to edit mode.

Omitted from #1961.",False
8a540759e250f44dafa07daf90131f109f672c6a,2016-02-22 15:50:28,Stephen Blott,Add install date to logging page; remove console.log.,False
251496451907801c45b4b794a235030e6ab99ae2,2016-02-22 15:42:00,Stephen Blott,"Add install date to logging page.

This implements a poor-man's build info.

See #1352.  Unfortunately, that requires a separate build target, and
does not work with `cake autobuild`.

This just records the *install date* and displays that info on the
logging page.  ""Install date"" because we can reliably determine it, and
because it does answer the question *have I upgrade Vimium on this
machine since last week?*.  And on the logging page because that's out
of the way, and not part of the regular Vimium interface.",False
5cbc5ad702a01a81b98f8c82edb3b6d227c2c7b5,2016-02-21 21:49:43,Stephen Blott,"Fix divide by zero.

If text.length is 1, here, then we divide by `log 1` - which is zero.
So add one.",False
1de41f55c121192556a7bf182211fb3b6deeccc8,2016-02-21 13:02:20,Stephen Blott,"Include count command option in repeat limit.

We need to multiply by `count=N` *before* checking `repeatLimit`.

Tweaks #2001.",False
972bf7a5e47f6f4abd9db5024914a87f0dad9084,2016-02-21 12:33:24,Stephen Blott,"Remove selectionChangedHandlers.

With #2006 and #2009, this is no longer being used.",False
60d60a4684b9567517c8d2d06267ae49d13afd0f,2016-02-21 12:26:32,Stephen Blott,"Merge pull request #2004 from smblott-github/remove-tabInfoMap

Remove (unused) `tabInfoMap`.",True
970b0bc108c1f42ce65d4353b7f209748ceeecf8,2016-02-21 12:25:39,Stephen Blott,"Merge branch 'rework-duplicateTab'

Conflicts:
	background_scripts/commands.coffee",True
c4af8a5fb217f50e3089f0f01d3a18d7d2155848,2016-02-21 12:20:48,Stephen Blott,"Merge pull request #2006 from smblott-github/fix-removeTab

Fix `<count>removeTab`.",True
636964735bc8e9f1b802dc392b628e5ff92d319f,2016-02-21 12:17:06,Stephen Blott,"Rework count command option initialisation.

Previously:

    map J scrollDown count=NotANumber

would break the command completely.

Fixes an error introduced in #2001.",False
46c4700a16a6fc07ede085eca73c26046418245b,2016-02-21 00:53:38,Stephen Blott,"Merge pull request #2010 from mrmr1993/fix-find-history

Use for (not for own) when iterating over an event's properties",True
c95a7c21597ec51f72b021e0a74be118cec72bc3,2016-02-20 23:17:36,mrmr1993,"Use for (not for own) when iterating over an event's properties

Moving to for own broke find mode history (and thus also next/previous).
This reverts that part of commit
56fed2ac6663d99ca03023f3ffa313c51de5fe32.",False
26f54711eadfa3c534adbf7a1bdf1feb1be9009d,2016-02-20 23:00:21,Stephen Blott,"Rework the `duplicateTab` implementation...

Specifically, avoid reliance on `chrome.tabs.onSelectionChanged`.

If we merge this and #2006, then we can delete all of the
`chrome.tabs.onSelectionChanged` code.",False
f435bb93aaa91228b1cac7c92cc2995bbf88257f,2016-02-20 22:53:48,Stephen Blott,Merge branch 'windows-onFocusChanged',True
041b441073be2a554af94b23ea16535391cc1f29,2016-02-20 22:53:37,Stephen Blott,Tweak #2007.,False
2af20933795a1c9f6ff5d081822f9077d9183d50,2016-02-20 22:50:46,gdh1995,fix a crash of unit tests,False
0a6fb464f44bc4db242183ad137e9f80f793ec62,2016-02-20 22:46:53,Stephen Blott,"Fix bug in #2001.

We were incorrectly setting `options.count` to `NaN` if there was no
command option.",False
01e720e10400d208627b593d3d539b87d89902d0,2016-02-20 22:35:48,gdh1995,"use chrome.windows.onFocusChanged to listen window switching

This fix the problem that `chrome.tabs.onActivated` won't be triggered
when we switch Chrome windows.",False
eaafbbeeab7181ae1d3da3aa9495f98b593798f9,2016-02-20 22:10:30,Stephen Blott,"Fix `<count>removeTab`.

There's a nasty little bug in `removeTab` when you remove more tabs than
there are in the window (and there is a second window):

- all of the tabs in the currently-focused window are removed
- then, later (so, time passes), when you change tab in the other
  window, we begin removing tabs again!

The source of the bug is our reliance on
`chrome.tabs.onSelectionChanged`, which doesn't first when removing the
last tab in a window (and there is another window).

Regardless, the previous semantics of `<count>removeTab` was
questionable.  It was preactically impossible to predict which tabs
would removed.  This picks the current tab, then those to the right of
the current tab, then those to the left.",False
4244dc029540e941b8ab999365b9851dfdf0f32a,2016-02-20 21:48:50,Stephen Blott,Remove unused variable.,False
4e3bf7b66ed7d498bb10b5116627aff8dcc16f12,2016-02-20 21:40:44,Stephen Blott,"Remove (unused) `tabInfoMap`.

It appears `tabInfoMap` (and related machinery) is not being used.  This
removes it.",False
1c584fc2fe810a4f8632832c37a6e477a062180e,2016-02-20 17:43:19,Stephen Blott,Note moveTabToNewWindow count prefix in README.md.,False
85c3fd9a6b5a22703195738b101bf17b24c8fba9,2016-02-20 17:40:55,Stephen Blott,"Merge pull request #2003 from smblott-github/count-for-new-window

Make `moveToNewWindow` accept a count.",True
2debf3e07ecc41e8d0c3c186f4d8ae39641426f4,2016-02-20 17:38:58,Stephen Blott,Merge remote-tracking branch 'upstream/master',True
5dc1a741a897400e64d68b8248c0557970d04a61,2016-02-20 17:38:38,Stephen Blott,Note count prefix command options in README.md.,False
c818edb5e0e1a1edbcccfb2b978bf2e535de9fb4,2016-02-20 17:29:05,Stephen Blott,"Merge pull request #2001 from smblott-github/add-count-command-option

Add count command option",True
70b8645d61a56ea760864d222791494aa6031f92,2016-02-20 17:26:05,Stephen Blott,Simplify command-option parsing.,False
1795d5a50531f7d090375ea6078ad6e0d59830fe,2016-02-20 17:06:36,Stephen Blott,"moveToNewWindow accepts a count.

This make `moveToNewWindow` accept a count.  For example, `3W` to move
three tabs to (the same) new window.

The tabs chosen are the current tab, then those to the right of the
current tab, and then those to the left of the current tab.

`999W` moves *all* tabs to a new window.  It's not clear why you would
want to do that.  An alternative would be to leave the last tab behind.",False
ac2018212ad438b70263d6a183e388d6a7e595d8,2016-02-20 16:36:57,Stephen Blott,"Merge pull request #2002 from smblott-github/move-to-chrome.sessions

Move wholly to chrome.sessions.",True
f353e68841c53ee0a37013acdc7e3cba007eef7e,2016-02-20 16:33:28,Stephen Blott,"Move wholly to chrome.sessions.

This strips out the legacy pre-chrome.sessions code.  The API has been
in Chrome since version 37, and we probably don't really need to support
older versions than that.",False
2c634d9b2324c760007d59d5cafd97a364125991,2016-02-20 15:14:57,Stephen Blott,"Add `count` command option.

Examples:

    map j scrollDown count=10
    map q removeTab count=999",False
61ce82be4acae20562bb2ccb93ff64772ba553c1,2016-02-20 14:46:07,Stephen Blott,"Refactor command-option parsing.

When we introduced command options (for mapping keys to custom-search
engines), the parsing was done in the Vomnibar code.

This moves the parsing to `commands.coffee`, which is where it should
always have been.

This is a preliminary step with a view to adding a new `count` command
option.",False
e6200864be1bad085ae80e0a0c51d077ca1289a5,2016-02-20 14:23:47,Stephen Blott,"Merge pull request #2000 from smblott-github/hide-HUD-in-insert-mode-only

hideHUD option applies to insert mode only.",True
aaad228ca659f0d3d29b732df26b9770a3dea89c,2016-02-20 13:01:32,Stephen Blott,"Correctly set `settingsVersion`.

This fixes an error in #1950.

There, we need to detect new installs, and did so by checking
`settingsVersion`.  However, `settingsVersion` is *always* truthy.  So
the ""new install"" code never triggers.  Here, the default value for
`settingsVersion` is falsy.

Note, we *always* set `settingsVersion` when the extension is loaded.
So `settingsVersion` is always set.",False
8cf72842ad516cba7eb161ae650d48a298e55442,2016-02-20 12:31:54,Stephen Blott,"hideHUD option applies to insert mode only.

This makes the `hideHud` option apply only to insert mode (when entered with `i`).

Fixes #1953.
Fixes #487.

We could rename the option itself and add migration code, but that seems overkill.

An alternative would be to remove this option entirely.",False
476d6ee707486f2731753b937566f0fe28df4a8e,2016-02-18 16:37:13,Stephen Blott,Tweak README.md.,False
7f2d88b5001b57a62ad3c6911857bb69ec8bf326,2016-02-18 16:32:58,Stephen Blott,Note new filtered-hints coption in README.txt.,False
bfa50940a1cd112a809ad7026aee69e798ac87d3,2016-02-18 16:25:16,Stephen Blott,"Merge pull request #1950 from smblott-github/filtered-hints--wait-for-enter

For filtered hints, wait for <Enter> before activating link",True
eada4a7affd175821f668da1116cc0b66812ad59,2016-02-18 16:22:45,Stephen Blott,"Wait-for-enter: default to ""true"" for new users.

For existing users, the default is ""false""; but for new users
wait-for-enter defaults to ""true"".",False
8eda277c1bfedf898996660e107dd5cb2183a4c9,2016-02-18 16:22:45,Stephen Blott,Wait-for-enter: better wording on options page.,False
5cb9fbe98e934165e5f83c8c7b0154cbf3400570,2016-02-18 16:22:45,Stephen Blott,Wait-for-enter: hold flash in typing protector.,False
ad71e692fd0254b430c38b47b6c5a9ab3e08290b,2016-02-18 16:22:45,Stephen Blott,Wait-for-enter: add necessary option support.,False
be5205e6153e39d7c08f229c2b9183fab153f823,2016-02-18 16:22:45,Stephen Blott,"Wait-for-enter: for filtered hints.

This affects filtered hints only.

If a hint is triggered because the user typed the link text, then:

- highlight the link
- but wait until the user types `Enter` before activating the link.",False
fc9d6b16a2f0a2e405a2e74eea8e0e282a50f981,2016-02-18 16:09:16,Stephen Blott,Fix typo in README.md.,False
2e23d60acde1d4da62fbd917fe6ce27520ff05d8,2016-02-18 16:07:58,Stephen Blott,Note passNextKey in README.md.,False
f91fb7b9e11095cbb59174601096f0239501f6a0,2016-02-18 15:59:51,Stephen Blott,"Merge pull request #1985 from smblott-github/pass-next-key

New command: Pass next key",True
38509ce26afd1df7288255bfbcae1705f7bf9d86,2016-02-18 13:05:07,Stephen Blott,"PassNextKey; exclude single-character mappings.

Consider:

    map q passNextKey

This works fine in normal mode.  However, in insert mode, when the user
types ""q"" they expect ""q"" to be input.  Any other behaviour would be
pretty weird.

Here, we filter out such mappings before the front end sees them.  So,
with:

    map q passNextKey
    map <c-]> passNextKey

both mappings work in normal mode, but only the second works in insert
mode.  This is probably the behaviour likely to cause least user
confusion.",False
0ddc7a28d17e94296f209d3d8d06357de281e1d1,2016-02-18 13:05:07,Stephen Blott,PassNextKey; minor tweak.,False
251b5885c1fdb0ac8013f228ec383d0c3972d09c,2016-02-18 13:05:07,Stephen Blott,"PassNextKey; fix tests.

Oversight from 116ac2c2a279f8497ffd5396f43ac4fd7fd5de67.",False
201b51e1690bb993aa25a1c11f59afda6eab8747,2016-02-18 13:05:07,Stephen Blott,"PassNextKey; allow multiple mappings.

This allows:
   map a passNextKey
   map b passNextKey

(Previously, we only picked up the first mapping.)",False
02adaa7ad0c7921ebab5752470ff7f773802634c,2016-02-18 13:05:07,Stephen Blott,"PassNextKey; handle pass-next-key in insert mode.

(First ""fully"" functional version.)",False
aaccc059b2cbf47ee4d5290f8cf608b0ab318d92,2016-02-18 13:05:07,Stephen Blott,"PassNextKey; move key parsing to keyboard_utils.coffee.

Previously, key event parsing was embedded in the normal-mode key
handlers.  Here, we move it to a new function (getKeyCharString) in
KeyboardUtils so that it can also be used from elsewhere... In
particular for detecting the pass-next-key key in insertmode.",False
dcc5427b4b3c4a9440675c8443b31dc98fb62fdd,2016-02-18 13:04:30,Stephen Blott,"PassNextKey; store key mapping in settings.

We need the key mapped to passNextKey in the front end so that we can
activate pass-next-key from within insert mode too (without the need to
consult the background page).",False
daa357f1a753fd4c17427f68e0f0c3338e9d668b,2016-02-18 13:04:30,Stephen Blott,"PassNextKey; initial implementation.

This implements a passNextKey command (initially for normal mode only),
as discussed in #1955.",False
8e3ac1867b7577814865bf1cb40d0b865de30b1a,2016-02-16 19:42:16,Stephen Blott,"Merge pull request #1994 from mrmr1993/correct-loop-types-2

Use `for own ... of` instead of `for ... of`",True
56fed2ac6663d99ca03023f3ffa313c51de5fe32,2016-02-16 19:18:20,mrmr1993,Use `for own ... of` instead of `for ... of`,False
ceada9cdf8cb97c35b4871553e3c8b642c4806ef,2016-02-14 13:29:11,Stephen Blott,"Merge pull request #1991 from smblott-github/nuke-some-migrations

Nuke some legacy migration code.",True
54b8957942545b89989a5c8b71238d60be6349e5,2016-02-14 13:26:35,Stephen Blott,"Merge pull request #1993 from smblott-github/filtered-hints-word-split

Split filtered hints on non-word and hint characters.",True
f05712bd4128bbd5d01d0487e026ba9dd11c8bd4,2016-02-14 13:14:39,Stephen Blott,"Split filtered hints on non-word and hint characters.

This affects the scoring system for filtered link hits, and therefore
affects their usability.

Example link text:

    ""We open all day"", say 7Eleven

Previously:

    ""We
    open
    all
    day"",
    say
    7Eleven

With this PR:

    we
    open
    all
    day
    say
    Eleven

Previously: the typed text `we` and `day` would receive poor scores (not
the start of a word, and not a whole word.  Now, these get high scores,
so are more likely to be selected as the active link.  Also, `7Eleven`
cannot be typed (because `7` is a hint character).

With this PR, the typed text `we` `day` now get high scores, as they
should.",False
539a7c37d66524304a5047954443ff522f9b82d1,2016-02-12 21:49:00,Stephen Blott,"Nuke some legacy migration code.

These migrations are at least ten months old (since release).",False
58f9bf87102ce0851bd9ad636b27e190f4a4b496,2016-02-12 12:28:26,Stephen Blott,Note visitPreviousTab command in README.md.,False
973e5eebf2fdec5225c9332e5783dc90f5c720ce,2016-02-12 12:09:14,Stephen Blott,"Merge pull request #1984 from smblott-github/previous-tab

New command: visit previous tab.",True
aabd2068e4ba497c9ad7d237a727121fd573b837,2016-02-11 13:04:36,Stephen Blott,"Merge pull request #1977 from mrmr1993/help-dialog-uicomponent

Move help dialog to a UIComponent",True
2aa6af6d9f1b7394be460d66d34166451f04d2b2,2016-02-11 10:37:04,mrmr1993,Change HelpDialog. to @ for methods inside the HelpDialog object,False
6bd8318fa1a7faf942cd56b8023f2947d84f3123,2016-02-11 10:35:17,mrmr1993,Only load help dialog iframe when the dialog is to be shown,False
2922fdf80f21d36acd12501dd1b3264377a95895,2016-02-11 10:31:50,mrmr1993,Add a comment explaining why HelpDialog has seemingly redundant fields,False
9a7456334fca81dff41fea6a2701365806f6c3b3,2016-02-11 10:24:55,mrmr1993,"Show vomnibar above the help dialog, remove an unnecessary CSS rule",False
2f73ad6c7357c9a7105e99a929991df735efc96e,2016-02-11 10:19:13,mrmr1993,Tidy up detection for the current page and context belonging to us,False
1d809afe18d8638b899a1016d9cca0ccc4a32253,2016-02-10 11:56:55,Stephen Blott,"BgUtils; two fixes...

- handle case where there's only one tab
- also focus the selected tab's window",False
60d33d20026cdcdd0c4ecef20410d38341c86633,2016-02-09 21:25:52,Stephen Blott,"BgUtils; implement visitPreviousTab.

Implements visitPreviousTab (as discussed in #1955).",False
4ada22e85dcd061fa806a5fe72a9dc3f1cfe0442,2016-02-09 21:01:09,Stephen Blott,"BgUtils; move tabRecency to bg_tiles.coffee.

Certain background-page utilities are actually shared, and are therefore
best placed in place that reflects that.

Here, tabRecency is moved to the new gb_utils.coffee in preparation for
implementing a go-to-previous-tab command.  In particular, it is no
longer appropriate that tabRecency be embedded within the completion
code.

logMessage() from main.coffee is also a candidate for moving to
bg_utils.coffee.",False
ffafb533a3715546a5d2d2e8b960323b1f3fc03a,2016-02-06 04:02:07,mrmr1993,Stop options page link from blurring the help dialog iframe,False
b6a0cc82d138dd67a77d8e3298c6f56362e729be,2016-02-04 13:24:47,Stephen Blott,"Revert ""Tweaks to #1966.""

This reverts commit 4874362d8f14d2cdf712a4c01ac756f2dd6f6e4c.",False
4874362d8f14d2cdf712a4c01ac756f2dd6f6e4c,2016-02-04 12:39:48,Stephen Blott,Tweaks to #1966.,False
c6de959f24f0adf3d335379bbb4dee43f1ead864,2016-02-03 21:24:38,mrmr1993,Hide help dialog when clicking outside of it,False
31aa6c37794872b9341d8a30f17e72cda373ba59,2016-02-03 21:16:24,mrmr1993,Fix closing the help dialog,False
7be92c43981bf64869f100c6a8b4a60ba0073264,2016-02-03 21:07:51,mrmr1993,Prevent nested help dialog iframes,False
acb0c7010d345a3e4918c4aa33eb1d2bf72cf8da,2016-02-03 20:53:02,mrmr1993,Move help dialog into an iframe,False
674990c07422a61a702f14bfdaa8b3d2f3117f1b,2016-02-03 19:42:27,mrmr1993,Move toggleHelpDialog to HelpDialog.toggle,False
d65d33ce7f25c7a71bbb2dc15b161e081014ae42,2016-02-03 19:40:52,mrmr1993,Move frameId check from toggleHelpDialog to its message listener,False
285d400ecbfd8f71e1c5db329bad8d86a320c499,2016-02-03 19:39:04,mrmr1993,Move isShowingHelpDialog to HelpDialog.showing,False
466f2f6af092995b623e9b6f9f5a85ab767911c6,2016-02-03 10:18:41,mrmr1993,Rename VimiumHelpDialog to HelpDialog,False
22db0d6191d1dba42b206327d1f1d58323314199,2016-02-03 09:44:01,mrmr1993,Remove redundant functions show/hideHelpDialog,False
fe71d59bcdedf970d5b6eaaf206b85175b82f33f,2016-02-03 09:36:54,mrmr1993,"Show/hide advanced commands with CSS class, other tidying",False
ce5300b88a968104231ffa679e7f71da320de1fa,2016-02-03 09:19:06,mrmr1993,Update only help dialog contents when showing,False
a25b2b948e5b714b1c0d80f03ec5638d7607fe27,2016-02-03 08:50:05,mrmr1993,Use <span>s as placeholders in help_dialog.html,False
559666229c87ed6668a8182d5793fa03b81b53bc,2016-02-03 08:42:58,mrmr1993,"Store help dialog injected strings together, inject all at once",False
f9561276204ea8b3770600cfd2f7b268e28d8717,2016-02-03 08:34:56,mrmr1993,Restructure VimiumHelpDialog so show and init have appropriate code,False
94979f8e6b7f5efc51b1bcc380bf0f4fbcb6dfb8,2016-02-03 08:24:35,mrmr1993,Move help dialog hide code into VimiumHelpDialog.hide,False
09e0570aeaf9a6d22a14f452206465a1db4bf3bd,2016-02-03 08:21:45,mrmr1993,Move remaining help dialog show code into VimiumHelpDialog.show,False
21c283fb773bb17c631504b2d2ad2f2bbbb1c723,2016-02-03 08:20:29,mrmr1993,Move help dialog setup to VimiumHelpDialog.init,False
b7811c596f77afb2d61dbd53e7bbbacf165285a9,2016-02-03 08:16:40,mrmr1993,Simple cosmetic changes to VimiumHelpDialog,False
a30f8735634f9b6e34c1f1ad6d06ec520907da43,2016-02-03 08:01:45,mrmr1993,Move VimiumHelpDialog out of showHelpDialog,False
14acee10d72e2d7181dc02d8db093a3a8f31877d,2016-02-01 13:26:07,Stephen Blott,Not bug fixes in README.md.,False
158091e943fc1690b4a3059cbde17d9d57a22d84,2016-02-01 13:22:23,Stephen Blott,Note  in README.md,False
0d45a75ddf36fefe738f5bcd7e2220c25ae13fac,2016-02-01 12:02:12,Stephen Blott,Fix typo in README.md.,False
e4bc2547d929541f46bf526b26cf4ac3ec3a9c2e,2016-02-01 12:01:00,Stephen Blott,Use a count with link hints; update README.md.,False
fc9ac71d78ecfb2dd33baa649e8971a98518f943,2016-02-01 11:57:37,Stephen Blott,"Merge pull request #1963 from smblott-github/link-hints-with-count

Link hints with count",True
b5cb14171b3dbd48ebb213654f2758781d7f127c,2016-02-01 11:54:17,Stephen Blott,Use a count with link hints; better comment.,False
da006481be45d58972982aac44d372450204e6fa,2016-02-01 11:27:27,Stephen Blott,"Use a count with link hints; exit on Backspace.

Normally, `Backspace` exits hints mode.  It should exit hint mode with a
count too.",False
8fdc87e4079975cf2a31fc4b60afb897262c525c,2016-02-01 11:07:16,Stephen Blott,"Merge pull request #1962 from smblott-github/focus-input-fix-visual-indicator

Fix visual indicator for `focusInput()`.",True
aaf9e183db8cda326daa1ae3da1992caa69a427b,2016-02-01 10:53:03,Stephen Blott,Focus input: use Rect.copy element.getBoundingClientRect().,False
d3f83fbe03d80d77f20d364f7b5e6e52260f516f,2016-01-31 22:34:52,Stephen Blott,"Use a count with link hints; working w/ Escape.

With a count, link hints now exit on `Escape`.",False
541dadb2872690876c3ca7c79d567881558327e2,2016-01-31 22:27:07,Stephen Blott,Pass arguments to modes' onExit handlers.,False
63e2387853d69b39454e71ec8006d2b512e86248,2016-01-31 22:05:26,Stephen Blott,"Fix visual indicator for `focusInput()`.

Currently, if an input is only partially in the view port, then the page
may scroll when it is focused and the overlays for `focusInput()` are
wonky.  See #1257.

Here, we draw the overlay around the *entire* input, instead of just
around the visible part.  Being partially visible therefore is no longer
relevant.

Fixes #1257.
Closes #1258.",False
b14082d0021830c5359e7fc5f81175941e9319ad,2016-01-31 21:10:36,Stephen Blott,Remove code omitted from 68a39707817ab8693e1ddd9381611c0bfb46ebaa.,False
aad03c6d834d81d52c99d62f77fa87d0e5b3384f,2016-01-31 20:56:46,Stephen Blott,"Use a count with link hints.

Pass a count to link-hint commands, and the link-hint mode is started that many times (except ""with queue"").

This resolves the same issue as #1291.  However, this:

- does not require re-basing (which is no biggie), and
- keeps all of the count-handling logic (apart from plumbing) in one
  place, in `LinkHints.activateMode()`.  The link-hints mode itself does
  not know anything about count handling.

Serious bug:

- Using `Escape` to exit does not cancel the repeat!

Fixes #1289.
Closes #1291.",False
8f54de210ebc1109cf9a82eae14296667a37f751,2016-01-31 20:01:37,Stephen Blott,Merge branch 'goToLine',True
d0371a08fd667c31d2681473a8c4e6c8eca4b6ef,2016-01-31 19:55:42,Stephen Blott,"Fix oversight in 7f3ae1ffcf3185392cf30a62f4b83474b68f66cc.

One line was unintentionally deleted.",False
d16c7c52ef12debbde5538a353f683be845e8847,2016-01-31 18:40:39,Stephen Blott,"Merge pull request #1958 from smblott-github/logging-page

Add a logging page...",True
72f76a4ef22b06e076cf631b8e0c3ad5cc3ccfbd,2016-01-31 18:13:10,Stephen Blott,"Merge pull request #1961 from smblott-github/remove-edit-mode

Wholly remove edit-mode code.",True
68a39707817ab8693e1ddd9381611c0bfb46ebaa,2016-01-31 18:10:04,Stephen Blott,"Wholly remove edit-mode code.

I am now of the opinion that we should not do this within Vimium, as:

- better solutions exist externally, and
- it's better to not have to maintain this.",False
1f8abb98a3750a00ee16aac34f81de27413f1816,2016-01-31 17:10:30,Stephen Blott,"Merge pull request #1960 from smblott-github/link-hints-better-score-shorter-texts

Better scoring for filtered hints.",True
4a65357111554d607d89a3ad8698342177887fed,2016-01-31 17:03:29,Stephen Blott,"Better scoring for filtered hints.

It is often the case that an encosing element (parent) and a child are
both clickable, and both contain the same text.  In this case, it is
usually better to pick the child.

So, here, we dampen down the score of elements with longer texts.",False
c2e55bdcbaabb6dccf76feafed023960c60b1854,2016-01-31 14:20:27,Stephen Blott,"Merge pull request #1908 from smblott-github/fix-ctrl-escape

For Ctrl-[, also require NOT Alt",True
eba184604678dbc11fffa04c8fe05ff537a50e36,2016-01-31 13:09:04,Stephen Blott,"Add a basic log page; tweaks.

This tweaks @mrmr1993's logging ideas discussed in #1629:

- Do not generate log entries from the logging page itself.
- Use the logger for *all* logging (including from `commands.coffee`, and from `bgLog`).

@mrmr1993's original idea is 91fb337c9d92f6291ef42c55c4d29ca35b710203.",False
91fb337c9d92f6291ef42c55c4d29ca35b710203,2016-01-30 18:37:14,mrmr1993,Add a basic log page,False
7f3ae1ffcf3185392cf30a62f4b83474b68f66cc,2016-01-30 17:10:43,mrmr1993,Add number modifier to `gg' scrollToTop command,False
c3373252db73430ec466eb0b81a16a5953975e19,2016-01-30 16:32:14,Stephen Blott,"Merge pull request #1949 from smblott-github/simpler-hint-string

Simplify hint string generation",True
5e65d6bb14c86be2cac95e6d7b61a0fbde1c76cc,2016-01-29 13:41:02,Stephen Blott,Simplify hint-string generation; tweaks.,False
d6a7ea0094f8071f1785539ccd167ed371bd3bb9,2016-01-29 13:14:13,Stephen Blott,Simplify hint-string generation; filtered hints.,False
a65ca68a0011fd8f9ab1282db8e85476633c0956,2016-01-29 12:00:32,Stephen Blott,"Revert ""Enable edit mode.""

This reverts commit e975633f3ee8da9e01c332b2dcdb8422d5f941d8.",False
811b3bb0280a624b6a3e17c0199ec78a1aef7e07,2016-01-28 22:36:43,Stephen Blott,Simplify hint-string generation; fix tests.,False
4c6c3210639bcf23f33b419963d930743062811a,2016-01-28 22:29:46,Stephen Blott,Simplify hint-string generation; simplification.,False
75463367b337bd600e9c8a9e4d56ca06da341527,2016-01-28 22:07:41,Stephen Blott,Simplify hint-string generation; tweaks.,False
b586d9dea17496bcedee37320841020592db35bd,2016-01-28 21:51:44,Stephen Blott,Simplify hint-string generation,False
dae75d47a6662d6a65391215c2998b705942bf10,2016-01-28 18:10:38,Stephen Blott,"Merge pull request #1942 from smblott-github/enable-edit-mode

Enable edit mode.",True
34e2fe6fd53d32b0f4b2f6463cea25ae4ad24927,2016-01-28 18:10:27,Stephen Blott,"Merge pull request #1943 from smblott-github/do-not-move-selection-in-textareas

Disable position-at-end in text areas.",True
f83ef9ff332e37b8e12d8ca608b1e193003669e1,2016-01-26 21:09:59,Stephen Blott,"Collapse selection on exiting visual mode.

This applies only to the case where visual mode is run under edit mode.

Previously, we were leaving the selection in place ... which is weird
and not vim-like.",False
a3a8ede00fa1405135d519dc0015e65953318a2c,2016-01-26 21:01:28,Stephen Blott,"Disable position-at-end in text areas.

When we `simulateSelect` an input and the selection is at the start, we
move it to the end.  This works well for single-line inputs.  However,
the UX is *bad* for multiline inputs (such as text areas), and doubly so
if the end of the input happens to be out of the viewport.

This commit simply disables the repositioning of the selection within
text areas.",False
e975633f3ee8da9e01c332b2dcdb8422d5f941d8,2016-01-26 19:49:32,Stephen Blott,"Enable edit mode.

This re-enables edit-mode (`gv`).  The code for this has been present in
`master` for quite some time, but has been disabled.",False
adafa5e8546627e993da6d03b59a27fd4a9162b7,2016-01-26 19:45:48,Stephen Blott,"Merge pull request #1941 from smblott-github/temp-01

Remove ""beta"" label from visual-mode commands.",True
3e6fbe825c2c5e04a94b545f81f21a7f99faca74,2016-01-26 19:44:22,Stephen Blott,"Remove ""beta"" label from visual-mode commands.

These seem to be working fine, we can commit to them.",False
3286686b695918c315604cb6568826c4026c7693,2016-01-19 12:00:42,Stephen Blott,"Merge pull request #1934 from georgemillo/patch-1

Spelling fixes",True
c16f60eb08619d20e13d8cf9344371d81c1bfcab,2016-01-19 02:55:03,George Millo,Spelling fixes,False
c83d07f18a6a5a10f1f070e3d95ffe9ab10e4b03,2016-01-13 18:37:44,Stephen Blott,"Merge pull request #1932 from brianvanburken/update-browser-action-icons

Update browser action icons",True
51abe911e245624e5f463dfdbb120c33d7dc7a64,2016-01-10 23:43:36,Brian van Burken,Optimised icons.,False
fbb8d38bdaeb4fe61bb16f793c13783e7d3e6c3d,2016-01-10 23:30:56,Brian van Burken,Improved sharpness of browser action icons.,False
01ea7752d8a7cfc91be0ba4234cd92f202706228,2016-01-10 12:56:24,Stephen Blott,Note fix for #1911 in README.,False
477df24baf583b4edddfa1445b8470bb011b33ba,2016-01-10 12:54:39,Stephen Blott,"Merge pull request #1930 from smblott-github/fix-endless-scrolling

Ensure hint keyup handler is always removed, fix endless scrolling",True
acfa129451afbf32dbcad4bad902085e39e60842,2016-01-09 14:07:54,Stephen Blott,"Ensure hint handler is always removed.

For some (unknown) reason, we do not receive the keyup event for Shift
when activating link hints.  Consequently, we are not correctly removing
the keyup handler.  And that handler is blocking subsequent keyup
events, which has the effect of endless scrolling (because the scroller
relies on keyup events to stop scrolling).

Here, we correcttly remove the keyup handler when link-hints mode exits.

Fixes #1911.",False
cd2aff1a9f787c3def235831eae88e181c8f7f3e,2016-01-02 12:28:41,Stephen Blott,"Merge pull request #1922 from jdpopkin/update_contributing

Update dependencies in CONTRIBUTING",True
