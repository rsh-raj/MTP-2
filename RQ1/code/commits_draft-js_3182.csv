Hash,Date,Author,Message,IsMerge
afdb5c3177c13fd26cb0abbdc439488f3e21b73b,2022-12-14 20:46:46,Jan Kassens,"Revert D41973343: replace require ReactDOM with ReactDOMLegacy_DEPRECATED

Differential Revision:
D41973343 (https://github.com/facebook/draft-js/commit/ea485ccfcdd5d8317f37a58f79afba02b56895c5)

Original commit changeset: 8203c6074d1d

Original Phabricator Diff: D41973343 (https://github.com/facebook/draft-js/commit/ea485ccfcdd5d8317f37a58f79afba02b56895c5)

fbshipit-source-id: 42166e20fe787973fdf4397c6903b6e63f485cad",False
bc8c486104c3f9a66064d793e8002cc073a9fb7f,2022-12-14 04:22:04,Sam Zhou,"Add annotations to break type cycles in www root

Summary:
Faecbook:

Add explicit annotations to break type cycles as required for Flow's Local Type Inference project. This codemod prepares the codebase to match Flow's new typechecking algorithm. The new algorithm will make Flow more reliable and predictable.

Details:
- Codemod script: `./scripts/typedjs/flow/runner lti/annotate_cycles .`
- Local Type Inference announcement: [post](https://fb.workplace.com/groups/flowlang/posts/788206301785035)
- Support group: [Flow Support](https://fb.workplace.com/groups/flow)

Codemodded paths:
- ``

drop-conflicts
bypass-lint

Reviewed By: jbrown215

Differential Revision: D41980338

fbshipit-source-id: b4101ac694cdac606344c9054a13b97eca1c73cf",False
ea485ccfcdd5d8317f37a58f79afba02b56895c5,2022-12-13 20:21:48,Jan Kassens,"replace require ReactDOM with ReactDOMLegacy_DEPRECATED

Summary:
Part of the plan to free up the `ReactDOM` name for the current modern React version under `ReactDOMComet` (which isn't Comet exclusive).

See [React FYI post](https://fb.workplace.com/groups/react.fyi/posts/4411697998840538) for more context.

Produced using this codemod using:

1. apply D41973346 to consider `require`s.
2. rename `ReactDOM` to `ReactDOMLegacy_DEPRECATED` for imports/requires and the local binding using: `scripts/typedjs/flow/runner codemod local/react/renameImport --from ReactDOM --to ReactDOMLegacy_DEPRECATED html/`
3. fix up some `$FlowFixMe`s that now needed to be moved due to prettier changing line breaks.

drop-conflicts

Reviewed By: alunyov

Differential Revision: D41973343

fbshipit-source-id: 8203c6074d1d0e92cfba038a6391529f0b90c219",False
ed2389eb38807ddef726b1876fa9b8f04da015b7,2022-11-08 07:03:11,Mike Vitousek,"Add explicit annotations to underconstrained implicit instantiations in html/shared

Summary:
Add explicit annotations to underconstrained implicit instantiations as required for Flow's Local Type Inference project. This codemod prepares the codebase to match Flow's new typechecking algorithm. The new algorithm will make Flow more reliable and predictable.

Details:
- Codemod script: `./scripts/typedjs/flow/runner lti/annotate_implicit_instantiations html/shared/ --generalize-maybe true`
- Local Type Inference announcement: [post](https://fb.workplace.com/groups/flowlang/posts/788206301785035)
- Support group: [Flow Support](https://fb.workplace.com/groups/flow)

Codemodded paths:
- `html/shared`

drop-conflicts
bypass-lint

Reviewed By: SamChou19815

Differential Revision: D41103398

fbshipit-source-id: ebb3d33f71689eb8e9aa49695aed152f98b45078",False
ebc2d0f9e534e9040087b86e52fcb33c32d20d9d,2022-11-04 07:47:54,Sam Zhou,"Pre-suppress errors ahead of 0.192.0 release

Summary: Changelog: [Internal]

Reviewed By: mvitousek

Differential Revision: D41010362

fbshipit-source-id: 39e408426e6a1b2a5ce320bbd16dcb1bf2b7fafc",False
e66e9c4811d4fa6dc6b194e91148ea0ef1bff9b1,2022-10-06 03:20:33,Pieter Vanderwerff,"Add explicit annotations to empty arrays in html

Summary:
Add explicit annotations to empty declarations arrays as required for Flow's Local Type Inference project. This codemod prepares the codebase to match Flow's new typechecking algorithm. The new algorithm will make Flow more reliable and predictable.

Details:
- Codemod script: `./scripts/typedjs/flow/runner lti/annotate_arrays html/`
- Local Type Inference announcement: [post](https://fb.workplace.com/groups/flowlang/posts/788206301785035)
- Support group: [Flow Support](https://fb.workplace.com/groups/flow)

Codemodded paths:
- `html`

drop-conflicts
bypass-lint

Reviewed By: SamChou19815

Differential Revision: D40116322

fbshipit-source-id: e3cb3335daa13c64105776f7776a972825aaa751",False
49051495e372f043918c98dddb6903d976300f96,2022-09-24 05:31:34,Baraa Hamodi,"Ensure all CSS files are copyrighted and formatted correctly

Summary:
As the title states, in this diff we ensure that all CSS files have a valid copyright license header and are formatted accordingly using ""format"".

This was done with the following command:

```
rg -tcss -l providesModule | perl baraa.pl
```

Contents of `baraa.pl`:
```
#!/usr/bin/perl

use warnings;
use strict;

while (<>) {
  chomp;
  next unless -f;
  my $filename = $_;

  my $fh;
  open $fh, '<'.$filename or die ""failed to open $filename for reading"";
  my lines = <$fh>;
  close $fh;

  shift lines while scalar(lines) > 0 && $lines[0] !~ /\S/;

  my comment = ();
  if (scalar(lines) > 0 && $lines[0] =~ m[^\s*\/\*]) {
    for(;;) {
      my $line = shift lines;
      my $should_break = 0;
      if ($line =~ m[^([\s\S]*?)\*\/([\s\S]*)$]) {
        $line = $1;
        $should_break = 1;
      }
      $line =~ s[^\s*\/?\**\s*][];
      chomp $line;
      push comment, $line;
      last if $should_break;
    }
  }
  shift comment while scalar(comment) > 0 && $comment[0] !~ /\S/;
  shift comment while scalar(comment) > 0 && $comment[0] =~ m[\bcopyright\b|\(c\)]i;
  my pragmas = ();
  my provides_module = ();
  comment = grep {
    my $res = /^\@/;
    if ($res) {
      if (/^\provide/) {
        push provides_module, $_;
      } else {
        push pragmas, $_;
      }
    }
    !$res
  } comment;

  shift comment while scalar(comment) > 0 && $comment[0] !~ /\S/;
  pop comment while scalar(comment) > 0 && $comment[-1] !~ /\S/;

  printf(""%s: %s\n"", $filename, join(""\n"", comment)) if scalar(comment) > 0;
  die ""Too many provides in $filename"" if scalar(provides_module) > 1;

  shift lines while scalar(lines) > 0 && $lines[0] !~ /\S/;
  print ""$filename is empty\n"" if scalar(lines) == 0;

  unshift lines, ""/**\n"".join("" *\n"", grep {$_ ne ''} map {
    join('', map {/\S/ ? "" * $_\n"" : "" *\n""} @$_)
  } (
    ['(c) Meta Platforms, Inc. and affiliates. Confidential and proprietary.'],
    [comment],
    [provides_module, sort {lc($a) cmp lc($b)} uniq(pragmas, 'format')]
  ))."" */\n\n"";

  open $fh, '>'.$filename or die ""failed to open $filename for writing"";
  print $fh $_ for lines;
  close $fh;
}

sub uniq {
  my res = ();
  my %res = ();
  for (@_) {
    push res, $_ unless $res{$_};
    $res{$_} = 1;
  }
  return res;
}
```

Reviewed By: vjeux

Differential Revision: D39784779

fbshipit-source-id: c0db287dde1846e8fa38101e819cb81f9c4c909c",False
4161b21a63d9167db205cd298f774fedf263ce5a,2022-09-22 14:40:03,CodemodService Bot,"Format JavaScript files with Prettier: scripts/draft-js/__github__/src/util

Reviewed By: mariusschulz

Differential Revision: D39724028

fbshipit-source-id: 27d3996766f3dfb2dea5da6424a366140e9232e1",False
678dacec8b9e647edb16b69ec4e30e25abc0ba4e,2022-09-20 10:43:06,Baraa Hamodi,"Format all CSS files with prettier

Summary:
In this diff, we run all CSS files that have a `provide` syntax through prettier to ensure that all of our CSS code is consistently formatted.

This diff was generated with the following command:
```
rg -tcss -l provide | xargs prettier -w
```

Differential Revision: D39636418

fbshipit-source-id: 405b372d1a887fc72425eff8a3765da242be5af9",False
d6553b923a504dda2d37f3cab95cb5c1f97d1b7c,2022-09-15 20:22:02,Marshall Roch,"upgrade to Flow 0.187.0

Summary: bypass-lint

Reviewed By: samwgoldman

Differential Revision: D39532623

fbshipit-source-id: a410af7922bfb8e181623677c8586363381d3319",False
1cbe517b696f5c57acf68f198c814a8d79b62873,2022-09-09 02:29:44,Mark Edson,"Revert D39352199: Ensure all CSS files are copyrighted and formatted correctly

Differential Revision:
D39352199 (https://github.com/facebook/draft-js/commit/6e1a1d466bcc6d51ad423012c225cf59e24b171a)

Original commit changeset: 0e2ddf169672

Original Phabricator Diff: D39352199 (https://github.com/facebook/draft-js/commit/6e1a1d466bcc6d51ad423012c225cf59e24b171a)

fbshipit-source-id: ae28643ca81df55a2949d75725934e914f650ae0",False
6e1a1d466bcc6d51ad423012c225cf59e24b171a,2022-09-09 00:35:19,Baraa Hamodi,"Ensure all CSS files are copyrighted and formatted correctly

Summary: As the title states, in this diff we ensure that all CSS files have a valid copyright license header and are formatted accordingly using ""format"".

Differential Revision: D39352199

fbshipit-source-id: 0e2ddf169672b33f46e7fc5ca69ea01c6ff6fa83",False
ea2a7679b5203835d6a8b37cf2da0a25d8ccf164,2022-08-29 22:25:52,Dead Code Bot,"html/shared/draft-js/model/modifier/exploration

Reviewed By: msgalenwhite

Differential Revision: D38858284

fbshipit-source-id: d24e0c9a658388ca110486307efb459bc407fef9",False
2e82cc5a741dae997ff8efaced6ff0ab4eb4905e,2022-08-25 02:49:11,Pieter Vanderwerff,"Daily removal of unused Flow suppressions

Reviewed By: evanyeung

Differential Revision: D38975304

fbshipit-source-id: 9b7c8454530c0d78e70f307b2f1b5d4158736ee7",False
98b63c29b99300140e9623806124e8f1efbbe81b,2022-08-02 06:17:34,Nidhi Kadkol,"Remove @emails from non-generated files (91/n)

Summary:
Context - [[quip](https://fb.quip.com/1T2uAglapSkF)]

We are updating the oncall annotation format of all javascript files from  `emails oncall+my_oncall_shortname` to `oncall my_oncall_shortname`.

NOTE: There are other linter errors in some of these files that have not been introduced by this change, they are not being fixed here since they are non-trivial fixes (eg. moving a file to a different path).

To ensure we don't break anything, we are making this update with the following steps:
1. Add 'oncall' annotation format to JSCodegenModule and its generated files
2. Add new linter rule to add the annotation to existing non-codegen files
3. Add the new annotation to existing non-codegen files - D37541172
4. Update www oncall extraction logic and VS Code templates to use the new format - D37862548
5. Remove 'emails' annotation from JSCodegenModule and its generated files - D37963776
6. **(This diff)** Remove old annotation format from existing non-codegen files
7. Consolidate linters rule to ask user to add new annotation to new files

drop-conflicts
ignore-nocommit

Differential Revision: D38292971

fbshipit-source-id: 716de2affb520ae5e33aa9e1a051499c272bcc88",False
9f2638c98c41cb49c99da01c6e38b7d2d57403f1,2022-07-29 00:41:36,Nidhi Kadkol,"Remove @emails from non-generated files (79/n)

Summary:
Context - [[quip](https://fb.quip.com/1T2uAglapSkF)]

We are updating the oncall annotation format of all javascript files from  `emails oncall+my_oncall_shortname` to `oncall my_oncall_shortname`.

NOTE: There are other linter errors in some of these files that have not been introduced by this change, they are not being fixed here since they are non-trivial fixes (eg. moving a file to a different path).

To ensure we don't break anything, we are making this update with the following steps:
1. Add 'oncall' annotation format to JSCodegenModule and its generated files
2. Add new linter rule to add the annotation to existing non-codegen files
3. Add the new annotation to existing non-codegen files - D37541172
4. Update www oncall extraction logic and VS Code templates to use the new format - D37862548
5. Remove 'emails' annotation from JSCodegenModule and its generated files - D37963776
6. **(This diff)** Remove old annotation format from existing non-codegen files
7. Consolidate linters rule to ask user to add new annotation to new files

drop-conflicts

Differential Revision: D38225670

fbshipit-source-id: 723d550f9558aa430913c93a0a93a00542360e98",False
e0dafbc8a8a06076d2a5c198132f8f9dbfcc7124,2022-07-21 15:54:18,Rujin Cao,"Add new annotation format to non-generated files (109/n)

Differential Revision: D38012173

fbshipit-source-id: 4beeabe9a65d7215b2f27e252b265586d6d703bb",False
6a05170a5bc54c6400b23c21d157b80336f1bd2b,2022-07-21 05:57:38,Pieter Vanderwerff,"Add suppressions ahead of the 0.183.0 flow deploy to www

Reviewed By: mroch

Differential Revision: D38016769

fbshipit-source-id: 526a51172c6f26a6fc5f67ce6b4ce79a802a5947",False
d425d05610fbf81e7686ba04c3f9184ab0b89b91,2022-07-19 10:13:43,Rujin Cao,"Fix ESLint complains of //$FlowFixMe

Differential Revision: D37916957

fbshipit-source-id: e6f7acdb42371c7b65e2e4f5ceda7a7554b7e9b9",False
1041469e7b56826b6d1f650cedcae493e3b7585f,2022-07-14 05:45:45,George Zahariev,"Codemod `{...null}` to `{}` in remaining files

Summary:
Now that [exact_empty_objects has been enabled](https://fb.workplace.com/groups/flowlang/posts/1092665251339137), we can codemod `{...null}` to `{}` - they are now equivalent.

1) Run my one-off jscodeshift codemod
2) `scripts/flow/tool update-suppressions .` (as some suppressions move around due to the change)

drop-conflicts

Reviewed By: pieterv

Differential Revision: D37833216

fbshipit-source-id: 3c08dfd0143f0eb5a1677a26f18bd38370963506",False
7b2a6168e651f3a27a0665d43e596d987341b06f,2022-07-01 04:04:50,Nidhi Kadkol,"Add new annotation format to non-generated files (105/n)

Summary:
Context - [[quip](https://fb.quip.com/1T2uAglapSkF)]

We are updating the oncall annotation format of all javascript files from  `emails oncall+my_oncall_shortname` to `oncall my_oncall_shortname`.

NOTE: There are other linter errors in some of these files that have not been introduced by this change, they are not being fixed here since they are non-trivial fixes (eg. moving a file to a different path).

Reference wiki for ESLint - [[wiki](https://www.internalfb.com/intern/wiki/Eslint/Creating_a_Lint_Rule/Writing_a_lint_rule/)]

To ensure we don't break anything, we are making this update with the following steps:
1. Update codegen to add the new annotations to all generated files
2. Update the docblocks for mock static JS generated files
3. Add new linter rule to add the annotation to existing non-codegen files - D36615978
4. **(This diff)** Add the new annotation to existing non-codegen files
5. Update all oncall extraction logic and Ownership Enumeration logic to read the new format
6. Build linter rule to ask user to add new annotation to new files
7. Another round of codemod to add new annotation to existing non-codegen files
8. Remove old annotations and linter rules

drop-conflicts

Reviewed By: bradzacher

Differential Revision: D37540143

fbshipit-source-id: 56a5ae006c4e876d3ae1918ae07e0e6a048eb602",False
70414e8186cff1ac8da3c037e291997cde331f39,2022-06-30 05:43:56,Brad Zacher,"remove (this: any) casts from the codebase

Summary:
it's silly to hide errors by just casting to `any` and forgetting about it.
replace them with suppressions.

reapplication of D37478365 (https://github.com/facebook/draft-js/commit/8417079ac7c005e1f52d889885c2eb7ad4c1d9e5) without the broken code.

Reviewed By: pieterv

Differential Revision: D37530690

fbshipit-source-id: acdb8174b81b0d28550f92996bc84059ed132759",False
16fd8a64c9468b1db4548cd614ad0c29cad34419,2022-06-30 04:46:56,Nidhi Kadkol,"Add new annotation format to non-generated files (103/n)

Summary:
Context - [[quip](https://fb.quip.com/1T2uAglapSkF)]

We are updating the oncall annotation format of all javascript files from  `emails oncall+my_oncall_shortname` to `oncall my_oncall_shortname`.

NOTE: There are other linter errors in some of these files that have not been introduced by this change, they are not being fixed here since they are non-trivial fixes (eg. moving a file to a different path).

Reference wiki for ESLint - [[wiki](https://www.internalfb.com/intern/wiki/Eslint/Creating_a_Lint_Rule/Writing_a_lint_rule/)]

To ensure we don't break anything, we are making this update with the following steps:
1. Update codegen to add the new annotations to all generated files
2. Update the docblocks for mock static JS generated files
3. Add new linter rule to add the annotation to existing non-codegen files - D36615978
4. **(This diff)** Add the new annotation to existing non-codegen files
5. Update all oncall extraction logic and Ownership Enumeration logic to read the new format
6. Build linter rule to ask user to add new annotation to new files
7. Another round of codemod to add new annotation to existing non-codegen files
8. Remove old annotations and linter rules

drop-conflicts
ignore-nocommit

Reviewed By: stanley-shi

Differential Revision: D37465745

fbshipit-source-id: bf04ffe3a8ec9165cf51d0f6007781c2944f6cfa",False
e74da14ee6b41efcdf1698864cde97d974cd0264,2022-06-29 08:06:52,Kyle Minshall,"Revert D37478365: remove (this: any) casts from the codebase

Differential Revision:
D37478365 (https://github.com/facebook/draft-js/commit/8417079ac7c005e1f52d889885c2eb7ad4c1d9e5)

Original commit changeset: 5ea56890fba9

Original Phabricator Diff: D37478365 (https://github.com/facebook/draft-js/commit/8417079ac7c005e1f52d889885c2eb7ad4c1d9e5)

fbshipit-source-id: ae2d122e7385b1c8a2bd3362189a3cd10cc39dc4",False
8417079ac7c005e1f52d889885c2eb7ad4c1d9e5,2022-06-29 06:39:47,Brad Zacher,"remove (this: any) casts from the codebase

Summary:
it's silly to hide errors by just casting to `any` and forgetting about it.
replace them with suppressions.

Reviewed By: pieterv

Differential Revision: D37478365

fbshipit-source-id: 5ea56890fba9fa78e9b47a8b7e868c7e8d862b1a",False
86c009d078cafedb92810514dc7268bb1938fc9b,2022-06-10 21:38:54,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/paste/__mocks__

Reviewed By: mariusschulz

Differential Revision: D37067513

fbshipit-source-id: 8f525ed3c422869d18686c8187a9930f77916c6c",False
35bee2b5da6dc2a440a0680c87811a80373940f2,2022-06-04 00:01:16,Pieter Vanderwerff,"Suppress missing annotations and lock html/shared

Reviewed By: bradzacher

Differential Revision: D36901411

fbshipit-source-id: 1a5452c0171d9b423a5c7a4caf79551fbb1e2717",False
16e3104976bfe2db1109054793e6cb07a2e30c38,2022-06-02 08:20:03,George Zahariev,"Add annotations to empty objects composed of optional properties

Summary:
We are working on making the empty object literal `{}` have the type `{}` - i.e. exact empty object - rather than being unsealed.
Making this change exposes a variety of errors. We can prevent these errors by annotating what we want the type of the empty object to be.

Run a locally built variation of the insert-optional-property codemod, originally written in D30847830
```
flowd codemod insert-optional-property --write --merge-timeout 300 --max-type-size 25 --input-file files
```
Revert files with Flow errors.

drop-conflicts

Reviewed By: SamChou19815

Differential Revision: D36849122

fbshipit-source-id: 055b58ff7a46f7863d0ae53407355084cdc2d936",False
e7bdd5e57ed155ec5d742d9574a24271310b98b0,2022-06-01 06:43:09,Pieter Vanderwerff,"Add LTI annotations to function params in html/shared [manually-modified]

Reviewed By: bradzacher

Differential Revision: D36787905

fbshipit-source-id: b5494ba71ea3e4ed57606f43e6ecbc6a9086aaa3",False
c420bdff8779a3fb679de8d00cacc86e4019433d,2022-05-31 22:37:16,Pieter Vanderwerff,"Add LTI annotations to function params in html/shared

Reviewed By: evanyeung

Differential Revision: D36722664

fbshipit-source-id: f79a94521570699b2d95c016cb542069d3805155",False
5141bc4d1dc752d0a9ce6179dda4f3fa348bffb7,2022-05-30 16:20:20,Marius Schulz,"Replace hyphens by underscores in ownership annotations in JS files

Summary: Replace hyphens by underscores in ownership annotations in JS files.

Differential Revision: D36702735

fbshipit-source-id: 868616619e3ea30219ac7ed2431f4a53551b6a34",False
0f5bb01f0086c6a15a34ea4c3d43fe8293eb6821,2022-05-24 23:44:43,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/modifier

Reviewed By: mariusschulz

Differential Revision: D36630002

fbshipit-source-id: 22e47c6463703ca292265c65ba64d630f6cfc47b",False
9475e38e0eff2cd5fb6b9c672b57bd28aca91c0e,2022-05-24 21:33:28,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/transaction/__tests__

Reviewed By: mariusschulz

Differential Revision: D36630041

fbshipit-source-id: 9097c2ea380815ac4c3a506d9b6d7b2d36fec45e",False
b7e68eb86f2f5ffbdce9478c52abf711281ab53b,2022-05-19 06:21:43,Brad Zacher,"manually fix constrained write errors

Reviewed By: SamChou19815

Differential Revision: D36498232

fbshipit-source-id: ae5bcf0294e245d898011cb4e2c835bf3037e804",False
e1060cd1de4e754812ba48845e4fd752572786bb,2022-05-10 21:31:44,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/entity/__mocks__

Reviewed By: mariusschulz

Differential Revision: D36277876

fbshipit-source-id: cefb193b72e0b59a3cd82685370e634e3f08009e",False
b601113c9839665360334afa2d3e68cd9b7c2404,2022-04-28 21:29:47,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/selection/__tests__

Reviewed By: mariusschulz

Differential Revision: D36000490

fbshipit-source-id: a29e6d5aa9b2ba5b31b13b7680b99ccba408d05a",False
01bc8ec75f36a52ecce2396e2e79ca44818e1f59,2022-04-28 21:28:31,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/keys

Reviewed By: mariusschulz

Differential Revision: D36000598

fbshipit-source-id: 2b11e78a493b2b273bcec3d7a39240f2bf016ddc",False
043e5c9ddf3e31016b16e784b34c560cb2404084,2022-04-28 21:28:21,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/contents

Reviewed By: mariusschulz

Differential Revision: D36001709

fbshipit-source-id: 6184bfcad57dbb2be04adec947ec5ef2548b0f70",False
074e8cbc1c4104be7d6858ddaf6678e41c90d09b,2022-04-28 17:17:33,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/encoding

Reviewed By: mariusschulz

Differential Revision: D36001963

fbshipit-source-id: d812e2c4a93777d64ddfb40f0a8c21705492d28a",False
4a13ca40d19a669c4c1c7ae4bb6d72f48e0949a6,2022-04-20 21:41:02,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/handlers/edit/commands/__tests__

Reviewed By: mariusschulz

Differential Revision: D35714598

fbshipit-source-id: e8d1b7ae75e34d5dc8c8d932c2292167be8cc185",False
6d88691e44f39040f1c660dd1da816977b6c5e8f,2022-04-19 07:53:13,Pieter Vanderwerff,"Land suppressions to `html/js/mobile` root ahead of enabling constrained writes

Reviewed By: mvitousek

Differential Revision: D35721679

fbshipit-source-id: 0efa4d5e0f168e17dc4bbb4c3da661a404b23ec4",False
5b508f9e44e3a13438261c4d907d1a6dd8b72951,2022-04-13 22:53:04,Paul O’Shannessy,"Upgrade fbjs (#3135)

Summary:
This gets past a couple potential security issues with transitive
dependencies. This is effectively a no-op at this point.

The node-fetch change is not important, Draft doesn't make use of it.

The ua-parser-js change is relevant, however the vulnerable version has
been yanked from npm and fbjs already had an open enough range in its
dependency that people would have gotten upgraded without us needing to
explicitly upgrade fbjs.

Pull Request resolved: https://github.com/facebook/draft-js/pull/3135

Reviewed By: thegreatercurve

Differential Revision: D35600873

Pulled By: zpao

fbshipit-source-id: ac90745293f5c939112b0ab319ad5662a78a2cc8",False
145dcf6724353fbd3264ae2ac2223c89ba858941,2022-04-13 22:53:04,Paul O’Shannessy,"Update mappings to handle lowercase react properly (#3133)

Summary:
This should fix the build.

Pull Request resolved: https://github.com/facebook/draft-js/pull/3133

Reviewed By: thegreatercurve

Differential Revision: D35600867

Pulled By: zpao

fbshipit-source-id: 79284a9db7873da8d9741614342ec229de63e268",False
cb4c74425522025134d4012d19e83e240fcf716c,2022-04-13 22:53:04,Paul O’Shannessy,"Add basic CI sanity checks (#3134)

Summary: Pull Request resolved: https://github.com/facebook/draft-js/pull/3134

Reviewed By: thegreatercurve

Differential Revision: D35600839

Pulled By: zpao

fbshipit-source-id: 5297cf83d5312456894495eb3be9af2a694f7f8d",False
d327fac6a3af73d4a029893891b7643bd822a5ac,2022-04-13 22:28:19,John Flockton,"Update overall project status in README (#3136)

Summary:
Draft.js has been internally unmaintained at Meta for a while. Instead, we've been building and migrating to our replacement text editing framework, Lexical.

This PR marks Draft.js as unmaintained for external users.

Pull Request resolved: https://github.com/facebook/draft-js/pull/3136

Reviewed By: tylerjbainbridge, acywatson

Differential Revision: D35609270

Pulled By: thegreatercurve

fbshipit-source-id: 2bbfc60024fbd49afad811c5baa2f005803483fd",False
6dd8e2cb2020d7127cc1b14eb40b4a23afffc7a1,2022-04-13 21:31:34,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/decorators

Reviewed By: mariusschulz

Differential Revision: D35463387

fbshipit-source-id: ecabf365929e4942a1b8117f83a24fae899de0e6",False
519bec8cbbe115d0a2751bcd6f12eeb05dedd9bb,2022-04-13 21:30:28,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/encoding/__tests__

Reviewed By: zpao

Differential Revision: D35464150

fbshipit-source-id: 6193b6bad14850b5c3a4b54f2fd9e1293f252336",False
c3bbb528edc4b5d18b52f942a4f3cff9f85241e8,2022-04-13 21:29:31,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/handlers/composition

Reviewed By: mariusschulz

Differential Revision: D35464082

fbshipit-source-id: 31997f69da153640978148639c72690036d7269b",False
74e7c3af433a1e21c070c9cd309b64fa1525fdfe,2022-04-13 06:22:26,Pieter Vanderwerff,"Add annotations to unannotated variable declarations in html/shared [manually-modified]

Reviewed By: evanyeung

Differential Revision: D35587500

fbshipit-source-id: b6277f8bd07de376d6ea4312ed9f6c44d5f2f94a",False
02df1f761f4cad61eebf5707c086357a8fcf8a89,2022-04-06 02:09:28,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/selection

Reviewed By: mariusschulz

Differential Revision: D35394007

fbshipit-source-id: 58deed82c0b8238d9162ead282da7271f28de379",False
2196a4d356288ccfa19ccc814d1ca3cccffe54fe,2022-03-31 22:08:35,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/transaction

Reviewed By: mariusschulz

Differential Revision: D35246893

fbshipit-source-id: 02827603507a3bba359d140685bf38ac18647f67",False
d1245d2dca8f6791d2f3983c735f780afe56da10,2022-03-31 21:55:43,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/handlers/drag

Reviewed By: mariusschulz

Differential Revision: D35246875

fbshipit-source-id: f2e7a00c8a2e9602bec91b9356e9aabad2926e63",False
46801ffb63d068c1adf9a6c4b0a1a98ba790a0c2,2022-03-31 21:16:14,CodemodService Bot,"Autofix ESLint Rule fb-www/order-requires: html/shared/draft-js/model/transaction

Reviewed By: mariusschulz

Differential Revision: D35247624

fbshipit-source-id: a5b5251e91c552fb010f4997d52e7c053ace77e7",False
c730e400008d085ea4a1dab93f7f2e38c320ff5c,2022-03-12 01:19:55,Pieter Vanderwerff,"Add annotations to unannotated variable declarations in html

Summary:
Add annotations to unannotated variable declarations with multiple conflicting assignments as required for Flow's Local Type Inference project. This codemod prepares the codebase to match Flow's new typechecking algorithm. The new algorithm will make Flow more reliable and predicatable.

Details:
- Codemod script: `./scripts/typedjs/flow/runner lti/annotate_declarations html --preserve-literals never --generalize-maybe --submit`
- Announcement: [post](https://fb.workplace.com/groups/flowlang/posts/938775013394829)
- Wiki: [Unannotated variable types](https://www.internalfb.com/intern/wiki/Flow/unannotated-variables/)
- Support group: [Flow Support](https://fb.workplace.com/groups/flow)

drop-conflicts
bypass-lint

Reviewed By: bradzacher

Differential Revision: D34824341

fbshipit-source-id: 386022489c75f823dfff10901870df1d6f371c70",False
33b3b07f00ac43780b860559fe0740fc74923728,2022-03-04 23:07:41,Dmitry Vinnik,Adding social banner (#3119),False
7b9ad0694266bbe533a3621c043c80f82ce8f075,2022-02-24 23:40:17,Dmitry Vinnik,Removing banner (#3116),False
ab674ec0ab2404df58c55212d89acd975a248f5c,2022-02-24 01:50:24,Dmitry Vinnik,"Adding eli5 video to the home page (#3115)

Summary:
*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request, and delete these instructions.

Thanks for contributing to Draft.js!

 ---

Here at Meta Open Source, we've been creating short-form videos to explain Meta OSS projects in the simplest terms possible. We started embedding these videos into project pages as you can see in [Docusaurus home page](https://docusaurus.io/).

[...]

#### Test Plan**
Here is a screenshot  in how it looks:
![image](https://user-images.githubusercontent.com/12485205/154300953-04f2e6d3-e3bd-4e86-a8f2-97cd42f0c35f.png)

[...]

Pull Request resolved: https://github.com/facebook/draft-js/pull/3115

Reviewed By: prontiol

Differential Revision: D34273442

Pulled By: dmitryvinn-fb

fbshipit-source-id: 852d5a3654a5b15a26308f8e80fde1df86bed99f",False
4fd368e86e0acd1bd705e87ad2a81bd4a57f7756,2022-02-10 03:35:45,CodemodService Bot,"Autofix ESLint Rule fb-www/order-requires: html/shared/draft-js/model/modifier/__tests__

Reviewed By: bradzacher

Differential Revision: D34106205

fbshipit-source-id: e093605cc5206623d78b8cb1ce6b945d8bf54db7",False
e9cc83112acb3dbee2c028a51cc3d3fc348cb20f,2022-02-10 03:35:45,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/model/constants

Reviewed By: bradzacher

Differential Revision: D34103825

fbshipit-source-id: 25b983fd0f0e44d164c1e6a9bd1568a8126c37b2",False
447a5a05645082ddd82a42a28d0ccf6ec3827534,2022-02-10 03:35:45,CodemodService Bot,"Autofix ESLint Rule fb-www/format-docblock: html/shared/draft-js/component/handlers/edit/commands

Reviewed By: bradzacher

Differential Revision: D34104401

fbshipit-source-id: 5a9beba5b689247d62d0533708371503123ad1f6",False
d974abb0c2844bf99724aba9448df42a63291e0e,2022-01-15 03:19:53,Brad Zacher,"remove duplicate class members in html/shared + html/shared_core

Summary:
Flow currently allows duplicate members on classes. At runtime the ""last"" member wins out and all previous values for the member are discarded.
This codemod removes duplicate members from classes using the same logic.

Codemod steps:
1) `scripts/typedjs/flow/runner codemod removeDuplicateClassProperties html/shared`.
1) `scripts/typedjs/flow/runner codemod removeDuplicateClassProperties html/shared_core`.
1) manually fix up some cases that couldn't be automatically transformed and some missing signatures.
1) `scripts/flow/tool add-comments --all --comment ""Found when removing duplicate class properties"" .`
1) `scripts/flow/tool remove-comments .`

Reviewed By: evanyeung

Differential Revision: D33572542

fbshipit-source-id: cc365507eb365bbfd073499625ca767ed90e6e79",False
844ca87ac93083fb55fe845cc0ad75829fab6537,2022-01-14 01:05:03,CodemodService Bot,"Format JavaScript files with Prettier: scripts/draft-js/__github__/src/util

Reviewed By: gkz

Differential Revision: D33562470

fbshipit-source-id: 21921b0af67b83b0b8bdf74300785e2ed1eef0de",False
099ca0af11abf729bff9e801d9e811d19b7332f3,2022-01-11 00:20:41,CodemodService Bot,"Format JavaScript files with Prettier: scripts/draft-js/__github__/scripts/jest

Reviewed By: kassens

Differential Revision: D33474087

fbshipit-source-id: 5f9c2d0dcc36515758b26eebc59acefc662e9386",False
c9878f6a4bffd3bc0d97224c19e178c7f6765a9e,2021-12-03 14:26:18,Miorel Palii,"Update copyright comments in JS files (part 55)

Reviewed By: bhamodi

Differential Revision: D32786614

fbshipit-source-id: 0c452365c788381cc29a57249fdc3743c61b574a",False
bf7420c9c60c3124d5fa096c79a5b5b13e011032,2021-11-29 11:07:40,Miorel Palii,"Update copyright comments in JS files (part 13)

Reviewed By: bhamodi

Differential Revision: D32686335

fbshipit-source-id: a0b6f1b26ff95ebe642625109aad34329b4ed7d7",False
684c71fe35c7f591fb15e5801167192e503bcf9c,2021-11-10 01:10:18,CodemodService Bot,"Format JavaScript files with Prettier: scripts/draft-js/__github__/examples/draft-0-10-0/playground/src

Reviewed By: dunnbobcat

Differential Revision: D32096255

fbshipit-source-id: 3c1b4774b3ab1d8e5bc2403052a505a61cd87b24",False
ab63aa700a31af82e47c8d4958fa5ab6b3bc4474,2021-11-09 22:38:27,CodemodService Bot,"Format JavaScript files with Prettier: scripts/draft-js/__github__/src

Differential Revision: D32201648

fbshipit-source-id: f94342845cbe6454bb7ae4f02814e788fb25de9f",False
cf9be24e8b14419143f1f01aabc68ed1be2f95e4,2021-10-15 06:13:05,Brad Zacher,"format codebase for prettier 2.4

Summary: Updating prettier to v2.4.1

Reviewed By: mroch

Differential Revision: D31639228

fbshipit-source-id: 0059650b62032d40f05b6225f196fd9aced0d3d5",False
78b47a599ec72ca042a5c54bba51b736e49d1230,2021-10-15 02:00:05,Chris Barker,"Suppress JS false positives in 8 files

Summary: Suppress false positive lint issues

Reviewed By: lowellbander

Differential Revision: D31249283

fbshipit-source-id: 18935afd8467871f4af255a385b7890d5c1a086a",False
b56c0f697405dfb53a4550ced9181ec2f6bfd9af,2021-09-30 23:56:37,Chris Barker,"Suppress JS false positives in 10 files

Summary: Suppress false positive lint issues

Reviewed By: dado3212

Differential Revision: D31248391

fbshipit-source-id: 5b54fbac831e656156a904f9e3ea2125e7a10078",False
6db7ff5adfe1452354dfb98515250ba57a39e9c8,2021-09-21 04:39:34,Daniel Lo Nigro,"Scope Safari hack to just Safari users

Summary:
I'm not sure if this hack is even needed any more (it may have been fixed in a newer Safari version), but it's causing issues when displaying read-only rich text (for example using `<XDSRichTextView >`), where the text is indented by 1px. This is causing alignment issues in my app and breaking screenshot tests for a few components after switching them from `CSUIMarkdownRenderer` to `XDSRichTextView`.

This diff updates the CSS file to only apply the Safari hack when the user is actually using Safari, via the `safari` class we automatically add to the body.

See https://fb.workplace.com/groups/xdsquestions/posts/935346250410978

Reviewed By: agoder

Differential Revision: D31066502

fbshipit-source-id: a3c358f401ea5280e8f7a280c3b28e15e955c699",False
4290ad0070c6f75289914a26ca6ba73ab7212545,2021-09-08 20:04:14,Daniel Sainati,"add annotations to empty indexer objects in www

Summary:
See https://fb.workplace.com/groups/flowlang/permalink/903386663600331/ for context

```
find . -type f | grep ""\.js$"" | grep -Ev ""html/js|html/intern/js|__generated__"" > input
scripts/flow/flow-beta codemod annotate-empty-object-experimental --write --merge-timeout 300 --max-type-size 25 --input-file input
hg commit -m ""[Flow] add annotations to empty indexer objects in www""
hg status -n --change . | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r master
hg status -n --change . | xargs grep -P -l 'lightSyntaxTransform' | xargs hg revert -r master
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/flow-readonly-object"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/order-requires"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/no-duplicate-imports"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/order-requires"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/no-duplicate-imports"":2}' --fix
flow ~/www
scripts/flow/tool add-comments --all ~/www
hg status -n --change . | xargs -P 20 -n 1000 prettier --write --require-pragma
```

Reviewed By: kitttn

Differential Revision: D30782165

fbshipit-source-id: 8b37f97c52c6d8000241e70c8a2bfb483f68cf5f",False
98ddcee19a15286191e7aeb405557ac39f5bb5b0,2021-09-02 03:13:30,Daniel Sainati,"add annotations to empty indexer objects in www

Summary:
See https://fb.workplace.com/groups/flowlang/permalink/903386663600331/ for context

```
find . -type f | grep ""\.js$"" | grep -Ev ""html/js|html/intern/js|__generated__"" > input
scripts/flow/flow-beta codemod annotate-empty-object-experimental --write --merge-timeout 300 --max-type-size 25 --input-file input
hg commit -m ""[Flow] add annotations to empty indexer objects in www""
hg status -n --change . | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r master
hg status -n --change . | xargs grep -P -l 'lightSyntaxTransform' | xargs hg revert -r master
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/flow-readonly-object"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/order-requires"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/no-duplicate-imports"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/order-requires"":2}' --fix
hg status -n --change . | xargs --no-run-if-empty -P 20 -n 1000 ~/www/scripts/bin/eslint --plugin fb-www --rule '{""fb-www/no-duplicate-imports"":2}' --fix
flow ~/www
scripts/flow/tool add-comments --all ~/www
hg status -n --change . | xargs -P 20 -n 1000 prettier --write --require-pragma
```

Reviewed By: mroch

Differential Revision: D30699678

fbshipit-source-id: d165a7bd28b7dd57b60becebde034b634359aecd",False
844990f39be3730ceee2f6db14c5ebd9c2fe7d67,2021-09-01 23:05:31,CodemodService Bot,"Format JavaScript files with Prettier: html/shared/draft-js/model/modifier/__tests__

Reviewed By: gkz

Differential Revision: D30536422

fbshipit-source-id: 09ef88f7e2513e97879098e30267d14569078947",False
de2e2bbea3ec1fc35194ae0341ad4fb80eb247dc,2021-08-27 12:27:52,Jeong Woo Chang,"Rename CometToggle to CometSwitch

Summary:
- Rename `CometToggle` call site to use `CometSwitch` instead
- Remove `CometToggle`

Reviewed By: nmn

Differential Revision: D30581017

fbshipit-source-id: 826eca6344a6bceabe26ca2ec2bedafc307f2ac3",False
b017a495f03348452b224c4af1068150feee6059,2021-08-27 07:41:10,Shalini Pyapali,"- Array -> $ReadOnlyArray

Summary: Multi-step codemod. See task for details.

Differential Revision: D30568948

fbshipit-source-id: 6002ccc9ec73a8618c2cacde92c76b6857b5bd6a",False
0090cc49c027dd69c3ac3530efd407b134381894,2021-08-26 16:02:02,Hassan Elkhatib,"Revert D30562961: Rename CometToggle to CometSwitch

Differential Revision:
D30562961 (https://github.com/facebook/draft-js/commit/d1c0ef830fe4d53a81afa6ab5fd14a3887a26d99)

Original commit changeset: c175e57f6bc8

fbshipit-source-id: 8bf929b7a225e197fd2f29269b82b60e3d444c78",False
d1c0ef830fe4d53a81afa6ab5fd14a3887a26d99,2021-08-26 14:45:58,Jeong Woo Chang,"Rename CometToggle to CometSwitch

Summary:
- Update CometToggle call sites to call CometSwitch
- Remove CometToggle component

Reviewed By: fryn

Differential Revision: D30562961

fbshipit-source-id: c175e57f6bc88e7bf565cf2fbb9202ddcb0f9936",False
75caafb82363b434eb35f9cbf54ed06084c89df3,2021-08-19 23:59:10,Amir Sharif,"Fix prompts with newlines

Summary:
# Facebook

Prompts with newlines never worked, because we only added the last block.
Now they do!

Also, the ContentState file assumes that delimiter is required. In fact, it is not, since 'test'.split(undefined) works fine. I am making it optional. Keep in mind that 'test'.split(nuill) and 'test'.split('') are all different!

Reviewed By: luizpcf

Differential Revision: D30414308

fbshipit-source-id: 3abb7bd9cb6f9afd596cb45f4500bb62b0f2ac34",False
5265ec35bd3df29f4edf5112ef2a72e0dda8e25e,2021-07-26 23:25:35,Evan Yeung,"Remove existential types from html/shared

Summary:
This diff codemods html/shared to remove existential types.

Changelog: [Internal]

Reviewed By: kayhadrin

Differential Revision: D29879975

fbshipit-source-id: c1771cfd56918ccfc7fc808a3cb68f50bf6fa698",False
c9a548c6e3f7a2ff286efe223673d78f052fd710,2021-07-12 22:32:23,Marc Laval,"Back out ""Fix the focus ring of the composer outline""

Summary: The overflow added in D26689495 (https://github.com/facebook/draft-js/commit/92f1003b36d012d96e067cc2b420ef0e78fd19e8) sometimes creates some padding around the editor, and may break some layouts. So reverting.

Reviewed By: willwull

Differential Revision: D29661739

fbshipit-source-id: 56412227f0d41fc9a8edb28f24175b1caa44669b",False
92f1003b36d012d96e067cc2b420ef0e78fd19e8,2021-07-12 17:01:31,Marc Laval,"Fix the focus ring of the composer outline

Summary:
The issue can be reproduced with tools which force the outline ring to show up.

When there are 5 or more lines of text in the chat composer, a scrollbar appears.
The focus ring of the editor moves together with this scrollbar, which creates a very weird visual effect.
This changes fixes that.

Reviewed By: andrewdacenko

Differential Revision: D26689495

fbshipit-source-id: 3fbac77e223ce8ace0025852eb6f0d023bac328c",False
07dc498d08123b5602a5868bdd7f8f3752f71014,2021-07-02 21:27:36,CodemodService Bot,"Autofix ESLint Rule fb-www/flow-exact-by-default-object-types: html/shared/draft-js/component/contents/exploration

Differential Revision: D29535377

fbshipit-source-id: f69547b9f28ca4676c5eac5a6fd608cd0b4dfbc0",False
f12f0dc2f4175f89322f32f142339c6035b45eae,2021-06-24 09:03:44,Pieter Vanderwerff,"Pre-deploy suppressions for the flow v0.154.0 release

Reviewed By: evanyeung

Differential Revision: D29343159

fbshipit-source-id: 798015a522e309696770c9c998b16b494ea94e69",False
66d1e64e57abb1027e27eea159d0faeb07711182,2021-06-18 23:40:54,Martin Duran,"Hides placeholder from SRs; adds aria-label to composer

Summary: Accessibility: Adds option to hide placeholder from screen readers.

Reviewed By: marclaval

Differential Revision: D29077904

fbshipit-source-id: f4175a69dc861860841209833e77042e7811ed58",False
7b3daf3d30831f4fd86c4b3535fcb4ba9f598283,2021-06-18 02:24:17,CodemodService Bot,"Autofix ESLint Rule fb-www/flow-exact-by-default-object-types: html/shared/draft-js/component/base

Reviewed By: steveluscher

Differential Revision: D29189214

fbshipit-source-id: dbca5959db361894f64ef8ff528e7678218c8a37",False
dc709cd7e311a2d5176369803ef7b4224b0d0b7d,2021-06-10 07:23:26,George Zahariev,"Format files in html/{shared,shared_core} that were not properly formatted on master

Summary:
There are a variety of files in WWW on master that aren't formatted with the current Prettier.
From a random sample of me looking at different files, it looks like it's from people running codemods in WWW and forgetting to run Prettier after.

In `html/shared`, `html/shared_core` ran:
```
ag --js -l --ignore node_modules --ignore __generated__ --ignore third-party --ignore third_party '\* format' | xargs ag -l '\* flow' | xargs ag -L 'nocommit|noformat|generated|partially-generated|lightSyntaxTransform|haste-ignore' | xargs -P 42 -n 1000 ~/www/scripts/bin/prettier --config ~/www/.prettierrc --write --loglevel warn
```

drop-conflicts

Reviewed By: pieterv

Differential Revision: D29015110

fbshipit-source-id: b0e16c9345d596898f2225fee2261cf0a4c5167b",False
609edb4998ec1a0f190c9d21152d97f256af2671,2021-06-04 00:12:20,CodemodService Bot,"Format JavaScript files with Prettier: scripts/draft-js/__github__/src/util

Reviewed By: gkz

Differential Revision: D28864356

fbshipit-source-id: 056ebfe0f90350bc4da9352ca98aa4b9d98bef93",False
f39f7ab587c507b0e6159562f70053fa9222bb9e,2021-06-02 20:39:02,CodemodService Bot,"Autofix ESLint Rule object-shorthand: html/shared/draft-js/model/modifier/exploration

Reviewed By: niveditc

Differential Revision: D28771375

fbshipit-source-id: 456b17ce12ff20bd7f4ff3769a23d80971c0d27b",False
74ebc510be96c5d850bde71f5e9f609636fd304f,2021-05-27 20:16:39,Daniel Sainati,"pre-suppress Flow errors ahead of 153 release

Summary:
This pre-suppresses the 153 error diff ahead of its release, since it is large.

This diff was generated by running
```
~/fbsource/fbcode/flow/tool update-suppressions ~/www --bin ~/fbsource/fbcode/flow/facebook/flowd
hg status -n --rev master | xargs -P 20 -n 1000 prettier --write --require-pragma
hg status -n --rev master | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r master
hg status -n --rev master | xargs grep -P -l 'lightSyntaxTransform' | xargs hg revert -r master
arc rebuild
hg st -n | xargs -n 2500 hg commit -m ""[Flow][Codemod] pre-suppress Flow errors ahead of 153 release""
```

bypass-lint
allow_many_files
drop-conflicts

Reviewed By: panagosg7

Differential Revision: D28711953

fbshipit-source-id: c0f2a9c2c117bc127f09595eb17f39afdbb87095",False
fb6a6999d8bab660af08a802afc50f7974be50ba,2021-05-27 03:29:53,CodemodService Bot,"Autofix ESLint Rule fb-www/no-duplicate-imports: html/shared/draft-js/model/immutable

Reviewed By: ezzak

Differential Revision: D28674499

fbshipit-source-id: 541ab9263dbdb459ccd7ad8065e6ff3761fc2a8e",False
a7bcf679004ac7abfce91a8338715cab1348839a,2021-05-27 00:51:52,CodemodService Bot,"Autofix ESLint Rule object-shorthand: html/shared/draft-js/model/transaction

Reviewed By: dunnbobcat

Differential Revision: D28707555

fbshipit-source-id: ea56c13282a9778bf7b9b531faa933633880947e",False
7f86bca283c7d4c4afe9046016f74dc8e419b505,2021-04-28 23:11:07,CodemodService Bot,"Autofix ESLint Rule fb-www/order-requires: html/shared/draft-js/model/transaction

Reviewed By: gkz

Differential Revision: D28054987

fbshipit-source-id: 3186e477c4f6728b7415495f8c2bebf4a5fb2bb7",False
f99fbbcfa1d7acf937438f60efeb715869718781,2021-04-27 19:25:30,CodemodService Bot,"Autofix ESLint Rule object-shorthand: html/shared/draft-js/model/modifier

Reviewed By: niveditc

Differential Revision: D28024557

fbshipit-source-id: 6d1cb993fb7ca5416796071441f7ef37fbf52aaa",False
c1b7053f13c1a9656965f01bb835f848aa3bf699,2021-04-27 03:23:47,Dead Code Bot,"Remove Dead Code in WWW JS

Reviewed By: bradzacher

Differential Revision: D27995961

fbshipit-source-id: b7cb1a948aea8b68bac27b418551d99a0387a30b",False
b6ab1ec841a68394e34e8967a1a8b9c52262affd,2021-04-27 02:24:33,Kevin Chavez,"Remove myself (aykev) from CI emails (#2911)

Summary:
Hello again Facebook! I don't work here anymore, but I never removed my email from the CI builds, so I still sometimes get blasted by these. This diff removes me; since there's no more configured recipients, I just went ahead and removed the whole notifications section from `.travis.yml`. Email notifications, in my experience, were never useful anyway— CI blocks merging and the signal makes it to Phabricator too. That was usually more than enough, and a better medium.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2911

Reviewed By: mrsharpoblunto

Differential Revision: D28007298

Pulled By: adrianadonis

fbshipit-source-id: 86fa0af55eebe54e86dd9939016c018e9a1b35cd",False
8e0680aa8b160560ee313f8a7fac9e3f72aff17c,2021-04-26 19:55:57,CodemodService Bot,"Format JavaScript files with Prettier: html/shared/draft-js/model/modifier/exploration/__tests__

Reviewed By: niveditc

Differential Revision: D27995302

fbshipit-source-id: 56422b4b34027888f1eddcd2259f2cea29fd7346",False
47925368fce5940c82026f0c298cce0e3aff9adc,2021-04-22 22:53:48,CodemodService Bot,"Autofix ESLint Rule fb-www/order-requires: scripts/draft-js/__github__/examples/draft-0-10-0/playground/src

Differential Revision: D27877977

fbshipit-source-id: ab8ab7c758aaf4c61f7ed9e088c533f4616ab819",False
10ca1ad44843e970c4314f85a8f37d26f842ebf9,2021-04-12 23:55:38,Paul O'Shannessy,"Update code of conduct

Summary:
We are updating our code of conduct to include activities outside the project.

https://developers.facebook.com/blog/post/2021/04/12/facebook-open-source-ally/

Reviewed By: bigfootjon

Differential Revision: D27544356

fbshipit-source-id: 32df11fe9ae0ccc6ac1baefe0e695df48450897f",False
79700d70afebe4a086f7e9d44bc623eba0867a4e,2021-04-08 23:40:40,CodemodService Bot,"Autofix ESLint Rule object-shorthand: html/shared/draft-js/model/encoding

Reviewed By: dunnbobcat

Differential Revision: D27499710

fbshipit-source-id: 8547967f26eea05efd2c13f2bebf904eab128d33",False
0dd92761ff53d2c509307d78b21589c80eee591e,2021-04-06 01:32:33,CodemodService Bot,"Autofix ESLint Rule fb-www/order-requires: html/shared/draft-js/component/selection/__tests__

Reviewed By: gkz

Differential Revision: D27500058

fbshipit-source-id: 4b3854ddfad592cfd120216521729a5357ae1981",False
bd48a12d41f58942547a6c58c2a39a5b2bb95b6b,2021-03-22 22:09:11,generatedunixname89002005287564,"Daily removal of unused Flow suppressions

Reviewed By: miorel

Differential Revision: D27185547

fbshipit-source-id: c5de14d3c4fa752f7766d3434ae731e681fc31a5",False
d402383503759e0fb4166f6c551bf03daf84e22c,2021-03-22 22:09:11,Daniel Sainati,"replace object types with interfaces when they appear as the supertype of an interface

Summary: Flow is changing the behavior of object types to no longer be valid supertypes of classes. This replaces object types when they appear as supertypes of classes to be interfaces to avoid errors when this change rolls out.

Reviewed By: pieterv

Differential Revision: D27198604

fbshipit-source-id: 4a384baac1699ace1941930d1a41463ce05cfce8",False
d0171d5bf35d1962d0bda55256f2785e9849872d,2021-03-19 03:40:34,Daniel Sainati,"refactor objects appearing as class supertypes to be interfaces

Summary: Flow is changing the behavior of object types to no longer be valid supertypes of classes. This replaces object types when they appear as supertypes of classes to be interfaces to avoid errors when this change rolls out.

Reviewed By: pieterv

Differential Revision: D27167392

fbshipit-source-id: a1ba819cc4013d79b48d9ae4fe284ac3caf05368",False
47f1179d232b5d4693f710b5393d8e0947923155,2021-03-18 22:22:45,generatedunixname89002005287564,"Format JavaScript files with Prettier: scripts/draft-js/__github__/src/stubs

Reviewed By: lordrecneps

Differential Revision: D26975674

fbshipit-source-id: 521d9a7630618e22edb920f37669adf39f892132",False
1df63b610f3d104be39c2b7878c2af549db4f00d,2021-03-16 16:46:06,Claudio Procida,"Removes claudio's email from Travis CI notifications

Summary: Removes claudio's email from the config for Travis CI notifications of Draft.js. This has caused some noise on my inbox from private forks. While this won't amend the Travis config in those forks, it will prevent noise from future forks.

Differential Revision: D27074576

fbshipit-source-id: 86b6fb71f301019781bd0f002e4d7601d6c1b44f",False
db46938bd0b4fe175928b9d13626f6ced9cb1206,2021-03-16 02:52:54,generatedunixname89002005287564,"Format JavaScript files with Prettier: scripts/draft-js/__github__/src/util

Reviewed By: creedarky

Differential Revision: D26975892

fbshipit-source-id: cee70c968071c7017fe078a1d31636b7174fcf4f",False
ad9390df7e1d861f75a741cf1e6ecc3fe299c9c4,2021-03-10 06:24:03,Pieter Vanderwerff,"Convert requires ""React"" to ""react"" in html/

Reviewed By: Hans-Halverson

Differential Revision: D26905239

fbshipit-source-id: 6a1228675ee0ce517e697f9d25907d2462d83c2e",False
af8cdb8bc5ac910d4e79bae57917da53a32e1508,2021-03-10 03:43:05,generatedunixname89002005287564,"Autofix ESLint Rule object-shorthand: html/shared/draft-js/component/selection

Differential Revision: D26908438

fbshipit-source-id: 775ac846146b55b871d077978ba8728a281c6da1",False
db37abdcaa53f96e600c27dee61e4adee6f01476,2021-03-09 01:38:49,Pieter Vanderwerff,"Convert ""React"" to ""react"" in html/

Reviewed By: Hans-Halverson

Differential Revision: D26835790

fbshipit-source-id: 75275f5b7e8587a0e3fe675f960043c47e1b8422",False
5619346833b67f774ac69afff9354efaa9aa5dff,2021-03-06 01:22:48,generatedunixname89002005287564,"Autofix ESLint Rule fb-www/order-requires: scripts/draft-js/__github__/src

Reviewed By: ezzak

Differential Revision: D26686526

fbshipit-source-id: fdb31a057b3c97b6914e98324ce99f01869891d3",False
d7d186d1ddbb57b3839f04aba035d32048b9dbc4,2021-03-01 16:39:11,Nordine Herrouch,"Give an accessible name to Text box on ‘Create Post’

Reviewed By: marclaval

Differential Revision: D26544231

fbshipit-source-id: b414bd606248fdbce7c5f4b245e42a6cb61d0964",False
99aeb5c6df087d66f7f9cc2e984585a5672425b3,2021-02-19 00:39:40,Pieter Vanderwerff,"Remove unnecessary this in objects (html/shared)

Summary:
Remove uses of `this` in objects that could instead be using the objects var reference. `this` is currently untyped so its unsound and will soon be banned.

Created via:
```
$ ./scripts/typedjs/transform_runner/run -t scripts/flow/codemods/remove_unnecessary_this.js -q ""this\."" html/shared
```

drop-conflicts
bypass-lint

Reviewed By: dsainati1

Differential Revision: D26502933

fbshipit-source-id: 06de11944bcfe1f0625c270ea0694bd9d1c56ce7",False
cfe64c11ecc97d3b74c03fdb496adf112c02adf2,2021-02-18 02:52:55,generatedunixname89002005287564,"Autofix ESLint Rule object-shorthand: html/shared/draft-js/component/handlers/edit/commands

Reviewed By: ezzak

Differential Revision: D26364958

fbshipit-source-id: 87b6b31d8ed8898d3bd555759cc3d9958421086b",False
8f8c22f5e10481b3f8ef057064b7ab2e3e6728a9,2021-02-17 02:09:08,Tyler Bainbridge,"Add getDecorators to CompositeDraftDecorator

Reviewed By: mrkev

Differential Revision: D26432055

fbshipit-source-id: bb20636a2553584ea0a8b305513738dacdc93747",False
834ac26f38c869a5e431370b0594ce1fa917dd94,2021-02-09 20:14:11,Ryan Goldstein,"Don't break the scroll when focusing on a Draft block

Summary: When you call `focus` on the Draft editor, it focuses the contenteditable element where the user actually enters text. On some browsers this moves the viewport around, but there is handily a built-in option to disable this viewport scroll.

Differential Revision: D26262778

fbshipit-source-id: b919cd2c43aae17b7e23f514c2b1c68175abc3b1",False
758c4cafdca525a8439ae7f43d8fef14917a3519,2021-02-09 18:23:24,Kevin Chavez,"Don't jump cursor on browser-executed forward word deletion

Summary:
Fixed the issue brought up in this post:

https://fb.workplace.com/groups/1662633360725440/permalink/2312963885692381/?comment_id=2624165677905532

So here's what happened. We usually intercept keyboard commands and handle them ourselves. Specifically, if a user presses `alt+delete`, we intercept that [here](https://www.internalfb.com/intern/diffusion/WWW/browse/master/html/shared/draft-js/component/utils/getDefaultKeyBinding.js?commit=1003255056&lines=99) and execute `keyCommandDeleteWord`.

akanter here has some custom keybindings set up which delete a word forward with `alt+d`. That's not the `delete` key, so we don't intercept this. We could try and intercept it [here](https://www.internalfb.com/intern/diffusion/WWW/browse/master/html/shared/draft-js/component/utils/getDefaultKeyBinding.js?commit=1003255056&lines=68), but `alt+d` usually inserts delta (“δ”) and we don't want to override whatever OS behaviour the user has.

Instead, on browsers that implement InputEvents, we can check if the action the user took was a forward-word-deletion. We detect deletions by diffing the text we see in the DOM after the input, and assume it's a normal deletion, so we move the caret back by the number of characters that were deleted. If it's a forward deletion, we skip this and just not move the caret.

Reviewed By: akanter

Differential Revision: D26282167

fbshipit-source-id: 9d4deaeb9731072affeb5a3ca41b92b8d8a0533a",False
807df8c482ef1f60957ddd1a085e6f02408ae210,2021-01-28 17:14:39,generatedunixname89002005287564,"Format JavaScript files with Prettier: scripts/draft-js/__github__/examples/draft-0-10-0/playground/src

Reviewed By: claudiopro

Differential Revision: D26097615

fbshipit-source-id: 75d9a8712e3b3dac456880f0f5cdf04cda4f2fc2",False
dc4351e7d6c8fbfb37dfa0a899d26f8bec8981f0,2021-01-08 03:44:39,Vishnu Thiagarajan,"bellow => below

Summary:
Noticed a lint rule with ""below"" misspelled. It's a lot more common than I imagined. Fixing all the low hanging fruit.

Only touching comments. Skipping generated comments. Limiting to hack/js/css.

spelling_is_hard

Reviewed By: claudiopro

Differential Revision: D25808846

fbshipit-source-id: f448b11e2047374180469cd66784a6d06a878f81",False
551bdc0cb1d168c1dacbd21e983e47abd8da3f0e,2021-01-08 00:26:30,Jacob Plachta,"Improve handling of internal pastes

Summary:
Draft.js's default handling of pasted content (`editOnPaste.js`) includes a special case for when it's an internal paste (content copy-pasted from within the same editor). It also supports specifying a custom paste-handling function, which can override the former.

There are legitimate use cases for wanting to specify custom paste handling which only applies to non-internal pastes (or equivalently, for that custom paste handler to receive a flag for whether this is an internal paste, which is what this commit is introducing), due to that default internal paste handling being preferable when possible.

For example, an editor which ordinarily has a custom paste handler (e.g. for formatting the pasted content) might choose to skip that handling for internal pastes.

Reviewed By: mrkev

Differential Revision: D25558780

fbshipit-source-id: bcbf3cd8c12034dedce62930789723bf19b8da93",False
f8b6e13cc98dd350c7570de95e925f44d4395646,2021-01-08 00:09:19,Pieter Vanderwerff,"Land suppressions for 0.142.0 release to www

Summary:
This change contains the suppressions for the up coming v0.142.0 Flow release.

The new suppressions are a result the following changes:
* Disallow flowing functions or inexact objects to indexed objects to improve object soundness. This can cause errors if you are passing a function or inexact objects when an indexed object is expected.
* Flow now processes imports before checking the body of a file. In some rare cases this can expose previously skipped errors due to the processing order.

Reviewed By: Hans-Halverson

Differential Revision: D25820452

fbshipit-source-id: b3ef8b134af413115297e2fec5a2e2ce1651957e",False
effdd3a66176adc61ed1ff321009a7b2741ea5ef,2020-12-18 00:59:26,Laura González,"Paste alt text for images if available, instead of camera emoji

Summary:
Draft pastes images as a camera emoji inline and generates an entity for them. I'm proposing we instead paste the alt text for the image if it's available.

Generally, clients are expected to transform this entity to support images via plugins. This functionality remains untouched since the entity grows to the necessary width

# Why?

This makes pasting emojis from a facebook post into a composer simply work. Alternatives to this involve client side plugins + server side handling to turn these images back into the original emoji. Doable but really feels like the text editor should send the right assets.

More ideally, we would wanna control this behavior via a plugin, but the current architecture makes this nontrivial

# Extra why?

We get a very big win here but this is generally a better experience IMO, for default editors this is a better blank state than a camera icon, which is generally a source of confusion. As a convention, at least on mac, pasting images as plain text will replace the images with the alt text, so there's a precedent for this being the right behavior

Reviewed By: trueadm, voideanvalue

Differential Revision: D25615752

fbshipit-source-id: e970c51d76d64af9c3cd8c60cdccfca4cf9313f7",False
8815d63e58abb06ccfe9b1dc8ca6178e8f3d80d1,2020-12-15 08:40:40,Kevin Chavez,"Update dependencies in /examples (#2757)

Summary:
Not much to say. Let's keep these updated ¯\_(ツ)_/¯

Pull Request resolved: https://github.com/facebook/draft-js/pull/2757

Test Plan: Built/used the examples.

Reviewed By: joelseq

Differential Revision: D25541447

Pulled By: mrkev

fbshipit-source-id: eceec8153b7c6c84503e82b30da02fe0357dcd19",False
11aac1c5ad9214bf07685c311b044d874909d795,2020-12-08 16:38:20,Kevin Chavez,"Don't expose .isEmpty()

Summary:
Continuing on the quest of making `ContentState`'s API better, let's remove `isEmpty()`. `ContentState` is an Immutable `Record`, and this function will return true if the record is empty. That is, if `ContentState` has no keys, not if it represents an empty text box.

This is useless of course because `ContentState` should never be ""an empty object""— if it ever is we'd find out because everything Draft.js related would pretty much break, but it shouldn't given the methods we provide to build it.

Someone seems to have gotten confused by this and used it to check that if the text field had no text, so I removed that call. This diff will avoid further confusion.

Differential Revision: D25285932

fbshipit-source-id: 976697f32b181032c86fb1141b68e343679be8ac",False
a159093d81bcc2d237f88042c93760bd63fd18e2,2020-12-08 16:38:19,Kevin Chavez,"Migrate ContentState to only safe getters

Summary:
Out with the `.get('some_random_string')`, in with the `.getSelectionBefore()`, `.getBlockMap()`, etc. Let's not allow this anymore at the flow level.

This acutally found a bug, where `ReactComposerPrefillMentionsInput`. Other than that all call-sites seem to be doing this right already.

Differential Revision: D25285395

fbshipit-source-id: e25591e78e807ffbfa49a0e40000b44c493b687d",False
2eaab782d77b1b071c9bf3d78bbd8aad9e715c36,2020-12-08 16:38:19,Kevin Chavez,"Migrate ContentState to safer setter API 3/3

Summary:
Currently, to set the fields of some `ContentState`, users use the immutable API. That is, they call `.set('some_string', any_value)`.

Having specific, type-safe setters is 100x safer. This is the last diff and gets rid of the last few instances where we're calling `.set()` directly.

Now, here is the interesting bit— we had calls to `ContentState.set('entityMap', ...)` in the code. This is weird for two reasons.

1. Under the current architecture, it's a no-op.
2. This is what we're trying to migrate to, so under the new architecture, it'll _do something_— hopefully the right thing?

Moreover, 2/3 files doing this weren't even random product code— they are in the Draft.js ""core"". So what gives? What's the right thing to do here? How is nothing broken when these seemingly important lines of code are acutally not doing anything? Why are these no-ops here? WTF is going on?

Blame to the rescue.

## The story

In essence, the migration away from a global Draft Entity was attempted before, in: https://github.com/facebook/draft-js/commit/5d5f1b4b89c509d17697965ce9a0d596ed220c43

That didn’t work out, so things were reverted back to the way they are now. Nonetheless, these `.set('entityMap', ...)` weren’t removed. The only file that wasn’t part of that process is `EditorCorePasteOverride.js`, which seems to just have been copied over from `editOnPaste.js` in D14626028 (https://github.com/facebook/draft-js/commit/d09ef3e416beb766b5a227ea84e8d735ff11823b), `.set('entityMap', ...)` included.

## This change

Having this was necessary in a world without a global DraftEntity because it updates the entity map in our content state. When DraftEntity is global, it’s mutable, so some other function can (and does) set the entities without one needing to merge maps and/or set the new map to the `ContentState`.

On this diff I do do it though, because effectively setting it is the same, but more correct. And it means when we migrate out of a global `DraftEntity` we don’t have to come back and change this code.

Reviewed By: AjkP

Differential Revision: D24698388

fbshipit-source-id: ad530f112e2f5e4db6657e44136aeb0f0fc1635e",False
74247d2deb16f5ca963236ce42291b2059a8d577,2020-12-04 08:39:34,George Zahariev,"Format files in html/shared

Summary:
Format using Prettier 2.2
```
~/www/html/shared$ ag --js -l --ignore node_modules --ignore third-party --ignore third_party '\* format' | xargs ag -l 'flow strict(-local)?' | xargs ag -L 'nocommit|noformat|generated|partially-generated|lightSyntaxTransform|haste-ignore' | xargs -P 42 -n 1000 ~/www/scripts/bin/prettier --config ~/www/.prettierrc --write --loglevel warn
```

allow_many_files
bypass-lint
drop-conflicts

Reviewed By: Hans-Halverson

Differential Revision: D25261086

fbshipit-source-id: 91e6c7ba782f19792e03c511a489bcc829563b99",False
288a094ed364ef240d11a4a7ea66b4ff8b73361d,2020-12-03 03:07:43,Kevin Chavez,"Flowify getWindowForNode

Summary:
Thought it'd take a minute or two to look at some Quality Analizer tasks and see if maybe there was some simple things to flowify in Draft.js. I found me this function.

NOTE: the libdef for Window is internal, so I aded one for the external repo. There really isn't a simple way of using the external one for the Draft codebase, internally, so I made the external type of Window just be any (which is the default anyway). This effectivley increases type saftey internally only, but it's something ¯\_(ツ)_/¯

Reviewed By: AjkP

Differential Revision: D24934095

fbshipit-source-id: bfa12f5e26a79afba7c71b868f26f4da8559a62e",False
0411ea2f24275ed9cdadf2ae68af97a160d828fa,2020-11-13 11:13:13,Michael Spohn,"Closes #1972 (#2649)

Summary:
References https://github.com/facebook/draft-js/issues/1972. onMouseDown wasn't registered in the DraftEditor component.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2649

Reviewed By: mrkev

Differential Revision: D24760377

Pulled By: waynegerard

fbshipit-source-id: 27034eb5045949d5858f3c23d65fca6315874086",False
50a838df8adcdb521f30fedf8abf5ad7b5ddee49,2020-11-13 07:37:39,Kevin Chavez,"Migrate ContentState to safer setter API 2/3

Summary:
Currently, to set the fields of some `ContentState`, users use the immutable API. That is, they call `.set('some_string', any_value)`.

Having specific, type-safe setters is 100x safer.

Reviewed By: claudiopro

Differential Revision: D24695162

fbshipit-source-id: 9104f72b33c9f7111f42025c385ccb5cb7c662ed",False
8e2e2e61dc535f95ef7921379934d7865fde9291,2020-11-13 02:09:33,Kevin Chavez,"Don't set UFI comment composer decorators unless they've changed

Summary:
mrkev noticed that this code:

https://our.intern.facebook.com/intern/diffusion/WWW/browse/master/html/js/ufi2/composer/getEditorStateFromUFI2ComposerState.js?commit=1002894553&lines=86-92

…runs a lot (ie. on every keypress) and creates a new `CompositeDraftDecorator` each time.

In this diff we make sure that it creates a new one only when the array of decorators changes.

------------------------------

EDIT (aykev). A profile from before, showing `EditorState.set`:

https://pxl.cl/1q0Lq

Reviewed By: steveluscher

Differential Revision: D24609376

fbshipit-source-id: fa9b4a15db2a28bf2d96e162937fa43d6e56638a",False
f348098c4f3bb6eaba7253886013b1709655ec4f,2020-11-13 01:23:27,Sam Johnson,"Add aria-required attr to DraftEditor (#2675)

Summary:
Closes: https://github.com/facebook/draft-js/issues/1696

`aria-required` is used to indicate that user input is required on an element before a form can be submitted. https://www.w3.org/TR/wai-aria-1.1/#aria-required

It isn't currently possible to pass it in as a prop here so I'm just adding it in alongside the other `aria...` props.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2675

Test Plan: Tested using `npm run test && npm run lint && npm run flow`

Reviewed By: mrkev

Differential Revision: D24760226

Pulled By: waynegerard

fbshipit-source-id: 7ba897e6e458f2f65883c778aa9343186f41b858",False
b0653632b10b58a4824f03ea144e942a8487c200,2020-11-12 12:38:52,Kevin Chavez,"Migrate ContentState to safer setter API 1/3

Summary:
Currently, to set the fields of some `ContentState`, users use the immutable API. That is, they call `.set('some_string', any_value)`.

Having specific, type-safe setters is 100x safer. Let's start by migrating this little chunk fo modules.

Reviewed By: claudiopro

Differential Revision: D24695079

fbshipit-source-id: fcf4fa71577e01bbe21194c28c28ea8de2dde56d",False
b2e9de23dc4340fde9b4566cfa9b1796fe8eb1e2,2020-11-11 23:39:42,Ken Kraisler,"DraftJS renders list numbering incorrectly when the first list item is indented.

Summary: The issue is that if an item is indented less than the prior item, the item should have its counter reset on the condition that it was not reset earlier on.

Reviewed By: mrkev

Differential Revision: D24718604

fbshipit-source-id: 5b948df710034d34f50a04be5471f97cb579593d",False
e3003fe3f26bdebc66b992fba3e818933f6afe2c,2020-11-10 22:37:48,Rachel Brincat,"Add keyboard shortcut for strikethrough text

Summary: This diff adds a Cmd+Shift+X keyboard shortcut to set strikethrough text in Draft editor for consistency with other third party editors (e.g. Google Docs, Quip, MS Word).

Reviewed By: claudiopro

Differential Revision: D24781545

fbshipit-source-id: 19174c10f6f490c374f63d9d745229b47882b3cb",False
f96020b2f8b62d2efca0d69321c785befbde3a7c,2020-11-06 02:44:21,Alexander Szekely,"Fix DraftEditorPlaceholder shouldComponetUpdate

Summary:
`shouldComponentUpdate` was checking that the props **are** shallow equal instead of **are not** shallow equal

See: https://github.com/facebook/draft-js/commit/d02a54df665cf2f34a6f7e36711127ec70642d53

Reviewed By: mrkev

Differential Revision: D24636573

fbshipit-source-id: 4ce9e6680c1589707c30011e5c38cfd31753fa69",False
9651bc99e0ca8ba886667e9fd255e73cdec888b7,2020-11-03 05:23:21,Kevin Chavez,"Only build on node 14 and notify on change (#2705)

Summary:
This will get us quicker signal. The Travis build currently takes over half an hour, but if we built it only built on version of node it could take more like ~10min. Rarely is there any meaningful difference between the different build environments, and honestly, it's a bit of an overkill to try to officially support all of these.

As of the publishing of this PR, Node 14 is the latest LTS version of node.

I also change Travis email notifications to only notify on change. My inbox has been flooded by failures before.

Lastly, some formatting changes.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2705

Reviewed By: waynegerard

Differential Revision: D24691435

Pulled By: mrkev

fbshipit-source-id: 53795a46af39f00acfa56f91ea205a5124a57137",False
8ce7765a70bed677a5a0aed2c4e938734d682e47,2020-11-03 03:38:30,Kevin Chavez,"Add eslint-plugin-fb-www to stop 'Definition for rule was not found' … (#2704)

Summary:
Travis CI currently fails on linting suppressions for internal fb lints. This should fix the build by stopping said errors.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2704

Reviewed By: waynegerard

Differential Revision: D24690391

Pulled By: mrkev

fbshipit-source-id: fbedc312a6ef66cac2f287772dc68d9d93877dc3",False
4dc569c6598cdc390d909feb5f040f0342ec8bb1,2020-10-24 00:07:24,ImgBotApp,"Optimize images (#2579)

Summary:
## Beep boop. Your images are optimized!

Your image file size has been reduced by **27%** {emoji:1f389}

<details>
<summary>
Details
</summary>

| File | Before | After | Percent reduction |
|:--|:--|:--|:--|
| /examples/draft-0-10-0/media/media.png | 166.15kb | 121.04kb | 27.15% |
| /examples/draft-0-10-0/convertFromHTML/image.png | 166.15kb | 121.04kb | 27.15% |
| /website/static/img/editorstate-race-condition-2-handlers.png | 50.93kb | 38.66kb | 24.09% |
| /website/static/img/editorstate-race-condition-1-handler.png | 24.89kb | 19.00kb | 23.65% |
| /website/static/img/draftjs-logo.svg | 0.84kb | 0.83kb | 0.81% |
| | | | |
| **Total :** | **408.96kb** | **300.57kb** | **26.50%** |
</details>

 ---

**Black Lives Matter** | [{emoji:1f4b0} donate](https://blm-bookmarks.carrd.co/#donate) | [{emoji:1f393} learn](https://blm-bookmarks.carrd.co/#learn) | [{emoji:270d}� sign](https://blm-bookmarks.carrd.co/#sign)

[{emoji:1f4dd} docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [{emoji:1f64b}� issues](https://github.com/dabutvin/ImgBot/issues) | [{emoji:1f3c5} swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [{emoji:1f3ea} marketplace](https://github.com/marketplace/imgbot)

Pull Request resolved: https://github.com/facebook/draft-js/pull/2579

Reviewed By: claudiopro

Differential Revision: D23406902

Pulled By: mrkev

fbshipit-source-id: 56061839d4d6e827158eb4466e44800844e9b759",False
2c5870b52288fa64211fc92adec96cfabb8bd03f,2020-10-23 23:55:03,maarekj,"fix: typo in doc blockRendererMap => blockRenderMap (#2619)

Summary:
The prop **blockRendererMap** in Editor doesn't exist.
Replace by **blockRenderMap**

Pull Request resolved: https://github.com/facebook/draft-js/pull/2619

Reviewed By: elboman

Differential Revision: D24100012

Pulled By: mrkev

fbshipit-source-id: b8184db142a8dae2bfe36dd8a8704ee9a8f13cec",False
b9a37e96ee71c9c0c964b76685eecfc2a7bdae72,2020-10-23 23:55:03,Kevin Chavez,"convertFromRawToDraftState creates proper entity maps.

Summary:
D24174087 had a broken e2e test which I traced to `convertFromRawToDraftState`. Turns out the file passes around an `entityMap` all over the place, but it's not acutally an `EntityMap`. It is a map between IDs— one is the `key` used in the enconding and the other is the actual entity ID once its added to the content state.

Unfortunatley, the file was littered with `*` types which since like 2018 (when they were deprecated) are essentially aliases of `any`. Since this ""key map"" was passed around being called `entityMap`, in the end our content state was built with it.

Of course a random object is not a valid entity map. This became aparent when D24174087 went a bit further and expected EntityMap to be an `Immutable.OrderedMap`. Suddenly, we noticed it was just a random object and things failed.

While I was at it I improved some flow types and flowified the tests.

Reviewed By: AjkP

Differential Revision: D24325705

fbshipit-source-id: bb8bf1b04b3564144bd6186cfb6598d6a511a4b9",False
819809240736808afa335dba72e7777410a3f80a,2020-10-23 23:41:57,Kevin Chavez,"Fix flow + simple issues

Summary:
I'm reading this source and saw things related to flow, lints, just the way components should be written, etc. that could be fixed.

So I'm fixing them while I'm here ¯\_(ツ)_/¯

Reviewed By: catchingash, AjkP

Differential Revision: D24407605

fbshipit-source-id: 2e33d8c8a95a668411981242cc33277b7ad572e4",False
5a2bff2e4916a1763942846559ab85bf721fbfa9,2020-10-22 07:38:27,Kevin Chavez,"Fix Touch Bar flickering issue

Summary: Also fixes T77996537. Avoiding the early update meant we `domText !== modelText`, which ran us through the rest of the function, which is alright, but meant the change would be recorded as applying an entity, not inserting a character.

Reviewed By: steveluscher

Differential Revision: D24430789

fbshipit-source-id: e14c847c4fc21937d528c89da54b9ed5940e14a5",False
f8f0ec5b8e53269462967ddbfac87d542708b02f,2020-10-21 19:53:38,Wayne Gerard,"Fix document typo

Summary: Someone pointed out in https://github.com/facebook/draft-js/issues/2669 that this is incorrect and should be `set` instead of `push`, as this code doesn't match the method signature of `push`.

Reviewed By: mrkev

Differential Revision: D24427694

fbshipit-source-id: dc25f7ef62ca075476072235ed8b533160a8866f",False
85705316e16876e163d01201442d8639fafad71e,2020-10-20 20:52:41,Ryan Goldstein,"Add the ability to set a maximum indentation to adjustBlockDepthForContentState

Summary: When applying an indentation to a given range, `adjustBlockDepthForContentState` now will not indent past the limit if one is provided.

Reviewed By: mrkev

Differential Revision: D24343445

fbshipit-source-id: 5fd1591bdd39b9aed256c9c1269a615077b122bc",False
a809b0639d87ef46c40c744aec228da9a01654b8,2020-10-19 23:08:20,Kevin Chavez,"Fix iPad double-space bug

Summary:
This diff fixes the iPad double-space bug.

It involved a few false starts and I went down the a couple rabbit holes but I finally arrived at the fact this setImmediate isn't needed at all. In fact, the whole of pending state seems to not be necessary.

Except for IE.

It makes sense really. `editor.update` should only be called once per change (semantically, what it does is call `props.onChange`). `editOnBeforeInput` and `editOnInput` should be treated as two parts of the same function, just maybe letting the DOM do something in-between.

What the callback in this setImmedate does is really a subset of what the onInput event does, and it's useless everywhere EXCEPT for IE, because IE doesn't fire input events (and React doesn't polyfill this).

Since this is very IE specific, in a future diff I'd like to explore using something else, since our `setImmedate` polyfill is not only apparently [non compliant](https://github.com/facebook/draft-js/issues/2127), it also causes some [typechecking issues](https://github.com/facebook/draft-js/issues/1943) extenrally. IE 11 supports mutation observers, so we could use that instead. This should also reduce bundle size since we wouln't be pulling down that polyfill.

But anyway, that's a diff to go up the stack. For now lets just get this out.

Reviewed By: steveluscher, asiandrummer

Differential Revision: D24368500

fbshipit-source-id: 589ebef35b6beac881995db8a9de0bfccc940334",False
5fdb121e01af16cf3eebfdbe82a4206749740c88,2020-10-19 19:07:18,John Knox,"Add copyright header to sidebars file

Summary: Same header taken from the projects docusaurus config file. Linter says it should be present.

Reviewed By: nikoant

Differential Revision: D24391434

fbshipit-source-id: 81278c312305dc65a4e5b1ed71b76ad54f458ba3",False
088cd9aae68dafd8250721b0f4a456b1bc28b453,2020-10-17 02:09:32,Kevin Chavez,"Remove flowfixme in DraftEditorContents-core

Summary: happyflow

Reviewed By: niveditc

Differential Revision: D24351357

fbshipit-source-id: 874e219f9a72fee555fd39375d48f23cec93c031",False
826f0ab5a0940542228876a645fceeb25e92fcfb,2020-10-16 05:38:22,Kevin Chavez,"Update README and docs with new plans for DraftEntity API in v0.12.0 (#2651)

Summary:
The old draft.js Entity API was set to be removed in `v0.11.0`, but that didn't happen so it will now occur in `v0.12.0`. This PR updates the README and website to reflect this.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2651

Differential Revision: D24200501

Pulled By: mrkev

fbshipit-source-id: 7063179ee2f758584d4be2413db923118a67308f",False
9fc32564094d105c72d427fd4c787a50cea6dcd0,2020-10-16 02:23:57,Kevin Chavez,"Remove joinClasses

Summary:
Turns out the OSS `fbjs` flow definition of `joinClasses` is wrong, and so flow is failing in the build.

Let's just keep using good ol' cx. Turns out you can do this ¯\_(ツ)_/¯

Reviewed By: AjkP

Differential Revision: D24260568

fbshipit-source-id: c33511e8439eacbf2be4c976b823615e8f49d123",False
2a72b3b6fe39f5aa42f788e35bd098ddfe8697c5,2020-10-16 01:25:01,Kevin Chavez,"Remove DraftEntity from removeEntitiesAtEdges

Summary: In our quest to change the way entities are stored, we want to remove calls to private methods in `DraftEntity`

Reviewed By: AjkP

Differential Revision: D24139077

fbshipit-source-id: 296c4458afdadf8fb887e3daae5ced16ecfb224d",False
3e617b0df8d29bd5198fafe469d70eeadd0c888e,2020-10-16 01:25:00,Kevin Chavez,"Add compatibility laer between DraftEntity and OrderedMap

Summary:
When `DraftEntity` gets deprecated, it will be replaced by an `OrderedMap` (living in ContentState).

These are the last few modules calling the private `DraftEntity` API. Let's give `DraftEntity` some methods that make it compatible with `OrderedMap` and migrate these modules to use these, so we can have a seamless transition between the two with a GK.

Reviewed By: AjkP

Differential Revision: D24172855

fbshipit-source-id: fb4dc2ed3bbe7308f01eefebeeefb70a6b3034d7",False
4c376678f7b68e8bbc1452bf2356ce5873a20c0f,2020-10-15 16:53:00,John Knox,"Move draft-js wiki to the internal website

Summary:
Putting out this diff to see if it looks useful. The script has taken the draft js wiki and just aded it into an FB Internal section of the website. This means for authoring updates, and for reading documentation, you only need to go to the one docusaurus site.

This is an automated change produced by running:
```
arc scarf static-docs-from-wiki --wiki_name Draft-js --site_dir scripts/draft-js/__github__/website --usage_warning Y
```

Reviewed By: mrkev

Differential Revision: D23905079

fbshipit-source-id: 4fc6f26ede7acf2f98bfbc1982f10387f9879be4",False
5128c34c17a0c47ef0199a9a45ee75ce0459d5ab,2020-10-15 16:53:00,John Knox,"Convert sidebars to .js file

Summary: Required for the stacked diff

Reviewed By: passy

Differential Revision: D23730205

fbshipit-source-id: 2bb669e71bb864641b80568bc966926c4c5e2a57",False
86002ce7ec9f622668a0eb1a413d2fd8f5f28238,2020-10-13 21:38:37,Kevin Chavez,"Remove DraftEntity from getEntityForSelection

Summary: In our quest to change the way entities are stored, we want to remove calls to private methods in `DraftEntity`

Reviewed By: AjkP

Differential Revision: D24138895

fbshipit-source-id: 28c2faa0fdfc37da6dc7e8cb21f360981daabdaa",False
928563b1a3ac999389ed82dbf193dbc3bc9e7223,2020-10-12 23:24:52,Kevin Chavez,"Remove DraftEntity from NestedRichTextEditorUtil

Summary: In our quest to change the way entities are stored, we want to remove calls to private methods in `DraftEntity`

Reviewed By: AjkP

Differential Revision: D24138872

fbshipit-source-id: 87946b67952f1b7e8791a5499bd9908973d44e4d",False
c310c8eb9020abb0737c71eee734426511793de3,2020-10-12 23:24:52,Kevin Chavez,"Remove DraftEntity from RichTextEditorUtil

Summary:
In our quest to change the way entities are stored, we want to remove calls to private methods in `DraftEntity`.

Also deals with some lints.

Reviewed By: AjkP

Differential Revision: D24139010

fbshipit-source-id: ee1922beddb3767d373638775f809a24c959b929",False
72798d960753bd80e2dbb96ff00a2c1b835b583a,2020-10-12 23:24:51,Kevin Chavez,"Migrate DraftEntity tests to not use DraftEntity

Summary:
In the process of removing the `DraftEntity` module we want to get rid of all direct call-sites.

Instead, this module will test entities through the ContentState module, since it's the only way users should access entities.

Reviewed By: AjkP

Differential Revision: D24138991

fbshipit-source-id: ef80f7870e4c55f329f03540250b6a16bc5419c6",False
185183a6e72a56412240af930616555c85151192,2020-10-09 21:55:58,Kevin Chavez,"Remove public DraftEntity API

Summary:
We don't have any more usages of these public methods within Facebook, so this deprecated API is good to remove.

Next steps will be to figure out what to do with usages of the private API, and migrate everything away from ever needing to require `DraftEntity`.

Reviewed By: shalabhvyas

Differential Revision: D24038216

fbshipit-source-id: 7a6e89d0923441a32dff6a25e43be0eec3037b83",False
20d9d6399a4e1f98722600fbb1290a5835733d9f,2020-10-09 21:55:57,Kevin Chavez,"Remove loadWithEntities, add setEntityMap

Summary:
Deprecating DraftEntity will make entityMap part of the immutable ContentState data structure, so side effects wont happen.

This means replacing the entityMap will return a new content state, not change the current one.

Let's change this function so it mimicks this behaviour now, so we don't have to do so later.

I also rename it to reflect this change in behaviour. This revealed the call-sites of the old one.

I added some TODOs to places where I noticed this function was used to clear the global state when the `ContentState` was supposed to be empty/cleared too, which is a workaround that wont be needed once we remove `DraftEntity` so there's no more global state— everything will live in `ContentState`.

shalabhvyas please check that I do thinks properly in `CMSWYSIWYGEditorCoEditingMutator`

Reviewed By: shalabhvyas

Differential Revision: D24069524

fbshipit-source-id: c8f21489bb17537e6366db0b6d57a903a2f5fe3c",False
ae23dea46c9d2d0fc7117eda18de4bf5e4a20077,2020-10-09 04:24:22,Kevin Chavez,"Add helper superclass type to ContentState

Summary:
Here's a fun one: `ContentStateRecord` is of type any, so subclassing `ContentState` from it means our new class can have essentially any method.

If its a method defined in the `ContentState`, its type will respected. If it's not, we'll just assume its there with in/out any. I'm assuming this applies to fields too.

I noticed this because I want to remove a method, but alas, I did and instead of pointing out where the uses are, flow returned the usually-great-but-today-stressful ""No Errors!"" message. Lovely.

In this diff I'm manually declaring a type for the superclass, so when I remove the method its pointed out by flow. It's full of anys, but it's still better than what we had before.

How do I know this? Because it outright already found bugs. There's callsites with the wrong number of argumetns, there's people calling this methods that don't exist, *sigh*. These are instant exceptions at best, deeply nested, obscure bugs otherwise.

Reviewed By: AjkP

Differential Revision: D24068574

fbshipit-source-id: 32b870e360fed003fef1d0b9800cdf15e5d90dd0",False
bb3ff2ef1e65c49dee9cee43499e06e88eb86417,2020-10-09 04:24:22,Kevin Chavez,"store entity instances in an OrderedMap

Summary:
When we eventually deprecate `DraftEntity` each content state will have its own entity map represented as an `OrderedMap`.

Right now, we store entities in a `Map` though. Let's change this to an `OrderedMap` now so we don't have to later.

Reviewed By: shalabhvyas

Differential Revision: D24066876

fbshipit-source-id: 5e9dc098c16a76e453aa1c1f633a197e494ba70f",False
2df722b52917c15e910a2d2fd28c9255f50a2c1c,2020-10-09 01:05:19,Ryan Goldstein,"Add an optional prop to style the 'content' div

Summary: The content div holds all the event listeners for DraftJS. It can be useful to control its style independently of the outer Draft divs. This change allows for the div that handles event handling to be styled from outside the editor component.

Reviewed By: mrkev

Differential Revision: D24117415

fbshipit-source-id: 95f3504317538f439542f1ce1b3c0af43f24dbf2",False
ec589671c9c8a9854ce68737302f117b78cfd6ea,2020-10-08 22:53:23,Kevin Chavez,"Strongly type ContentState.getEntityMap

Summary:
In the quest to deprecate the old DraftEntity API, we want to leverage flow as much as possible, so this any here is pretty undesirable.

I removed it and it revealed an instance where we want to use new API, so I changed that too.

On the tests— this is just mocking behaviour, so leaving the fix for later.

Reviewed By: shalabhvyas, AjkP

Differential Revision: D24038382

fbshipit-source-id: 0d63074389507a5e6bd15b7752d8a544da150b15",False
61ddfb633286a2118f7f77f70c01b4e344f1fd6a,2020-10-08 22:53:23,Kevin Chavez,"convertFromRawToDraftState

Summary:
I'm removing direct usage of `DraftEntity`, since this is an old API that has been deprecated for at this point years, and is blocking the fixing of some bugs.

Instead, entities should be accessed through the content state for an editor.

Reviewed By: AjkP

Differential Revision: D24038083

fbshipit-source-id: 7f5062884a9066852fb7470afe473e3b545993cf",False
982eed6be47d8c30a3d3f6bab90d1cdd439e2245,2020-10-02 05:41:45,Kevin Chavez,"convertFromHTMLToContentBlocks

Summary:
I'm removing usage of `DraftEntity` directly, since this is an old API that has been deprecated for at this point years, and is blocking the fixing of some bugs.

Instead, entities should be accessed through the content state for an editor.

This function is very similar to `EditorCoreHTMLToContentBlocks`, and the change is essentially the same as the one in D24036853.

Reviewed By: AjkP

Differential Revision: D24036913

fbshipit-source-id: aee294b82e103959726524f80f2d4a9e1e41df70",False
dd22abc0cbaa57f19f82f9a85a7c6420bed600c6,2020-10-02 05:41:44,Kevin Chavez,"Add option to view all state in playground example (#2632)

Summary:
This can be useful when developing draft.js, to form an understanding on the `EditorState` data structure and the way it changes with specific operations.

<img width=""1142"" alt=""Screen Shot 2020-09-28 at 3 28 29 PM"" src=""https://user-images.githubusercontent.com/1285131/94482676-47be1700-019f-11eb-8ef5-d1831e5912a7.png"">

Pull Request resolved: https://github.com/facebook/draft-js/pull/2632

Test Plan: Ran it locally

Reviewed By: AjkP

Differential Revision: D23973163

Pulled By: mrkev

fbshipit-source-id: eec1d53d99e119d49c2a21081380fa7ff4489826",False
30963636d118eabc0ddab4936a53b36a05aea6ed,2020-09-30 03:14:46,Kevin Chavez,"Improve types, fix typo

Summary: I made `DraftBlockRenderConfig` exact, which exposed a bug in `OCDevUIMarkdownRenderer.react` (a typo). Fixed it.

Differential Revision: D23976100

fbshipit-source-id: 5a0abd08ee3b00edb55f6b2597ab6c28739bba50",False
5828182b42a5e13d808a1f9e8a940885717df783,2020-09-25 18:08:35,Dominic Gannaway,"Fix issues with selection using resolveComposition

Summary: This diff tries an alternative approach from reverted D23840422 (https://github.com/facebook/draft-js/commit/c2322e0e1ff21b49dd9ec8e34f34b3d61430adfb) that instead restores selection to the state we had before mutations are applied (see https://www.internalfb.com/intern/diff/D23906012 (https://github.com/facebook/draft-js/commit/ddf60a56529590c01fa4c448fadabd3b10593b9e)/). This resolves the IME issue we were seeing.

Reviewed By: philipp-spiess

Differential Revision: D23905960

fbshipit-source-id: 861a59b004c0fe55b973ba8b73ef5cf39292ae3e",False
5c73ca4d80513d64890dbb29c99fcb47af2abcd4,2020-09-25 05:48:57,Steven Luscher,"You can now supply a custom class to the `DraftEditorPlaceholder`

Summary: In cases where you need to customize the appearance of the Draft placeholder, you can now do so with the `placeholderClassName` prop on `DraftEditor`.

Reviewed By: mrkev

Differential Revision: D23912259

fbshipit-source-id: c233cf4e6633bedf336eace7874ec41e2d315927",False
d02a54df665cf2f34a6f7e36711127ec70642d53,2020-09-25 05:48:57,Steven Luscher,"Make sure that the placeholder component checks all of the props in its `shouldComponentUpdate`

Summary:
I found this `shouldComponentUpdate` method that wasn't checking all of the props (eg. `accessibilityID`). This new strategy is to check the focus state first, //then// to shallow compare the rest of the props.

I do this, realizing that this is probably overkill to begin with, but it's now more correct!

Reviewed By: mrkev

Differential Revision: D23912258

fbshipit-source-id: f14fc75d0e9edca3da4918330262d479884a59ab",False
ddf60a56529590c01fa4c448fadabd3b10593b9e,2020-09-24 21:40:46,Dominic Gannaway,"Back out ""Fix composition error when using IME characters""

Summary: This diff stack reverts D23840422 (https://github.com/facebook/draft-js/commit/c2322e0e1ff21b49dd9ec8e34f34b3d61430adfb) and tries an alternative approach that instead restores selection to the state we had before mutations are applied.

Reviewed By: philipp-spiess

Differential Revision: D23906012

fbshipit-source-id: 62935b4654027d6f896a98a8c3a2e6c3dbaab51c",False
56655a8c4c18eca659198ab74dc7bb9867b51b73,2020-09-24 03:19:28,Kevin Chavez,"Fix DraftEditor lints

Summary: This diff fixes some ""initial state"" lints that are fairly straightforward, and then disables a bunch of lint warnings related to arrow-function initalizers. I'm not convinced the arrow function is not needed here, but this was coloring a lot of the file yellow.

Reviewed By: AjkP

Differential Revision: D23859030

fbshipit-source-id: c6066c2ddfc22ec149c12e9298dc1a29f00f476c",False
21a37a6f950b736df4cc0f019c1dcb2a117519d7,2020-09-24 03:19:27,Kevin Chavez,"Fix a bunch of lints

Summary: This diff is long but simple— it just fixes a bunch of lints that shouldn't affect behaviour but were annoying to look at.

Reviewed By: AjkP

Differential Revision: D23858490

fbshipit-source-id: 82088f49821abb668f78d2baf7e5185e0a91b8b5",False
c2322e0e1ff21b49dd9ec8e34f34b3d61430adfb,2020-09-23 01:30:13,Dominic Gannaway,"Fix composition error when using IME characters

Summary: This diff fixes an issue that we are tracking to do with Japanese/Korean IME character input and the mentions type ahead. Specifically, it's when we're resolving composition, we don't want the mentions strategy to change the editor state, which results in the selection cursor to incorrectly be at a position that isn't actually possible.

Differential Revision: D23840422

fbshipit-source-id: ef8cc9056b9e5943671c13a35a55454cfe9c0f9d",False
4df543c223eea21d6e21132318659dda793ac469,2020-09-17 15:29:57,Dominic Gannaway,"Revise `onKeyDown` logic for handling composition resolution

Summary: Looking through the code, it seems that there is a missing condition during the `onKeyDown` handling for composition. Surely, we should be also checking that the resolved flag is not set, otherwise we might over-fire `resolveComposition`? This might possibly be one of the causes for the IME issues we're seeing.

Differential Revision: D23734060

fbshipit-source-id: f94d58851019abe1ab7dc1b15622219b164f2293",False
90a528f36b35e3f68414ae62ca89da6e8fb71af1,2020-09-15 02:08:54,Kevin Chavez,"Update build (and some deps) (#2586)

Summary:
The gulp-file had a lot of anonymous steps, was wrapping some steps in unnecessary `serial` and `parallel` wrappers, was using the old gulp API where you identify tasks with strings names and by calling `gulp.task`, and was also using `var` exclusively, since it was probably built before `const` and `let` were widespread.

Thought I'd update it. We have nicer output now:

```
$ yarn build
yarn run v1.22.4
$ gulp
[18:55:29] Using gulpfile ~/Desktop/oss/draft-js-mrkev/gulpfile.js
[18:55:29] Starting 'default'...
[18:55:29] Starting 'check_dependencies'...
[18:55:32] Finished 'check_dependencies' after 3.37 s
[18:55:32] Starting 'clean'...
[18:55:32] Finished 'clean' after 20 ms
[18:55:32] Starting 'modules'...
[18:55:32] Starting 'flow'...
[18:55:36] Finished 'modules' after 3.32 s
[18:55:36] Finished 'flow' after 3.32 s
[18:55:36] Starting 'modules'...
[18:55:36] Starting 'modules'...
[18:55:38] Finished 'modules' after 2.95 s
[18:55:38] Starting 'outputDistMin'...
[18:55:39] Finished 'modules' after 3.08 s
[18:55:39] Starting 'css'...
[18:55:39] Finished 'css' after 184 ms
[18:55:39] Starting 'outputDist'...
[18:55:42] Finished 'outputDistMin' after 3.11 s
[18:55:42] Finished 'outputDist' after 3 s
[18:55:42] Finished 'default' after 13 s
$ node node_modules/fbjs-scripts/node/check-lib-requires.js lib
{emoji:2728}  Done in 15.96s.
```

While I was at it I updated some dependencies too.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2586

Test Plan: `yarn build && yarn lint && yarn test`

Reviewed By: joelseq

Differential Revision: D23411066

Pulled By: mrkev

fbshipit-source-id: c7c066cca5a2181e6e8642a5a83d64165cc8eaa2",False
1359138dd0c91b14c834a4b1320198f6a493eb83,2020-09-07 17:43:51,Dominic Gannaway,"Wrap DraftEditor.update in flushControlled

Summary: DraftEditor's update method might invoke a React state update from an async code-path. We should ensure that this path invokes the state update whilst flushing sync updates, to ensure React Concurrent mode works as intended.

Reviewed By: philipp-spiess

Differential Revision: D23564215

fbshipit-source-id: 424730ea8058d72496b232e445eb25126ed25f6a",False
b071065fec7712b59e5ded68d57334bb98ebfbed,2020-09-04 20:35:50,Dominic Gannaway,"Ensure we wrap flushControlled in restoreEditorDOM

Summary: This diff fixes an issue with Draft and React Concurrent mode, where we do a setState update without wrapping it in `flushControlled`. This should fix a bunch of Draft related issues.

Reviewed By: philipp-spiess

Differential Revision: D23538365

fbshipit-source-id: 1e4790016f8d3b5f63be727473353b273a32e5d6",False
c6f492f60fd826a00a74344eeb2bdae294ec0196,2020-09-02 07:05:01,dependabot-preview[bot],"Bump @babel/core from 7.11.0 to 7.11.5 (#2595)

Summary:
Bumps [babel/core](https://github.com/babel/babel/tree/HEAD/packages/babel-core) from 7.11.0 to 7.11.5.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/babel/babel/releases"">babel/core's releases</a>.</em></p>
<blockquote>
<h2>v7.11.5 (2020-08-31)</h2>
<p>Thanks <a href=""https://github.com/giovannicalo"">giovannicalo</a>, <a href=""https://github.com/johanholmerin"">johanholmerin</a>, <a href=""https://github.com/uhyo"">uhyo</a> for their first PRs!</p>
<h4>:bug: Bug Fix</h4>
<ul>
<li><code>babel-helper-builder-react-jsx-experimental</code>, <code>babel-plugin-transform-react-jsx-development</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12017"">#12017</a> Fix <code>jsxDEV</code> for generated elements (<a href=""https://github.com/Timer"">Timer</a>)</li>
</ul>
</li>
<li><code>babel-parser</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11931"">#11931</a> fix: ExpressionBody should respect [In] parameter (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11987"">#11987</a> Set generator to true during error recovery of accessor (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
</ul>
</li>
<li><code>babel/eslint-plugin</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11993"">#11993</a> Added linting support for private class methods (<a href=""https://github.com/giovannicalo"">giovannicalo</a>)</li>
</ul>
</li>
<li><code>babel-plugin-proposal-function-bind</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12000"">#12000</a> fix(plugin-proposal-function-bind): fix invalid code emitted for <code>::super.foo</code> (<a href=""https://github.com/uhyo"">uhyo</a>)</li>
</ul>
</li>
</ul>
<h4>:nail_care: Polish</h4>
<ul>
<li><code>babel-traverse</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11832"">#11832</a> Forward deopt node path (<a href=""https://github.com/johanholmerin"">johanholmerin</a>)</li>
</ul>
</li>
</ul>
<h4>:house: Internal</h4>
<ul>
<li>Other
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12013"">#12013</a> Remove unused enhanced-resolve and normalize lock resolutions (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12010"">#12010</a> chore: use Rollup 2 (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12002"">#12002</a> Restructure CI workflow (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11781"">#11781</a> chore: improve Yarn 2 cache on CI (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li>All packages
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11962"">#11962</a> Use Yarn 2 (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
</ul>
<h4>Committers: 6</h4>
<ul>
<li>Brian Ng (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
<li>Giovanni Calò (<a href=""https://github.com/giovannicalo"">giovannicalo</a>)</li>
<li>Huáng Jùnliàng (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li>Joe Haddad (<a href=""https://github.com/Timer"">Timer</a>)</li>
<li>Johan Holmerin (<a href=""https://github.com/johanholmerin"">johanholmerin</a>)</li>
<li>uhyo (<a href=""https://github.com/uhyo"">uhyo</a>)</li>
</ul>
<h2>v7.11.4 (2020-08-20)</h2>
<p>Thanks <a href=""https://github.com/Monchi"">Monchi</a> for their first PR to Babel!</p>
<h4>:bug: Bug Fix</h4>
<ul>
<li><code>babel-helper-replace-supers</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11985"">#11985</a> fix: declare babel/traverse as a dependency (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li><code>babel-core</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11974"">#11974</a> Ensure <code>import()</code> is not transpiled in <code>babel-core</code> published source (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li><code>babel-parser</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11979"">#11979</a> Throw error on invalid flow async generic arrow syntax (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11955"">#11955</a> Fix parsing type casted generic flow arrow exprs (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11973"">#11973</a> fix: do not transform ClassPrivateMethods in estree (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11941"">#11941</a> fix: push new token context when braceHashL is seen (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
</ul>

</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/babel/babel/blob/main/CHANGELOG.md"">babel/core's changelog</a>.</em></p>
<blockquote>
<h2>v7.11.5 (2020-08-31)</h2>
<h4>:bug: Bug Fix</h4>
<ul>
<li><code>babel-helper-builder-react-jsx-experimental</code>, <code>babel-plugin-transform-react-jsx-development</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12017"">#12017</a> Fix <code>jsxDEV</code> for generated elements (<a href=""https://github.com/Timer"">Timer</a>)</li>
</ul>
</li>
<li><code>babel-parser</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11931"">#11931</a> fix: ExpressionBody should respect [In] parameter (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11987"">#11987</a> Set generator to true during error recovery of accessor (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
</ul>
</li>
<li>Other
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11993"">#11993</a> Added linting support for private class methods (<a href=""https://github.com/giovannicalo"">giovannicalo</a>)</li>
</ul>
</li>
<li><code>babel-plugin-proposal-function-bind</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12000"">#12000</a> fix(plugin-proposal-function-bind): fix invalid code emitted for <code>::super.foo</code> (<a href=""https://github.com/uhyo"">uhyo</a>)</li>
</ul>
</li>
</ul>
<h4>:nail_care: Polish</h4>
<ul>
<li><code>babel-traverse</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11832"">#11832</a> Forward deopt node path (<a href=""https://github.com/johanholmerin"">johanholmerin</a>)</li>
</ul>
</li>
</ul>
<h4>:house: Internal</h4>
<ul>
<li>Other
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12013"">#12013</a> Remove unused enhanced-resolve and normalize lock resolutions (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12010"">#12010</a> chore: use Rollup 2 (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/12002"">#12002</a> Restructure CI workflow (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11781"">#11781</a> chore: improve Yarn 2 cache on CI (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li><code>babel-cli</code>, <code>babel-code-frame</code>, <code>babel-compat-data</code>, <code>babel-core</code>, <code>babel-generator</code>, <code>babel-helper-annotate-as-pure</code>, <code>babel-helper-bindify-decorators</code>, <code>babel-helper-builder-binary-assignment-operator-visitor</code>, <code>babel-helper-builder-react-jsx-experimental</code>, <code>babel-helper-builder-react-jsx</code>, <code>babel-helper-call-delegate</code>, <code>babel-helper-compilation-targets</code>, <code>babel-helper-create-class-features-plugin</code>, <code>babel-helper-create-regexp-features-plugin</code>, <code>babel-helper-define-map</code>, <code>babel-helper-explode-assignable-expression</code>, <code>babel-helper-explode-class</code>, <code>babel-helper-function-name</code>, <code>babel-helper-get-function-arity</code>, <code>babel-helper-hoist-variables</code>, <code>babel-helper-member-expression-to-functions</code>, <code>babel-helper-module-imports</code>, <code>babel-helper-module-transforms</code>, <code>babel-helper-optimise-call-expression</code>, <code>babel-helper-plugin-test-runner</code>, <code>babel-helper-remap-async-to-generator</code>, <code>babel-helper-replace-supers</code>, <code>babel-helper-simple-access</code>, <code>babel-helper-skip-transparent-expression-wrappers</code>, <code>babel-helper-split-export-declaration</code>, <code>babel-helper-transform-fixture-test-runner</code>, <code>babel-helper-wrap-function</code>, <code>babel-helpers</code>, <code>babel-highlight</code>, <code>babel-node</code>, <code>babel-parser</code>, <code>babel-plugin-external-helpers</code>, <code>babel-plugin-proposal-async-generator-functions</code>, <code>babel-plugin-proposal-class-properties</code>, <code>babel-plugin-proposal-decorators</code>, <code>babel-plugin-proposal-do-expressions</code>, <code>babel-plugin-proposal-dynamic-import</code>, <code>babel-plugin-proposal-export-default-from</code>, <code>babel-plugin-proposal-export-namespace-from</code>, <code>babel-plugin-proposal-function-bind</code>, <code>babel-plugin-proposal-function-sent</code>, <code>babel-plugin-proposal-json-strings</code>, <code>babel-plugin-proposal-logical-assignment-operators</code>, <code>babel-plugin-proposal-nullish-coalescing-operator</code>, <code>babel-plugin-proposal-numeric-separator</code>, <code>babel-plugin-proposal-object-rest-spread</code>, <code>babel-plugin-proposal-optional-catch-binding</code>, <code>babel-plugin-proposal-optional-chaining</code>, <code>babel-plugin-proposal-partial-application</code>, <code>babel-plugin-proposal-pipeline-operator</code>, <code>babel-plugin-proposal-private-methods</code>, <code>babel-plugin-proposal-private-property-in-object</code>, <code>babel-plugin-proposal-throw-expressions</code>, <code>babel-plugin-proposal-unicode-property-regex</code>, <code>babel-plugin-syntax-class-properties</code>, <code>babel-plugin-syntax-decimal</code>, <code>babel-plugin-syntax-decorators</code>, <code>babel-plugin-syntax-do-expressions</code>, <code>babel-plugin-syntax-export-default-from</code>, <code>babel-plugin-syntax-flow</code>, <code>babel-plugin-syntax-function-bind</code>, <code>babel-plugin-syntax-function-sent</code>, <code>babel-plugin-syntax-import-meta</code>, <code>babel-plugin-syntax-jsx</code>, <code>babel-plugin-syntax-logical-assignment-operators</code>, <code>babel-plugin-syntax-module-attributes</code>, <code>babel-plugin-syntax-numeric-separator</code>, <code>babel-plugin-syntax-partial-application</code>, <code>babel-plugin-syntax-pipeline-operator</code>, <code>babel-plugin-syntax-record-and-tuple</code>, <code>babel-plugin-syntax-throw-expressions</code>, <code>babel-plugin-syntax-top-level-await</code>, <code>babel-plugin-syntax-typescript</code>, <code>babel-plugin-transform-arrow-functions</code>, <code>babel-plugin-transform-async-to-generator</code>, <code>babel-plugin-transform-block-scoped-functions</code>, <code>babel-plugin-transform-block-scoping</code>, <code>babel-plugin-transform-classes</code>, <code>babel-plugin-transform-computed-properties</code>, <code>babel-plugin-transform-destructuring</code>, <code>babel-plugin-transform-dotall-regex</code>, <code>babel-plugin-transform-duplicate-keys</code>, <code>babel-plugin-transform-exponentiation-operator</code>, <code>babel-plugin-transform-flow-comments</code>, <code>babel-plugin-transform-flow-strip-types</code>, <code>babel-plugin-transform-for-of</code>, <code>babel-plugin-transform-function-name</code>, <code>babel-plugin-transform-instanceof</code>, <code>babel-plugin-transform-jscript</code>, <code>babel-plugin-transform-literals</code>, <code>babel-plugin-transform-member-expression-literals</code>, <code>babel-plugin-transform-modules-amd</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-plugin-transform-modules-systemjs</code>, <code>babel-plugin-transform-modules-umd</code>, <code>babel-plugin-transform-named-capturing-groups-regex</code>, <code>babel-plugin-transform-new-target</code>, <code>babel-plugin-transform-object-assign</code>, <code>babel-plugin-transform-object-set-prototype-of-to-assign</code>, <code>babel-plugin-transform-object-super</code>, <code>babel-plugin-transform-parameters</code>, <code>babel-plugin-transform-property-literals</code>, <code>babel-plugin-transform-property-mutators</code>, <code>babel-plugin-transform-proto-to-assign</code>, <code>babel-plugin-transform-react-constant-elements</code>, <code>babel-plugin-transform-react-display-name</code>, <code>babel-plugin-transform-react-inline-elements</code>, <code>babel-plugin-transform-react-jsx-compat</code>, <code>babel-plugin-transform-react-jsx-development</code>, <code>babel-plugin-transform-react-jsx-self</code>, <code>babel-plugin-transform-react-jsx-source</code>, <code>babel-plugin-transform-react-jsx</code>, <code>babel-plugin-transform-react-pure-annotations</code>, <code>babel-plugin-transform-regenerator</code>, <code>babel-plugin-transform-reserved-words</code>, <code>babel-plugin-transform-runtime</code>, <code>babel-plugin-transform-shorthand-properties</code>, <code>babel-plugin-transform-spread</code>, <code>babel-plugin-transform-sticky-regex</code>, <code>babel-plugin-transform-strict-mode</code>, <code>babel-plugin-transform-template-literals</code>, <code>babel-plugin-transform-typeof-symbol</code>, <code>babel-plugin-transform-typescript</code>, <code>babel-plugin-transform-unicode-escapes</code>, <code>babel-plugin-transform-unicode-regex</code>, <code>babel-polyfill</code>, <code>babel-preset-env</code>, <code>babel-preset-flow</code>, <code>babel-preset-react</code>, <code>babel-preset-typescript</code>, <code>babel-register</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime</code>, <code>babel-standalone</code>, <code>babel-template</code>, <code>babel-traverse</code>, <code>babel-types</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11962"">#11962</a> Use Yarn 2 (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
</ul>
<h2>v7.11.4 (2020-08-20)</h2>
<h4>:bug: Bug Fix</h4>
<ul>
<li><code>babel-helper-replace-supers</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11985"">#11985</a> fix: declare babel/traverse as a dependency (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li><code>babel-core</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11974"">#11974</a> Ensure <code>import()</code> is not transpiled in <code>babel-core</code> published source (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li><code>babel-parser</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11979"">#11979</a> Throw error on invalid flow async generic arrow syntax (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11955"">#11955</a> Fix parsing type casted generic flow arrow exprs (<a href=""https://github.com/existentialism"">existentialism</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11973"">#11973</a> fix: do not transform ClassPrivateMethods in estree (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11941"">#11941</a> fix: push new token context when braceHashL is seen (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11943"">#11943</a> fix: reset EndLocation for catch param (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li>Other
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11978"">#11978</a> fix: do not mutate newTypes (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11970"">#11970</a> fix: ensure defaults are set in babel/eslint-parser (<a href=""https://github.com/kaicataldo"">kaicataldo</a>)</li>
</ul>
</li>
<li><code>babel-generator</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11947"">#11947</a> fix: disallow line break between async and property (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
</ul>
<h4>:house: Internal</h4>
<ul>
<li>Other
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11952"">#11952</a> Move legacy node version tests to GitHub actions (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11936"">#11936</a> chore: do not push version commit on lerna version (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
<li><code>babel-parser</code>
<ul>
<li><a href=""https://github-redirect.dependabot.com/babel/babel/pull/11923"">#11923</a> Add more parser test cases (<a href=""https://github.com/JLHwung"">JLHwung</a>)</li>
</ul>
</li>
</ul>

</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/babel/babel/commit/af64ccb2b00bc7574943674996c2f0507cdbfb6f""><code>af64ccb</code></a> v7.11.5</li>
<li><a href=""https://github.com/babel/babel/commit/d5bcc08bf7134db165af91a88a61c8c6bfe39144""><code>d5bcc08</code></a> chore: bump source-map to 0.6.1 (<a href=""https://github.com/babel/babel/tree/HEAD/packages/babel-core/issues/12014"">#12014</a>)</li>
<li><a href=""https://github.com/babel/babel/commit/3fad7eab9b47165059b4dba34fe4a61ac4549c85""><code>3fad7ea</code></a> Use Yarn 2 (<a href=""https://github.com/babel/babel/tree/HEAD/packages/babel-core/issues/11962"">#11962</a>)</li>
<li><a href=""https://github.com/babel/babel/commit/90b198956995195ea00e7ac9912c2260e44d8746""><code>90b1989</code></a> v7.11.4</li>
<li><a href=""https://github.com/babel/babel/commit/565cfff486edd4f0165c253fb97153d97acd16b8""><code>565cfff</code></a> chore: test against workspace babel/core</li>
<li><a href=""https://github.com/babel/babel/commit/4be67fb19ace23541aa0dbc11705e9016af5ce8b""><code>4be67fb</code></a> Ensure <code>import()</code> is not transpiled in <code>babel-core</code> published source (<a href=""https://github.com/babel/babel/tree/HEAD/packages/babel-core/issues/11974"">#11974</a>)</li>
<li><a href=""https://github.com/babel/babel/commit/a5bc48661bed4a392fbe14cf88469f9a8c2c5bd9""><code>a5bc486</code></a> Isolated exec tests (<a href=""https://github.com/babel/babel/tree/HEAD/packages/babel-core/issues/11531"">#11531</a>)</li>
<li><a href=""https://github.com/babel/babel/commit/953ae82159b67b4487f837a17a1b8d5e305a8e5c""><code>953ae82</code></a> v7.11.1</li>
<li><a href=""https://github.com/babel/babel/commit/c29138fd72de15dc89a10571d4ec09f35d5737b4""><code>c29138f</code></a> Do not cache non-existent files forever (<a href=""https://github.com/babel/babel/tree/HEAD/packages/babel-core/issues/11906"">#11906</a>)</li>
<li>See full diff in <a href=""https://github.com/babel/babel/commits/v7.11.5/packages/babel-core"">compare view</a></li>
</ul>
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=@babel/core&package-manager=npm_and_yarn&previous-version=7.11.0&new-version=7.11.5)](https://dependabot.com/compatibility-score/?dependency-name=@babel/core&package-manager=npm_and_yarn&previous-version=7.11.0&new-version=7.11.5)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme

Additionally, you can set the following in the `.dependabot/config.yml` file in this repo:
- Update frequency
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)

</details>

Pull Request resolved: https://github.com/facebook/draft-js/pull/2595

Reviewed By: mrkev

Differential Revision: D23455938

Pulled By: joelseq

fbshipit-source-id: 259aedf78062eb2477d67613a835fa7c3d0a460e",False
36322b395857ea02aac62798aa427d9cf73c7ac2,2020-09-01 00:57:46,dependabot-preview[bot],"Bump alex from 8.2.0 to 9.0.1 (#2576)

Summary:
Bumps [alex](https://github.com/get-alex/alex) from 8.2.0 to 9.0.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/get-alex/alex/releases"">alex's releases</a>.</em></p>
<blockquote>
<h2>9.0.1</h2>
<ul>
<li>74345ad Fix <code>deny</code> on cli</li>
</ul>
<h2>9.0.0</h2>
<ul>
<li>651bad7 Update contributors</li>
<li>3894be8 Add MDX support</li>
<li>13c870a Update dependencies
<ul>
<li>lots of changes to patterns in <code>retext-equality</code>, <code>retext-profanities</code></li>
<li>bunch of other fixes in deps!</li>
</ul>
</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/get-alex/alex/commit/bb0b693a2d791cd8cabdbbf65fa4f4468d125ded""><code>bb0b693</code></a> 9.0.1</li>
<li><a href=""https://github.com/get-alex/alex/commit/74345ad9926d65d3d9f81505825d8bde2af9e1f0""><code>74345ad</code></a> Fix <code>deny</code> on cli</li>
<li><a href=""https://github.com/get-alex/alex/commit/fa1f391dec9beb2f7c5ba8c70704da72477bd336""><code>fa1f391</code></a> 9.0.0</li>
<li><a href=""https://github.com/get-alex/alex/commit/651bad78b3857673465f40079558136c79fffdf1""><code>651bad7</code></a> Update contributors</li>
<li><a href=""https://github.com/get-alex/alex/commit/3894be8ba1733fb134f096a7b1d51029d3aa3bfa""><code>3894be8</code></a> Add MDX support</li>
<li><a href=""https://github.com/get-alex/alex/commit/13c870abe6f3599f0ca3c092930b3b387b5d4fc0""><code>13c870a</code></a> Update dependencies</li>
<li><a href=""https://github.com/get-alex/alex/commit/8a38129d804f7a2eb41c9c5e24032f39a8c5877f""><code>8a38129</code></a> Update dev-dependencies</li>
<li><a href=""https://github.com/get-alex/alex/commit/10cfaa74561f85cf3a19d47d34927a8114cd58c7""><code>10cfaa7</code></a> Add Figma plugin</li>
<li><a href=""https://github.com/get-alex/alex/commit/6c9c758386777885e4029d9c16e76a087f113cdc""><code>6c9c758</code></a> Fix grammar</li>
<li><a href=""https://github.com/get-alex/alex/commit/b4f2b69aacfed751925854940b5ed2c9466a0c44""><code>b4f2b69</code></a> Fix <code>noBinary</code> in api</li>
<li>See full diff in <a href=""https://github.com/get-alex/alex/compare/8.2.0...9.0.1"">compare view</a></li>
</ul>
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=alex&package-manager=npm_and_yarn&previous-version=8.2.0&new-version=9.0.1)](https://dependabot.com/compatibility-score/?dependency-name=alex&package-manager=npm_and_yarn&previous-version=8.2.0&new-version=9.0.1)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme

Additionally, you can set the following in the `.dependabot/config.yml` file in this repo:
- Update frequency
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)

</details>

Pull Request resolved: https://github.com/facebook/draft-js/pull/2576

Reviewed By: mrkev

Differential Revision: D23377285

Pulled By: szeko

fbshipit-source-id: 611e2eab1a7e11c9d0ed34928d9788343327145d",False
2fb5c17b810d1412eb2c10f35437f0a13e75c162,2020-08-31 19:29:08,Kevin Chavez,"Update templates to use headings (#2587)

Summary:
These are semantically more correct. I expect it'd be better for screen readers and other accessibility features too. Also on this change, I've seen a few PRs that don't remove the instructions, so I mentioned that on the PR template.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2587

Test Plan: eyes {emoji:1f440}

Reviewed By: claudiopro

Differential Revision: D23411226

Pulled By: mrkev

fbshipit-source-id: f47d5d33ec48019ffd1eb2fec16c6888767ef42e",False
ac179a21c1d368f40e09983e0ae4278e315f3cf3,2020-08-28 22:12:43,Kevin Chavez,"Fix linting, support optional catch bindings (#2582)

Summary:
**Summary**

Fixes an issue with linting, by allowing us to use optional catch bindings. Not doing this transform in babel breaks UglifyJS.

This should make CI pass again.

**Test Plan**

`yarn build && yarn lint`

Pull Request resolved: https://github.com/facebook/draft-js/pull/2582

Reviewed By: mbutki

Differential Revision: D23353556

Pulled By: mrkev

fbshipit-source-id: 45dec9de34d5e86012692c908958b7ca852ceb04",False
d47bc2f5814134fbebe34233e8f7030007d48b1b,2020-08-27 01:16:45,Dominic Gannaway,"Improve invariant to give more detail

Summary: This diff is to help understand what could be going wrong in T72058018. It might help to know what the node type is, as then it can give clues as to which direction to follow.

Reviewed By: philipp-spiess, mrkev

Differential Revision: D23348680

fbshipit-source-id: 2a37062344638ec9477a0a238cf2d8cbec715656",False
697a06ae3c6f3a2deeb16ad2c4878b9aa31d6e1d,2020-08-24 00:16:06,Jordan Brown,"Pre-suppress non-generated files for v0.132

Summary: Flow 0.132 introduces ~6500 new errors, which will complicate the release. This stack suppresses these errors so that landing the version bump will be simple

Reviewed By: dsainati1

Differential Revision: D23268715

fbshipit-source-id: b34265f445998ba8c7df286c7f5383d6413c6d32",False
4990bbf1b918ebec3f9adb939395e2969e514074,2020-08-20 04:11:07,lebogang Olifant,"improve text syntax (#2556)

Summary:
**Summary**

improve text syntax

Pull Request resolved: https://github.com/facebook/draft-js/pull/2556

Reviewed By: claudiopro

Differential Revision: D23190938

Pulled By: mrkev

fbshipit-source-id: 6a1e1f2b640ce08e7a86ea352c10959d8d7e783a",False
19603de0f84838b0cec5011fbdb11bd7febcae2d,2020-08-20 01:16:55,Bangsheng Sui,"Release to 90% With Scoping Release GK

Summary: Confirmed with our DS ays that we can release to 90% users for Audiences.

Differential Revision: D23198511

fbshipit-source-id: 18814b621b46fce910770a871abb4aa05f0dc900",False
a82299396c70d8ce4597d96058b96b1cbd1ccba0,2020-08-19 01:03:28,Christopher Chedeau,"Remove tab restriction

Summary:
The current restriction to only be able to indent a line only one more than the previous line doesn't work well in practice.
* The invariant is not properly maintained when unindenting the previous line or deleting the previous line. So, it's possible to get away with it
* No other text editor I could find actually has this restriction (quip, google docs)
* Because the logic is complicated, it was only implemented for indenting a single bullet. Removing this logic allows all the lines to be indented at once.
* That logic was copy pasted so many times and in many instances the previous nesting rule was not actually implemented.

Removing this logic fixes a few of my annoyances:
* It is now possible to indent multiple bullets at once!!!

Reviewed By: mrkev

Differential Revision: D21614548

fbshipit-source-id: c82dba6a3eaa5aac06606b3d13d979a239591d3a",False
882a4d0cc75acb90608d4e0a1f96eb57197c9e34,2020-08-18 18:47:58,Jainil Parekh,"Remove paste handling logic for images with ""presentation"" role

Summary: This is essentially a revert of D9333247 (https://github.com/facebook/draft-js/commit/6df3808c6d0453a68cd6f9939fec80a527cca497) which I worked on a couple of years ago. The gk `draftjs_fix_paste_for_img` was never opened to public. I am deleting this code because I feel its not an ideal solution and the issue is a very minor cosmetic issue that oc curs only in the specific situation of pasting a text into draft with an fbemoji. I will clean up the gk after this diff lands.

Differential Revision: D23167522

fbshipit-source-id: 7f9252eda4786bbb17c7bf25939eade937d28689",False
f55fa0f8da080fea74ae3fa98860c41db85cbeea,2020-08-14 03:31:52,Kevin Chavez,"Prepare release 0.11.7 (#2562)

Summary:
**Summary**
Updates the changelog and package.json for the v0.11.7 release.

**Test Plan**

`yarn build && yarn test && yarn lint-docs && yarn lint`

`yarn lint-docs` fails like it did on the [v0.11.6 release](https://github.com/facebook/draft-js/pull/2456#issue-427464261).

`yarn lint` fails on not knowing the rule `'fb-www/no-unused-catch-bindings'`, but I'm unsure how to sync it from Facebook internal to Draft.js.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2562

Reviewed By: claudiopro

Differential Revision: D23044013

Pulled By: mrkev

fbshipit-source-id: 40fb92311535f015cd4001c5bf70bbeb54905530",False
54213a13ec46b956f9de8e975af5ba78dda0acab,2020-08-04 02:01:18,Kevin Chavez,"Update readme to suggest building with yarn (#2527)

Summary:
Every now and then there will be issues by people who try to build with NPM. The build works with yarn.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2527

Reviewed By: creedarky

Differential Revision: D22784874

Pulled By: mrkev

fbshipit-source-id: c38bd43d57de511df237745f74b1b9d4bb7bebd6",False
5e92a32f1983141f5b70aa11e32e1ec5021f5338,2020-08-03 23:14:39,Kevin Chavez,"Update build, static analysis deps (#2541)

Summary:
**Summary**

Updating dependencies to close some dependabot PRs with security issues.

**Test Plan**

`yarn && yarn flow && yarn test && yarn lint` still gives the same results

EDIT: Updated fbjs too. Tested by doing the same as above, and running the playground example. Everything works like it did before.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2541

Reviewed By: claudiopro

Differential Revision: D22883727

Pulled By: mrkev

fbshipit-source-id: 63c56ab96ecf17dff23affc2350cd69f9d98bed2",False
ce94ecf36717662125b8b113cc06a732b6c71643,2020-07-31 03:03:59,Kevin Chavez,"Tex example: Update babel to v7 + other deps (#2533)

Summary:
**Summary**

Updating deps to get rid of all those dependabot PRs. Also was kind of fun to do the whole babel v6 -> babel v7 migration. `npx babel-upgrade --write --install` was pretty handy.

NOTE: I didn't upgrade `katex` to v0.8 because that broke the equation rendering in the example.

**Test Plan**

Ran the example, everything works.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2533

Reviewed By: joelseq

Differential Revision: D22787662

Pulled By: mrkev

fbshipit-source-id: b177d74b761982a4c6d674e44545312ef4609500",False
b79082f9260e7350ba9e6224e269ba6fc698dadb,2020-07-31 03:03:59,Michaël De Boey,"Update package.json (#2490)

Summary:
https://twitter.com/SemanticRelease/status/1249795728253353986

Pull Request resolved: https://github.com/facebook/draft-js/pull/2490

Reviewed By: claudiopro

Differential Revision: D22787963

Pulled By: mrkev

fbshipit-source-id: 980bb391854d674b7dba8b3a6f5a84807144e54c",False
a8f44b15bf9895a8d7cb6436df97961d65bd4136,2020-07-29 08:09:09,fay,"Update media.html (#2452)

Summary:
I'm just adding two lines of comments, because I made this hard to see difference mistake, and I'm worried that others are the same as me

Pull Request resolved: https://github.com/facebook/draft-js/pull/2452

Differential Revision: D22806583

Pulled By: mrkev

fbshipit-source-id: ebcc6309069c7f5d6ec417d6aa59471dfe6c1581",False
f6bf4ed3f169b9b6119dddd87352555cf65bfe45,2020-07-29 05:55:37,Kevin Chavez,"Upgrade dependencies in playground example (#2534)

Summary:
**Summary**

More in the series of ""updating dependencies to get rid of all of those dependabot PRs"". On this iteration, deps inside the ""playground"" example.

**Test Plan**

Ran the example. Everything works like it did before.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2534

Reviewed By: joelseq

Differential Revision: D22787928

Pulled By: mrkev

fbshipit-source-id: ef34dde685665f59408b526b13aaf6c34f0ef651",False
e0fc33eb82aea989613af57e45aba282a7a8ab7d,2020-07-29 00:39:13,Darsh Shah,"feat(docs): Update README.md (#2523)

Summary:
**Summary**

#### Changes
- [x] Added logo to the top
- [x] Aligned header elements to the center

> This change will make it look symmetrical and aligned in a proper format.

> Screenshot
![Draft JS](https://user-images.githubusercontent.com/25670841/88580007-9993d500-d068-11ea-879c-b84c4944b989.png)

Pull Request resolved: https://github.com/facebook/draft-js/pull/2523

Reviewed By: elboman

Differential Revision: D22785917

Pulled By: mrkev

fbshipit-source-id: 06fe02430aadea761f30adb6a01218b732d818af",False
cef619103cae3d81ff2f075f1d48f7c4d057b237,2020-07-29 00:39:13,Tunde Thomas,"adds highlight in docs (#2469)

Summary:
**Summary**

Adds a simple highlight in the docs  for rich styling.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2469

Reviewed By: elboman

Differential Revision: D22785878

Pulled By: mrkev

fbshipit-source-id: 3f0e2f2863d774935d3a181e4bf7c210a1cd31f2",False
170fe23a614e32d0a1f7631fe28e2076bde41181,2020-07-29 00:39:12,Michaël De Boey,"Update QuickStart-API-Basics.md (#2491)

Summary: Pull Request resolved: https://github.com/facebook/draft-js/pull/2491

Reviewed By: elboman

Differential Revision: D22788091

Pulled By: mrkev

fbshipit-source-id: c83b95a355f0aecfaf6f5ed35a4fdde3b4fbe05a",False
3eb391e78f151f3bab4fe72130b4979a256e5032,2020-07-28 23:52:40,Michaël De Boey,"Update .travis.yml (#2495)

Summary: Pull Request resolved: https://github.com/facebook/draft-js/pull/2495

Reviewed By: claudiopro

Differential Revision: D22785909

Pulled By: mrkev

fbshipit-source-id: 8f80b992be187aaeea3f237cf26497adb0a1f96d",False
6a55c383dbe0d92974bb2a4d6dcbed35bee1366f,2020-07-28 23:31:04,Rounak Agarwal,"Update link to Record in docs (#2418)

Summary:
**Summary**
Record in docs, wherever mentioned, links to http://facebook.github.io/immutable-js/docs/#/Record/Record which then redirects to https://immutable-js.github.io/immutable-js/

However, the correct link for Record is https://immutable-js.github.io/immutable-js/docs/#/Record

Pull Request resolved: https://github.com/facebook/draft-js/pull/2418

Reviewed By: elboman, claudiopro

Differential Revision: D22785904

Pulled By: mrkev

fbshipit-source-id: 225dedb2198b7e11023c2aa7eed75901d7c558bf",False
31dde91ad714fe29133a82c0c9ae3a86aa2008b1,2020-07-28 08:27:25,Rounak Agarwal,"Update link to Immutable Map in docs (#2530)

Summary:
**Summary**
Map in docs, wherever mentioned, links to http://facebook.github.io/immutable-js/docs/#/Map and also in some cases to http://facebook.github.io/immutable-js/docs/#/Record/Record which then redirect to https://immutable-js.github.io/immutable-js/

However, the correct link for Map is https://immutable-js.github.io/immutable-js/docs/#/Map

Draft.js uses immutable 3.7.4 which released on 18 Jun 2015 according to this commit https://github.com/immutable-js/immutable-js/commit/09f04e910bd0b891d1373eb2cb2648a0546fab3d
I have linked `Map` to the docs for that version(captured on 23 Jun 2015) through the Internet Archive.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2530

Reviewed By: creedarky

Differential Revision: D22784847

Pulled By: mrkev

fbshipit-source-id: e91c92d2d26b09266bc6e53bb5e0eed0646ec60a",False
1c8815a19db8e56735c6567f5d83fed129835bbb,2020-07-28 06:57:55,Kevin Chavez,"Upgrade browserify and babel deps in universal example (#2532)

Summary:
**Summary**

We want to do this to get rid of some of those dependabot PRs.
**Test Plan**

Ran the example. Everything works like it did before.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2532

Reviewed By: creedarky

Differential Revision: D22779863

Pulled By: mrkev

fbshipit-source-id: b2353075673786e73cdaa38273462626a0f0c991",False
ccd0470b1cfc902f6daeedf35a9df026083a2550,2020-07-28 04:57:34,Kevin Chavez,"Upgrade eslint, flow, jest (#2531)

Summary:
**Summary**

Trying to get rid of all these dependabot PRs. This upgrades aslant, flow and jest.

**Test Plan**

All output is still the same.

NOTE: The lint is broken due to rules that exist in fb but not externally. That should be fixed in another PR altogether.

Pull Request resolved: https://github.com/facebook/draft-js/pull/2531

Reviewed By: creedarky

Differential Revision: D22779270

Pulled By: mrkev

fbshipit-source-id: 732f926594a2214daa3558a28502b513b32dc1cf",False
5482c90237c4b271f4ad36ee8eec3ff71234c1d8,2020-07-28 02:10:44,Kevin Chavez,"Fix the build by adding an argument to catch statement

Summary:
Turns out D22722736 (https://github.com/facebook/draft-js/commit/36de6f1f201537d9e21654188bb7483a6b4ae76e) broke the OSS build: apparently `catch` without arguments is a [fairly new feature](https://stackoverflow.com/questions/21624456/can-i-use-a-try-catch-in-javascript-without-specifying-the-catch-argument-identi) that UglifyJS doesn't understand. Whoops. It threw:

```
ERROR: Unexpected token: punc «{», expected: punc «(»
```

Go figure.

It seems unlikey that it's possible, but it'd be cool if the TravisCI build status could block lands in www. There's no way to get signal about this until after the fact. /:

Reviewed By: creedarky

Differential Revision: D22771035

fbshipit-source-id: cd61c6a3ca2aab534c99939a4fb7f29a8863c2ea",False
36de6f1f201537d9e21654188bb7483a6b4ae76e,2020-07-25 00:24:14,Claudio Procida,"Conditionally invokes URI.tryParseURI in OSS code

Summary:
Conditionally invokes URI.tryParseURI in OSS code because it's not available in fbjs.

I am on the fence on this one, we need it internally but we can't break OSS consumers of Draft. I think the optional chaining operator with a fallback is a pretty conservative option, however it does look clowny af.

Differential Revision: D22722736

fbshipit-source-id: d8630899b88bd0961ed2e8be86ab25d4369d40d6",False
9a9ccbd5cdcfa09c1f7d37f1bdf5593b3e9a372b,2020-07-23 16:45:06,Laura González,"formatPastedText prop

Summary:
A missing use case for draft i've ran into a couple times is that when text is pasted, there are ways to override the default paste handler and do your own thing. Overriding the default paste handler means you have to manage your own fragment, have logic to handle html potentially, and then insert the blocks you generate in the proper place relative to the cursor and selection. More often than not, this seems overkill?

An example: (and the reason I'm posting this RFC) is that i'm trying to turn leading tabs into spaces when pasting markdown lists, since they can't be parsed. Users can't actually _type_ a tab so this is only a problem on pastes. Reimplementing the paste handler for this is doable but using the proposed method, it's implementation becomes a oneliner.

## Precedent

There's some precedent to this type of handler. `blockRendererFn` and `blockStyleFn` both plug into a similar way, overriding the default implementation.

Then  `handlePastedText` of course works similarly and I decided to copy its signature, when it comes to naming all `handle*` functions return a handle, which is not what we want in this case.

## Q's

Handling html might be a bit smelly? it is doable but you really don't wanna transform raw html to raw html, at that point you do wanna replace the paste handler.
What I've done is that it's the responsibility of `formatPastedText` to pass the html result through or eat it up and return undefined, formatting only the static text.
I'd be cool with just assuming that if `formatPastedText` exists, we ignore `html` automatically, and that simplifies the signature

Reviewed By: claudiopro

Differential Revision: D22574367

fbshipit-source-id: afe1fac1bb11328e354805161cf9489a77245eff",False
862a5b2b54e3dc7054c231ef4f41db14f98ee771,2020-07-21 23:12:22,Frank Thompson,"fix pasting invalid links

Summary:
I got a bug report today where someone was trying to copy/paste some content and nothing happened at all. I discovered that this was due to a bad link in her content, something like this:

```
<a href=""https:// https://www.facebook.com"">Faceboook</a>
```

In Chrome, this passes all the checks in `isValidAnchor`, but throws an error later on this line inside `_addAnchorNode`:
```
entityConfig.url = new URI(anchor.href).toString();
```
To account for this, I added an explicit `URI.tryParseURI` inside `isValidAnchor`.

Reviewed By: claudiopro

Differential Revision: D22601322

fbshipit-source-id: 61cf050bb6e4a31bbe95995ad3f57e8f39a1d954",False
fc9395fe7ebf077db903c9c8fed71f136528ea5b,2020-07-21 22:06:32,Abhishek Pandya,"Add support to create editor state using text string

Summary: - Adds api to create editor state using text string

Differential Revision: D22628246

fbshipit-source-id: e1f1c4bcc68c780de6edf68e407c196bf4c836e1",False
fb0eb34c7a0b80ee8cd772cecd3041724dd3c2f1,2020-07-21 06:45:46,Claudio Procida,"chore(dependabot): adds examples directories separately (#2505)

Summary:
**Summary**

Adds examples directories containing a `package.json` file individually. Resolves https://github.com/facebook/draft-js/issues/2420.

**Test Plan**

Laser eyes {emoji:1f440}

Pull Request resolved: https://github.com/facebook/draft-js/pull/2505

Reviewed By: mrkev

Differential Revision: D22617258

Pulled By: claudiopro

fbshipit-source-id: b56fb58c3e3d87e814b00faec850a5968d2455b8",False
2b8edb18b37c985d184373bdccd4a43b5054447e,2020-07-21 06:45:45,Claudio Procida,"style(website): Removes desaturation (#2504)

Summary:
**Summary**

Removes the desaturation applied to the Draft.js website and restores its original color

**Test Plan**

Manual tests with `cd website && yarn start`

## Before
<img width=""1392"" alt=""Screen Shot 2020-07-18 at 12 23 03 PM"" src=""https://user-images.githubusercontent.com/860099/87850561-742cfb80-c8f1-11ea-80d0-fcbbfd5e13ff.png"">

## After
<img width=""1392"" alt=""Screen Shot 2020-07-18 at 12 22 53 PM"" src=""https://user-images.githubusercontent.com/860099/87850564-78591900-c8f1-11ea-85f3-855d8de491f5.png"">

Pull Request resolved: https://github.com/facebook/draft-js/pull/2504

Reviewed By: mrkev

Differential Revision: D22617216

Pulled By: claudiopro

fbshipit-source-id: fc5c8622814bb6d890bd133edbf4a4a4095079fe",False
744a419f9572962ffda2d61243db4e2948ac394c,2020-07-18 04:54:10,Stefan Filip,"S205607: update all file contents back to original values

Summary: S205607

Reviewed By: StanislavGlebik

Differential Revision: D22608606

fbshipit-source-id: 10d4126afb64cb3b1efa56c00f87a5bb49b9add9",False
a69f63cb099fea74f55a86afa1be6f68eb41cdec,2020-07-18 04:54:10,Stefan Filip,"S205607: force new contents to redacted files

Summary: S205607 cleanup

Reviewed By: StanislavGlebik

Differential Revision: D22608608

fbshipit-source-id: 4f25d02501c9d6ce151d9345ede3a0724271a46c",False
5e17cc24d1f2df842ac5558db4f841189cafea5d,2020-07-17 19:33:22,R Nabors,"Fixes links accessibility by adding underlines (#2497)

Summary:
Closes https://github.com/facebook/draft-js/issues/2494

Pull Request resolved: https://github.com/facebook/draft-js/pull/2497

Differential Revision: D22579546

Pulled By: claudiopro

fbshipit-source-id: 32d78fd6296013878820084ba8fd1e6343285ccb",False
8457ebba8bc58ef8804346422bd644e4e2f8fb51,2020-07-11 03:44:10,Daniel Sainati,"add codes to suppressions in www

Summary:
This updates `www` suppressions to use error codes.

This diff was generated by running

```
~/fbsource/fbcode/flow/tool update-suppressions ~/www --bin ~/fbsource/fbcode/flow/facebook/flowd
hg status -n --rev master | xargs -P 20 -n 1000 prettier --write --require-pragma
hg status -n --rev master | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r master
hg status -n --rev master | xargs grep -P -l 'lightSyntaxTransform' | xargs hg revert -r master
flow --json | jq -r '.errors[] | .message[] | .loc.source' | sort -u | xargs hg revert -r master
arc rebuild
hg st -n | xargs -n 500 hg commit -m ""[Flow][Codemod] add codes to suppressions in www""
```

on top of D22399626

bypass-lint
allow_many_files
drop-conflicts

Reviewed By: pieterv

Differential Revision: D22462377

fbshipit-source-id: 5c1d51e5b000a734c770d7a3e6b70fdf209cf154",False
fb728fde4f041270f2234263a8572a8fe4d50258,2020-07-07 22:52:58,Daniel Sainati,"update comments in mobile to support error codes

Summary:
This updates `html/js/mobile` suppressions to use error codes.

This diff was generated by running
```
~/fbsource/fbcode/flow/tool update-suppressions ~/www/html/js/mobile --bin ~/fbsource/fbcode/flow/facebook/flowd
hg status -n --rev master | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r master
hg status -n --rev master | xargs grep -P -l 'lightSyntaxTransform' | xargs hg revert -r master
~/fbsource/fbcode/flow/tool add-comments ~/www/html/js/mobile
~/fbsource/fbcode/flow/tool add-comments ~/www
```
on top of D22399626

bypass-lint
allow_many_files
drop-conflicts

Reviewed By: jbrown215

Differential Revision: D22400003

fbshipit-source-id: 879530c4f37a8c4d1159fce1d7a36bdde27996d7",False
d949433d69c99e7514c700afab002ce76143ad2a,2020-07-06 23:55:18,Kevin Chavez,"Use object shorthand in DraftEditorCompositionHandler

Summary: We were getting lint errors. This shouldn't change behaviour at all.

Reviewed By: claudiopro

Differential Revision: D22360887

fbshipit-source-id: 6d5c3b62d64ff69c02788de570ddebfd860dabc6",False
3be4d372f6848be4a0d285ec05f0bdb4a4562ced,2020-07-03 04:33:20,Robbert Brak,"Force the selection when composition is resolved (#2094)

Summary:
Fixes https://github.com/facebook/draft-js/issues/2093.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2094

Reviewed By: claudiopro

Differential Revision: D21770987

Pulled By: mrkev

fbshipit-source-id: f198a89ce2eae69328daa5ce917085ce0d726dba",False
a08a8fa5d18b13dc4381f81b08adfbbc5b023166,2020-06-09 05:57:37,Claudio Procida,"fix(security): Upgrades Docusaurus to address CVE-2020-7662 (#2457)

Summary:
**Summary**

Upgrades Docusaurus and its dependencies to address [CVE-2020-7662](https://nvd.nist.gov/vuln/detail/CVE-2020-7662) affecting the [websocket-extensions](https://npm.im/websocket-extensions) dependency of the website package.

Note I upgraded to `docusaurus/core@^2.0.0-alpha.48` because upgrading with `yarn upgrade` alone revealed the issue described by https://github.com/facebook/docusaurus/issues/2385 and fixed in `v2.0.0-alpha.48`.

**Test Plan**

```
# procidac at <redacted>.thefacebook.com in ~/dev/gh/claudiopro/draft-js/website on git:fix-cve-2020-7662 ● [21:21:54]
→ yarn why websocket-extensions
Using globally installed version of Yarn
yarn why v1.12.1
warning package.json: No license field
[1/4] �  Why do we have the module ""websocket-extensions""...?
[2/4] 🚚  Initialising dependency graph...
warning No license field
[3/4] 🔍  Finding dependency...
[4/4] 🚡  Calculating file sizes...
=> Found ""websocket-extensions@0.1.4""
info Reasons this module exists
   - ""websocket-driver"" depends on it
   - Hoisted from ""websocket-driver#websocket-extensions""
   - Hoisted from ""docusaurus#core#webpack-dev-server#sockjs#websocket-driver#websocket-extensions""
info Disk size without dependencies: ""96KB""
info Disk size with unique dependencies: ""96KB""
info Disk size with transitive dependencies: ""96KB""
info Number of shared dependencies: 0
✨  Done in 0.66s.

# procidac at <redacted>.thefacebook.com in ~/dev/gh/claudiopro/draft-js/website on git:fix-cve-2020-7662 ● [21:23:59]
→ yarn start
```

Website launches and looks functional:

<img width=""1392"" alt=""Screen Shot 2020-06-05 at 9 22 01 PM"" src=""https://user-images.githubusercontent.com/860099/83919726-21e5b000-a773-11ea-8a36-4e390757f319.png"">
Pull Request resolved: https://github.com/facebook/draft-js/pull/2457

Reviewed By: mrkev

Differential Revision: D21911260

Pulled By: claudiopro

fbshipit-source-id: 17392a0596b1f6ffc6db184980313d5dab1bea26",False
8b8b9c009d0ddb9b00e10990c87b1a55af03d3b5,2020-06-06 01:18:59,Jeff Dickey,"Allow aria-describedby overriding

Summary:
Currently it's not possible to have draft-js *not* emit an `aria-describedby` attribute. This diff allows the developer to remove it.

This attribute points to the generated DOM id of the placeholder. Currently even if no placeholder was specified **[minor bug]**.

I will need this in order to complete T67720986. It will also resolve this [GitHub issue](https://github.com/facebook/draft-js/issues/1739).

Fixing the GitHub issue meant that I needed a way to have the generated placeholder ID as well as a second specified one. The special token ""{{PLACEHOLDER}}"" can be used inside the prop to be replaced with that generated ID.

Fixes https://github.com/facebook/draft-js/issues/1739

Reviewed By: claudiopro

Differential Revision: D21808668

fbshipit-source-id: c27fe0fa8237518f1e2b6830cc8a3e13b3a9d8c7",False
1dc786385c04c2078444be02531ff78b113ecbfb,2020-06-05 14:08:47,Claudio Procida,"Prepares v0.11.6 release (#2456)

Summary:
**Summary**

Updates the changelog and package.json for the v0.11.6 release

**Test Plan**

```
yarn test
yarn lint
yarn lint-docs
```

**Note:** `yarn lint-docs` exits with error, I'll look into why later
Pull Request resolved: https://github.com/facebook/draft-js/pull/2456

Reviewed By: mrkev

Differential Revision: D21882713

Pulled By: claudiopro

fbshipit-source-id: a53afb778dfd761c439c1956ac8f0bc8d098b90d",False
2a0c5bbe1709ed32b0ceedad420a81af3e84947f,2020-06-03 05:40:25,claudiopro,"Adds BLM banner (#2454)

Summary:
**Summary**

Adds a Black Lives Matter banner like other OSS projects of the React family

**Test Plan**

Local tests

```
cd website
yarn
yarn start
```

## Screenshots
<img width=""752"" alt=""Screen Shot 2020-06-02 at 21 10 00"" src=""https://user-images.githubusercontent.com/860099/83565342-2a8d7a80-a516-11ea-9eb8-697f1f781a4c.png"">

<img width=""1392"" alt=""Screen Shot 2020-06-02 at 21 09 18"" src=""https://user-images.githubusercontent.com/860099/83565335-26615d00-a516-11ea-8e6f-cad0d3f3cc2f.png"">

<img width=""1072"" alt=""Screen Shot 2020-06-02 at 21 10 07"" src=""https://user-images.githubusercontent.com/860099/83565349-2bbea780-a516-11ea-85d8-c9da292998c7.png"">
Pull Request resolved: https://github.com/facebook/draft-js/pull/2454

Reviewed By: mrkev

Differential Revision: D21849517

Pulled By: claudiopro

fbshipit-source-id: c4b8944b7cbfbe9603bde4ad5128f3826ecb1f04",False
92176ab2de47220b8230cc2a9994486b33f395ff,2020-05-26 14:14:19,Giulio Jiang,"Fix draft-js pasted inline styles

Summary:
Inline styles were not being parsed correctly for code styles, because snippets copied from other posts only use HTML fontFamily properties to make them different.

This diff adds some code to detect those code snippets.

Differential Revision: D21662325

fbshipit-source-id: 75ffee4a91af7036033eeaaa4985111d02dd9443",False
45bb6b52a169abcc527eb0737937abd19105fdfa,2020-05-21 05:56:27,Jacob D. Castro,"Add Null return value type in code example (#2429)

Summary:
**Summary**

TypeScript threw this error when I attempted to copy and paste in my code:
```
Type 'null' is not assignable to type 'string'.ts(2322)
```

The `getDefaultKeyBinding()` method may return null. So I added `| null` to the return type declaration. Just thought it would help others who may also be copying/pasting the code!

**Test Plan**

No testing required.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2429

Reviewed By: kedromelon

Differential Revision: D21652264

Pulled By: mrkev

fbshipit-source-id: c820028da1ec6eb17055aceb5a751f7d01636b83",False
e3a689dfc77d9c34efaff1c2bf5e2ac964b77f42,2020-05-21 05:42:42,Kevin Chavez,"Add /meta/bundle-size-stats to .gitignore (#2436)

Summary:
These files are a big source of merge conflicts and cognitive overhead. There's really no reason to be included.

- If we want to get the stats for an old commit, we can checkout that old commit and build draft.
- They really aren't used by anything else in the repo.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2436

Reviewed By: kedromelon

Differential Revision: D21658277

Pulled By: mrkev

fbshipit-source-id: fe57ba05220e6aa8e945c212a123997ba162f535",False
79a25b5cbce4f4fdb33fe01bda75ae772451266d,2020-05-21 04:41:52,Kevin Chavez,"Update eslint, cross-env and gulp-derequire. Fix version numbers for … (#2437)

Summary:
Updated some deps, and noticed the version number in the `package.json` for some others wasn't semver, so fixed and tested those too.

## Test

`yarn`
`npm run test`
`npm run lint`
Pull Request resolved: https://github.com/facebook/draft-js/pull/2437

Reviewed By: kedromelon

Differential Revision: D21658500

Pulled By: mrkev

fbshipit-source-id: 39b507dfbae1dd9c2d1b9730b0427f06c5788da1",False
05e838e681c46c41f73d692109eaedc4f95fd803,2020-05-20 21:26:12,Benjamin Atkin,"docs: in react hooks example, limit createEmpty calls (#2432)

Summary:
In the React hooks example, `EditorState.createEmpty` will be called each time the component is rendered. By wrapping it in a function, it will only be called once per instance of the MyEditor component.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2432

Reviewed By: claudiopro

Differential Revision: D21652207

Pulled By: mrkev

fbshipit-source-id: 0c24a4e84718227b4e89d1c810b2558ffd51384d",False
e5e293f100220d33d762722dc55462d6c0d5e692,2020-05-20 21:26:11,Mohamed ABDELLANI,"Update Overview.md (#2434)

Summary:
**Summary**

Import `Draft.css` in the getting started example.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2434

Reviewed By: claudiopro

Differential Revision: D21652152

Pulled By: mrkev

fbshipit-source-id: 27edcd7ec883fbb83c9dc06661ade9513f9f0b5d",False
9ac399cc088605e60ad993ed14d00db3283fc8db,2020-05-20 08:07:25,Kevin Chavez,"Upgrade jest and flow-bin deps (#2435)

Summary:
`handlebars` was a dependency of `jest` but has since been removed, so this should also close https://github.com/facebook/draft-js/pull/2428.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2435

Test Plan: `npm run jest` && `npm run flow`

Reviewed By: kedromelon

Differential Revision: D21653714

Pulled By: mrkev

fbshipit-source-id: 7b2139663b48d9ec674254f6c5dfd1a68f60a3b0",False
268ece35025ecc280282a5169a0a4620f00e3371,2020-05-20 02:56:14,Kevin Chavez,"Revisit comment for todo of T65805998, validate there's nothing to worry about

Summary:
Double-checked the `getRangeAt` here. Turns out we have nothing to worry about, this won't throw.

Updated the comment to reflect so. Not deleting it in case someone in the future wonders about this.

Reviewed By: claudiopro

Differential Revision: D21604262

fbshipit-source-id: 826169bbf060312b8feb4a5e6e1ebcdd5603f7ef",False
c75f1e4c0c90b979c55fbdd79576e502716f8d0b,2020-05-15 01:20:35,generatedunixname89002005287564,"html/shared/draft-js/model/transaction

Reviewed By: BobertForever

Differential Revision: D21377973

fbshipit-source-id: 868723c6151bdd996dd2127bbc90114c6e95336b",False
e66f39eff2677421e4a70f8e07365bc4e9598ff3,2020-05-12 09:40:26,Panagiotis Vekris,"types-first in html/js/mobile

Summary: Add some final fixes for types-first and enables the flag in mobile's .flowconfig

Reviewed By: samwgoldman

Differential Revision: D21485790

fbshipit-source-id: 5a588b9bc9d0e7eb17ad1c1b294b91257051de85",False
6619077c85825f206b6eb7eff418a96deb6fe1a2,2020-05-11 21:14:40,Kevin Chavez,"Update cadence for dependabot updates (#2402)

Summary:
Updates to `examples` aren't really an issue, since this is code the user runs in it's computer only when checking out draft.js. This PR makes dependabot post PRs for it monthly.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2402

Reviewed By: claudiopro

Differential Revision: D21443592

Pulled By: mrkev

fbshipit-source-id: 3865bda2ee612551bbe31010bd1123e579b936ff",False
6d619c6181b4d07d0a4cf108441e6915de84b0ad,2020-05-08 01:11:27,Kevin Chavez,"Address #2413 by making Firefox follow the same behaviour as Chrome (#2414)

Summary:
All info is in the https://github.com/facebook/draft-js/issues/2413 and this [Bugzilla issue](https://bugzilla.mozilla.org/show_bug.cgi?id=1625475).

Noteworthy from that Bugzilla thread is [comment 16](https://bugzilla.mozilla.org/show_bug.cgi?id=1625475#c16):

> I added a selectionchange listener to the document of Twitter, and I tried reproducing this with the STR in comment 10. Then, I confirmed that selectionchange event is fired as expected both on Firefox (Nightly) and Chrome (Release) when I click middle of the text node. So, **it might be a bug of React if the onSelect is not called as expected...**

This is worth future investigation, but for now let's just fix the bug.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2414

Reviewed By: kedromelon

Differential Revision: D21443875

Pulled By: mrkev

fbshipit-source-id: 8bd099ddc44e3c4cdac679e1d605c4da5146c1e8",False
7e604b06088ad21fbe132d995bcb18fa4a7e2165,2020-05-08 00:41:13,dependabot-preview[bot],"Bump alex from 8.0.0 to 8.1.1 (#2407)

Summary:
Bumps [alex](https://github.com/get-alex/alex) from 8.0.0 to 8.1.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/get-alex/alex/releases"">alex's releases</a>.</em></p>
<blockquote>
<h2>8.1.1</h2>
<ul>
<li>b6283b2 Refactor prose</li>
<li>3629145 Refactor language around what alex checks for</li>
<li>0612149 Update setup tutorial link</li>
</ul>
<h2>8.1.0</h2>
<ul>
<li>de8b339 Update <code>retext-equality</code></li>
</ul>
<h2>8.0.1</h2>
<ul>
<li>ebc61af Add <code>funding</code> field to <code>package.json</code></li>
<li>5f55841 Add setup tutorial link to <code>install</code> in <code>readme.md</code></li>
<li>1903a43 Update logo in readme</li>
<li>0658fde Update assets</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/get-alex/alex/commit/fde1c9a02d2ea48e5cb874f05c4dd04a1d3ffe8e""><code>fde1c9a</code></a> 8.1.1</li>
<li><a href=""https://github.com/get-alex/alex/commit/428737ca2f5fed1d51ce2c8c2796709058d422b2""><code>428737c</code></a> Fix xo</li>
<li><a href=""https://github.com/get-alex/alex/commit/b6283b2545332047348adbd98ceaa037e8a22a61""><code>b6283b2</code></a> Refactor prose</li>
<li><a href=""https://github.com/get-alex/alex/commit/be7ecfab104e0f44e24d95d77a2fcf0232daab66""><code>be7ecfa</code></a> Update Node in Travis</li>
<li><a href=""https://github.com/get-alex/alex/commit/0cc55023ac92da4a691c45f8156790b09d204176""><code>0cc5502</code></a> Update dev-dependencies</li>
<li><a href=""https://github.com/get-alex/alex/commit/36291459d5dcecf4807fa32e8d2018b34132ea5d""><code>3629145</code></a> Refactor language around what alex checks for</li>
<li><a href=""https://github.com/get-alex/alex/commit/061214981b6a61124e8ea67219ceb2b0b426afcc""><code>0612149</code></a> Update setup tutorial link</li>
<li><a href=""https://github.com/get-alex/alex/commit/8ab860fea401a99e9636b2f7bcaeadccca0a4777""><code>8ab860f</code></a> 8.1.0</li>
<li><a href=""https://github.com/get-alex/alex/commit/de8b339a38b486a1f9931a7ad756ff5c045cf035""><code>de8b339</code></a> Update <code>retext-equality</code></li>
<li><a href=""https://github.com/get-alex/alex/commit/98798bd43369a373e273eddac59887ae45a95f9a""><code>98798bd</code></a> 8.0.1</li>
<li>Additional commits viewable in <a href=""https://github.com/get-alex/alex/compare/8.0.0...8.1.1"">compare view</a></li>
</ul>
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=alex&package-manager=npm_and_yarn&previous-version=8.0.0&new-version=8.1.1)](https://dependabot.com/compatibility-score/?dependency-name=alex&package-manager=npm_and_yarn&previous-version=8.0.0&new-version=8.1.1)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

**Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.

You can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `dependabot badge me` will comment on this PR with code to add a ""Dependabot enabled"" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2407

Reviewed By: mrkev

Differential Revision: D21424837

Pulled By: claudiopro

fbshipit-source-id: 59f1537bc722ee39cca96dc2ce2b53d265bc6857",False
1f5d40ecb6477bf4e8b9b99ff9de769a0e14470a,2020-05-06 15:46:36,dependabot[bot],"Bump fstream from 1.0.11 to 1.0.12 in /examples/draft-0-10-0/tex (#2396)

Summary:
Bumps [fstream](https://github.com/npm/fstream) from 1.0.11 to 1.0.12.
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/npm/fstream/commit/42354590e23bb514eb5c869eea64406be2947c6c""><code>4235459</code></a> 1.0.12</li>
<li><a href=""https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22""><code>6a77d2f</code></a> Clobber a Link if it's in the way of a File</li>
<li>See full diff in <a href=""https://github.com/npm/fstream/compare/v1.0.11...v1.0.12"">compare view</a></li>
</ul>
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=fstream&package-manager=npm_and_yarn&previous-version=1.0.11&new-version=1.0.12)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2396

Reviewed By: claudiopro

Differential Revision: D21415704

Pulled By: mrkev

fbshipit-source-id: 0d678884b2c1af981cb1e120bff82ded879cbd37",False
9d6bbfdc02474c2781f7ad5264dc333ba193c5a9,2020-05-02 01:39:10,Frank Yan,"Prevent placeholder from unnecessarily wrapping (#2392)

Summary:
In Safari, the placeholder text sometimes wraps into multiple lines before it reaches the full width of the editor.
The addition of `width: 100%;` prevents the absolutely-positioned placeholder from trying to ""shrink-wrap"", which causes the unnecessarily wrapping.
Steps to reproduce:
1. Open the editor with a placeholder that takes up >50% but <100% of the editor width in Safari.
2. Type a character.
3. Press backspace.

*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

[...]

**Test Plan**

[...]
Pull Request resolved: https://github.com/facebook/draft-js/pull/2392

Reviewed By: fryn

Differential Revision: D21319038

Pulled By: mrkev

fbshipit-source-id: b03c8afa47873ea210207aadb0225db8801bd84e",False
9028881cec210e19987f06b6ced56761b325bf2c,2020-05-01 07:46:21,dependabot[bot],"Bump acorn from 6.0.5 to 6.4.1 in /examples/draft-0-10-0/tex (#2376)

Summary:
Bumps [acorn](https://github.com/acornjs/acorn) from 6.0.5 to 6.4.1.
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/acornjs/acorn/commit/9a2e9b6678e243d66846b91179d650d28453e70c""><code>9a2e9b6</code></a> Mark version 6.4.1</li>
<li><a href=""https://github.com/acornjs/acorn/commit/90a9548ea0ce351b54f956e2c4ed27cca9631284""><code>90a9548</code></a> More rigorously check surrogate pairs in regexp validator</li>
<li><a href=""https://github.com/acornjs/acorn/commit/df0cf1a3e2b1a51a26c14984dc0f5412b7151b10""><code>df0cf1a</code></a> Mark version 6.4.0</li>
<li><a href=""https://github.com/acornjs/acorn/commit/53034126864b492da4e278628bb972cb2a9313d4""><code>5303412</code></a> Also export Parser via Parser.acorn</li>
<li><a href=""https://github.com/acornjs/acorn/commit/efe273e70123449a458157dbf578afaf109a49ab""><code>efe273e</code></a> give token types and etc to plugins</li>
<li><a href=""https://github.com/acornjs/acorn/commit/ac6decb94a3aa4eee99230fdaf5883dfaafe8479""><code>ac6decb</code></a> Mark version 6.3.0</li>
<li><a href=""https://github.com/acornjs/acorn/commit/7e9817d17639d95cc6dbacfde734a0626b2a7dea""><code>7e9817d</code></a> Allow sourceType: module even with ecmaVersion &lt; 6</li>
<li><a href=""https://github.com/acornjs/acorn/commit/e2b8cc087386eccc2ad6fd4a02b4257833557cb3""><code>e2b8cc0</code></a> Fix broken parsing of new expressions when allowReserved==&quot;never&quot;</li>
<li><a href=""https://github.com/acornjs/acorn/commit/1555c528855b10320ce98b4154906d7898c92990""><code>1555c52</code></a> Update acorn.d.ts</li>
<li><a href=""https://github.com/acornjs/acorn/commit/77c20fa2c2f490e646b67e6a0ff7e75fb54ab6c8""><code>77c20fa</code></a> Mark version 6.2.1</li>
<li>Additional commits viewable in <a href=""https://github.com/acornjs/acorn/compare/6.0.5...6.4.1"">compare view</a></li>
</ul>
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=acorn&package-manager=npm_and_yarn&previous-version=6.0.5&new-version=6.4.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2376

Reviewed By: claudiopro

Differential Revision: D21319063

Pulled By: mrkev

fbshipit-source-id: f362b1f6dd29b227aa9b1a3d576b79d8b7360d19",False
e1e9a0c51062a9cfc59d335e1ae5a8b01ed433cb,2020-05-01 05:00:36,Andrew Lauria,"HtmlConversion: Add support for telephone links (#2365)

Summary:
- This will allow html anchor tags with ""tel:"" prefixed hrefs to be rendered as links using the convertFromHTML method

*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

[...]

**Test Plan**

[...]
Pull Request resolved: https://github.com/facebook/draft-js/pull/2365

Reviewed By: creedarky

Differential Revision: D21318447

Pulled By: mrkev

fbshipit-source-id: d352eb7c731724dfe80e6c86a882f7b59ac88520",False
d1cb1e77d7a3d70e26ca5c153afd1f2be446f05d,2020-05-01 05:00:35,Tim Gates,"docs: Fix simple typo, sibbling -> sibling (#2384)

Summary:
There is a small typo in src/component/contents/exploration/DraftEditorBlockNode.react.js, src/model/modifier/exploration/NestedRichTextEditorUtil.js.

Should read `sibling` rather than `sibbling`.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2384

Reviewed By: creedarky

Differential Revision: D21318376

Pulled By: mrkev

fbshipit-source-id: 1a31e3724d7813e7ce6d36aba57ce298e742d46d",False
497a47879d6172adb14f88d492781880471b8f4d,2020-04-29 19:46:26,Claudio Procida,"chore(flow): Updates flow-bin to 0.123 (#2393)

Summary:
**Summary**

Updates flow-bin to 0.123 to keep it in sync with version used in `www`

**Test Plan**

```
→ yarn && yarn flow
Using globally installed version of Yarn
yarn install v1.12.1
[1/4] 🔍  Resolving packages...
[2/4] 🚚  Fetching packages...
[3/4] 🔗  Linking dependencies...
warning "" > stats-webpack-plugin@0.6.2"" has unmet peer dependency ""webpack@>=1.0.0"".
warning "" > uglifyjs-webpack-plugin@2.2.0"" has unmet peer dependency ""webpack@^4.0.0"".
[4/4] 📃  Building fresh packages...
...
$ flow src
Launching Flow server for /Users/procidac/Development/gh/claudiopro/draft-js/src
Spawned flow server (pid=73122)
Logs will go to /private/tmp/flow/zSUserszSprocidaczSDevelopmentzSghzSclaudioprozSdraft-jszSsrc.log
Monitor logs will go to /private/tmp/flow/zSUserszSprocidaczSDevelopmentzSghzSclaudioprozSdraft-jszSsrc.monitor_log
No errors!
✨  Done in 31.18s.
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2393

Reviewed By: mroch

Differential Revision: D21301861

Pulled By: claudiopro

fbshipit-source-id: c4d487dbdfd944c3b6cd97bea80da8abc66107ef",False
99c6b06cb6db19278a3675e57b6eb925cfa69fe3,2020-04-23 21:43:54,Shalabh Vyas,"7.C - Block Operations - Consume

Summary: Making the `createContentBlockFromJS` in `ContentState` public for re-usability.

Differential Revision: D21064309

fbshipit-source-id: bbbd6415631401c1cda91b58152a5e7b46d5ce05",False
0585b68fed5e1d732692f24989fa0fb1dd54c6f2,2020-04-23 01:38:55,Kevin Chavez,"Short-circuit getUpdatedSelectionState for invalid selection updates on prod

Summary:
The code already did this for __DEV__, but it was misswritten, since instead of skipping the wanring on prod, it skipped the whole check.

This essentially deals with empty-string keys, which mean nothing.

This wasn't much of an issue— we'd simply not get any leafs and exit on a following check.

Reviewed By: claudiopro

Differential Revision: D21145150

fbshipit-source-id: bb78aa076d98f5d642a2ae8eb13c158dde8a76e3",False
31dec7101459a4e4e722b00a26ef072317850d50,2020-04-23 01:38:55,Kevin Chavez,"Type selection object in setDraftEditorSelection.js

Summary:
Typing more selection code to prevent bugs. On this iteration, some behavioural change was necessary in two fronts:

1. IE doesn't have an `extend` method on selection objects, but we didn't check against this in one of the code paths. This should prevent `null is not a function` errors.

2. A code path could yield a `null` Node, but we dind't check agaisnt this. We call ` range.setEnd(node, offset)` with this node as an argument, but this function throws if `node` is `null`. This change should prevent `Failed to execute 'setEnd' on 'Range': parameter 1 is not of type 'Node'` errors.

Reviewed By: claudiopro

Differential Revision: D21144910

fbshipit-source-id: c41402fb7a8e884cbbb1a8ab3174ed1dd16f33ee",False
aa5c4a19c927d1023630963b0db8fa861c78e161,2020-04-23 01:38:54,Kevin Chavez,"Type selection object in keyCommandBackspaceToStartOfLine.js

Summary: Typing more things with the SelectionObject type. No change in behaviour. Added a comment for something I noticed— can be revisited later.

Reviewed By: claudiopro

Differential Revision: D21006848

fbshipit-source-id: f6337b11d48ca03974e65d7db5bd069a9f64523f",False
af6757555640f5cff2d3d0290afcbc8f3e9b023a,2020-04-21 08:41:38,Panagiotis Vekris,"Flow v0.123.0 in www

Summary:
```
cd ~/fbsource/fbcode
flow/facebook/deploy_www.sh 0.123.0
```

Reviewed By: dsainati1

Differential Revision: D21072854

fbshipit-source-id: 862c05a900475320eae125440f7cb199e92152e5",False
fbe3417eb939d518271b0c37f7be92465fc9d454,2020-04-21 07:55:59,Kevin Chavez,"Fix build by adding missing modules

Summary:
Recent diffs added these two dependencies, which live outside the draft-js folder and so they don't get copied over to the github repo.

Options:

- **Copy them as our own versions inside the draft.js folder.** This means they have to be named something unique, and since they are utility functions it'd be kind of odd.

- **Copy them to the folder of files that get shipped to the repo.** Since they live outside the realm of Haste, they can have the same name.

I went for the latter.

Reviewed By: creedarky

Differential Revision: D21148037

fbshipit-source-id: ba08de495912e23474df0d7649b6e64dbae45940",False
dfacb1b45cfc4c3b603c01a45a83dae331df02cb,2020-04-14 04:43:13,Kevin Chavez,"Type selection object in getDraftEditorSelection.js

Summary: We were missing a possible case: if there has been no selection, anchorNode and focusNode can be null.

Reviewed By: jack-arms

Differential Revision: D21002172

fbshipit-source-id: d84a5c6eb551d88898148d84e4961515f152f02c",False
2299714439544504db335a6edb35f0a8f5f3f501,2020-04-14 04:09:53,Kevin Chavez,"Type selection object in editOnBlur.js

Summary: No behaviour changed.

Reviewed By: claudiopro

Differential Revision: D20715111

fbshipit-source-id: 6438ea38fd15a34e38d46c8450b1f6969ec4b352",False
41beae1b6301acf5568dfc158896a3a360294ec9,2020-04-14 00:15:39,Kevin Chavez,"Type selection object in editOnInput.

Summary:
Recently I merged D20582792— it was a quick fix to a a huge problem that was causing thousands of exceptions for our users.

It could've been prevented with better typing, but wasn't caught by flow because the type of the selection object was assumed to be null.

Here I implement the type of the selection object, and in the process catch other elements that could be null and add safeguards to make our code more reliable. This are places where the previous implementation would've thrown an exception.

Reviewed By: kedromelon

Differential Revision: D20636236

fbshipit-source-id: 6e27040120256e3885bfdd2d9cbedf5e57988062",False
97dd19b222121059c401e637f8f97e9f6aef9070,2020-04-08 12:13:11,Marshall Roch,"upgrade to flow 0.122.0

Reviewed By: samwgoldman

Differential Revision: D20910409

fbshipit-source-id: 500d967cc72527d5a615a465a0651b451b045a53",False
3ee5a23ec681f6e903c4bacfe97d9d83f76bda9e,2020-04-06 20:24:02,Shalabh Vyas,"Add fromJS() API to Draft model objects

Summary:
# Facebook

Co-Editing Prototype is based on the approach of serializing the DraftJS state and syncing the states between users through GraphQL subscription. This is done on a node-by-node basis. Users lock the nodes they are editing and send updates to the other users when they update a node. They also receive broadcast from other users for the nodes those users updated.

The above approach requires serialization of DraftJS's `EditorState` and the ability to recreate this state (and it's hierarchy of Immutable JS records like `ContentState`, `BlockMap` etc) when loading an update from other user. This diff adds a `fromJS()` API (following the ImmutableJS terminology) to all the DraftJS model objects so that they can be constructed from a plain JS object (received post de-serialization).

Reviewed By: mrkev

Differential Revision: D20625291

fbshipit-source-id: d3f6c028b351dc19a5c352998884869b7158a435",False
13989e313da64392f72309d593669ff115348391,2020-04-06 20:24:01,Shalabh Vyas,"DraftEntity ID Changes

Summary:
# Facebook

CoEditing Prototype relies on syncing the state of the editor between different users so that we can propagate changes between them and hence have the document state synced between users.

**How DraftEntity Works**

`DraftEntity`, when creating a new entity uses incremental numbers as the key ([source](https://github.com/facebook/draft-js/blob/master/src/model/entity/DraftEntity.js#L211)) which can be a problem as two users can simultaneously create entity with the same id, say `6`, with different links thereby causing the document sync to go out of sync.

**Change**

- This diff changes how the keys are generated for new entities. Instead of incremental integers, we create a unique ID (using `uuid()`) and use that as the ID.
- Also exposes `getAll` and `loadWith..` functions that are used in subsequent diffs to get the map of entities and share them with other users and when a new updated map is received, load `DraftEntity` with that. (these changes have been tested already end to end at the top of the stack).

Reviewed By: mrkev

Differential Revision: D20495349

fbshipit-source-id: b65ba740b2c570318b6a471f47bdbf571acf1d5d",False
7d3d3c8fbb67ca1ebb77b2fd96389f2869eb7c93,2020-04-03 01:25:53,Frank Thompson,"use pasted block type if pasting to empty unstyled block

Summary:
DraftJS's paste handling is a little bit weird right now.

Suppose you have some arbitrary HTML that looks like this
```
<div>
  <h1>Some h1 content</h1>
  <span>Some other content</span>
</div>
```
or a DraftJS editor with an H1 block and an unstyled block with the same contents.

In either case, if you select both blocks of this content and paste into an empty editor, you get two blocks: one H1 and one unstyled.

But if you select *only the first block* and paste into an empty editor, you get a single unstyled block.

When you are inserting multiple blocks, `insertFragmentIntoContentState` checks whether to use the type of the target block or the pasted block based on whether the target block is empty:
```
return block.merge({
  text: headText + appendToHead.getText(),
  characterList: headCharacters.concat(appendToHead.getCharacterList()),
  type: headText ? block.getType() : appendToHead.getType(),
  data: appendToHead.getData(),
});
```
https://our.intern.facebook.com/intern/diffusion/WWW/browse/master/html/shared/draft-js/model/transaction/insertFragmentIntoContentState.js?commit=1001924671&lines=105

But when inserting a single block, this logic is not used.

This diff adds a similar check in `updateExistingBlock`, which handles the single block case. The difference is that the single block case **only** uses the inserted text's block type if the target block is **unstyled**. I did this because I thought it would be weird if you tried to paste text into a bulleted list or a block quote and it removed the styling.

Reviewed By: mrkev

Differential Revision: D20774564

fbshipit-source-id: c1490e17e5ecacea7891f9c7a5880f7eab8831e7",False
85764327e49f94397a83c3431f5a03cc02a18104,2020-03-31 11:50:50,Kevin Chavez,"Fix flow by allowing optional chaining (#2369)

Summary:
**Summary**

Turns out the optional chaining PR (https://github.com/facebook/draft-js/issues/2330) also broke flow. We should run a flow check automatically before we build, not just strip the types.

**Test Plan**

`flow .`
Pull Request resolved: https://github.com/facebook/draft-js/pull/2369

Reviewed By: claudiopro

Differential Revision: D20680346

Pulled By: mrkev

fbshipit-source-id: c30392a4e8084521c7e66f303fbc5f4832866e98",False
2658dd6011f5e5a78998b50c53047af3ef2a77f8,2020-03-31 06:40:25,Kevin Chavez,"Update deps for and cleanup playground example (#2368)

Summary:
**Summary**

The ""playground"" example needed some work: there were unused files, the link to the docs was out of date, the dependencies were out of date, and there were some CSS improvements to make panel resizing better. I apply said improvements in this change.

**Test Plan**

`yarn && yarn start` + play with the example.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2368

Reviewed By: claudiopro

Differential Revision: D20680357

Pulled By: mrkev

fbshipit-source-id: 305271e7bb6d4fa0f7cb1135827256fc2fafdcb0",False
d53fa7ab92864d47805c9e7509d7bde951372f58,2020-03-31 03:56:00,Kevin Chavez,"Only extend selection if it has ranges in setDraftEditorSelection.js

Summary: Needed for writing assistance. More correct than D20659377 IMO.

Reviewed By: raedle

Differential Revision: D20713362

fbshipit-source-id: 77b118ceb50eb50b385e0385c2cd07169512ddc4",False
538d864ea9bdfb4623aadc4e2cb1822da791f95a,2020-03-28 08:10:37,Kevin Chavez,"Update draft.js on website to v0.11.5 (#2370)

Summary:
Draft.js v0.11.5 was released yesterday! 🎉 Let's update the website to use the new version.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2370

Test Plan: Ran the site. Everything seems to work.

Reviewed By: nmn

Differential Revision: D20717210

Pulled By: mrkev

fbshipit-source-id: df59486ce913f9e184a2bbd8372740b222e46229",False
0950285dbfd7d8a6700187d4ad80a48de9f6100a,2020-03-28 05:17:46,Kevin Chavez,"Make a few types exact

Summary: We have some types that could benefit from being exact. In general these are preferable for reasons of control and safety.

Reviewed By: dunnbobcat

Differential Revision: D20637710

fbshipit-source-id: 5d6090c51309eff2154406da2de6ec5948ec9360",False
153482ff0471b2b5105ed98ec3f43fe68af094b8,2020-03-27 22:34:18,Jordan Brown,"Remaining non-generated non-reason-parsed files

Summary:
We are rolling out exact-by-default object type syntax to www. In order to do that, we need to turn all implicitly inexact objects `{}` into explicitly inexact objects `{...}`.

This diff has no runtime or type checking changes.

I generated this diff by first finding the non-generated files in www that still had implicit inexact objects. After adding `implicit-inexact-object=error` to the flowconfig, I ran:
```
flow --lazy-mode none --show-all-errors | grep -P ""\w[^ ]*:[\d]+:[\d]+"" -o | sed 's/:.*:.*//' | sort | xargs grep -L -P '@(partially-)?generated' > ~/files_to_codemod
phps CodemodConfigRunner CodemodConfigExactByDefault -m local -i ~/files_to_codemod
hg st -n | xargs -n 1000 hg commit -m ""codemod""
```

bypass-lint
allow_many_files
drop-conflicts

Reviewed By: gkz

Differential Revision: D20671138

fbshipit-source-id: 0ab07062eaa569d688ddba36b2c98bf0e709020f",False
94f6db8f8801b75924e689d210cf8c102a11d317,2020-03-27 02:29:56,Kevin Chavez,"Release v0.11.5 (#2367)

Summary:
Updates `CHANGELOG.md` and bumps version in `package.json` to `0.11.5` to get the package ready for publishing to npm.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2367

Test Plan:
```
yarn
npm publish --dry-run
```

Also played around with ""universal"" and ""playground"" examples. They are working.

Reviewed By: claudiopro

Differential Revision: D20671951

Pulled By: mrkev

fbshipit-source-id: 4c68d0fc40a6f5a7a52b38cf4df4782cac23d7f7",False
9c32317e06a8a75ba539aa5166197c76f0aa4f04,2020-03-25 05:25:15,Kevin Chavez,"Fix the build. Add optional chaining transform. (#2363)

Summary:
https://github.com/facebook/draft-js/issues/2330 broke the build (_sigh_). CI was broken for a while, so it wasn't immediately obvious too. Internally, we have supported optional chaining for a while, so importing to Phabricator didn't surface the error either.

We need a babel transform for optional chaining.

## Test plan.

Build draft. Build succeeds. Open one of the examples. It works.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2363

Reviewed By: creedarky

Differential Revision: D20632298

Pulled By: mrkev

fbshipit-source-id: 7a591c376330ee31bac5546a765920833b6bac00",False
db3216d9e2b35d976be5a56c69e680f7dcf714e1,2020-03-24 14:52:33,Konstantin Tarkus,"Fix Uncaught TypeError: Cannot read property 'nodeType' of null at ed… (#2330)

Summary:
https://github.com/facebook/draft-js/issues/2204
Pull Request resolved: https://github.com/facebook/draft-js/pull/2330

Reviewed By: claudiopro

Differential Revision: D20582792

Pulled By: mrkev

fbshipit-source-id: d96beaa1617ef82ba5663637f5daad254d9b17f7",False
dc8bfbb23c10e5c1fd4081ce2b7f37ac5912061e,2020-03-24 14:52:33,Kevin Chavez,"Update deps in 'universal' example (#2362)

Summary:
Apparently there's some vulnerability in debug@0.8.1— it's somewhere on the dependency tree of the 'universal' example. The update seems to have gotten rid of that version and hopefully of the vulnerability too.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2362

Test Plan: Ran example, it still works.

Reviewed By: claudiopro

Differential Revision: D20593655

Pulled By: mrkev

fbshipit-source-id: 0a92d59dbb9425b497617df2494c968dc8ff9837",False
9dede807140a9249bae5495f043eb15337b58125,2020-03-24 14:52:32,dependabot[bot],"Bump acorn from 6.4.0 to 6.4.1 in /website (#2352)

Summary:
Bumps [acorn](https://github.com/acornjs/acorn) from 6.4.0 to 6.4.1.
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/acornjs/acorn/commit/9a2e9b6678e243d66846b91179d650d28453e70c""><code>9a2e9b6</code></a> Mark version 6.4.1</li>
<li><a href=""https://github.com/acornjs/acorn/commit/90a9548ea0ce351b54f956e2c4ed27cca9631284""><code>90a9548</code></a> More rigorously check surrogate pairs in regexp validator</li>
<li>See full diff in <a href=""https://github.com/acornjs/acorn/compare/6.4.0...6.4.1"">compare view</a></li>
</ul>
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=acorn&package-manager=npm_and_yarn&previous-version=6.4.0&new-version=6.4.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2352

Reviewed By: claudiopro

Differential Revision: D20593689

Pulled By: mrkev

fbshipit-source-id: d07e517b8988b437690596d782f9de552828f948",False
01b726d89dfe4a654c0977845fa618bfea994b00,2020-03-21 12:12:55,Kevin Chavez,"Minor flow changes

Summary: Picked up these two changes that just make flow a little better.

Reviewed By: claudiopro

Differential Revision: D20546545

fbshipit-source-id: 4748c9b63670d65249f50e56e152f7db2a04856e",False
3858858bb5107b006b06bcd701c6c1752943fdd0,2020-03-21 08:36:08,George Zahariev,"Remove unused Flow suppressions in WWW

Summary:
Remove unused Flow suppressions in WWW with the current version of Flow (0.120). This will make deploying 0.121 easier.

bypass-lint

Reviewed By: panagosg7

Differential Revision: D20568355

fbshipit-source-id: fa8f20a06a39e790469225159a3c2126c650e251",False
e3ec139d0dc17c216e5764cc72a8a5cb71c5d8e7,2020-03-21 02:29:20,Kevin Chavez,"Fix examples by building non-minified version of draft again (#2359)

Summary:
When upgrading webpack a while back, we inadvertently broke the examples in the repo. This happened because by re-using our webpack stream, we only built the minified artifact (`Draft.min.js`) and not the non-minified one (`Draft.js`). The examples use the non-minified one.

This change doesn't cache the stream, so now there's one per artifact.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2359

Test Plan: `yarn`, open examples, they work again.

Reviewed By: kedromelon

Differential Revision: D20550220

Pulled By: mrkev

fbshipit-source-id: 62f269c7d4d41c93247f63a55efb7eab8ebaf286",False
792bd3abe9b2c8735e2917af30b3dc9b0055e3ab,2020-03-20 20:18:43,Kevin Chavez,"Improve types for EditorState

Summary: I'm on a quest to both understand Draft better and make it more reliable. The types for `EditorState` are not the best, so lets improve them.

Reviewed By: claudiopro

Differential Revision: D20545884

fbshipit-source-id: a4dde2952e1b981732b9923b3912acd5e965cfd4",False
fd16d8e2d7722adeb5cabd5c36142a2dfcedf594,2020-03-20 19:41:30,Kevin Chavez,"Remove examples for draft.js 0.9.0 (#2358)

Summary:
The API for draft 9 and in general that version is no longer supported. We don't need these examples. Moreover, I can see them potentially confusing newcomers. Next up, we should look at the examples for v0.10 and decide if they need to be updated for v0.11.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2358

Reviewed By: claudiopro

Differential Revision: D20542820

Pulled By: mrkev

fbshipit-source-id: 6b538dd3c2a2fe3f76532f16e1de066d68547d81",False
6e87246506ca59060cb4c6ebc7a9ac3e97609a2a,2020-03-20 03:15:51,Jordan Brown,"html/shared/

Summary:
We are rolling out exact-by-default object type syntax to www. In order to do that, we need to turn all implicitly inexact objects `{}` into explicitly inexact objects `{...}`.
This diff has no runtime or type checking changes.

I made this diff by running `phps CodemodConfigRunner CodemodConfigExactByDefault -m local html/shared` and then reverting generated files `hg st -n | xargs grep -P -l '@(partially-)?generated' | xargs hg revert`

bypass-lint
allow_many_files
drop-conflicts

Reviewed By: gkz

Differential Revision: D20521072

fbshipit-source-id: cf6b885474d0e3f087020a64158c988e27182522",False
e48f7e23d81cd4460d8a19393e9f50e2e7625b7e,2020-03-20 02:57:54,Kevin Chavez,"Update yarn.lock to fix travis build. (#2355)

Summary:
Travis is failing with `The command ""eval yarn --frozen-lockfile "" failed.` The lockfile is out of sync with package.json, which is usually not fatal but the ` --frozen-lockfile` flag means this throws.

This change fixes it, by doing `yarn install` and committing the changed lockfile.

------------------
EDIT: Also changes the flow name mapping for ReactDOM. It was failing since it's now ReactDOMComet.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2355

Reviewed By: claudiopro

Differential Revision: D20532615

Pulled By: mrkev

fbshipit-source-id: 666399be23772fc7383ced8875bb0220a4abedd2",False
9191a3f2a5e22c86106631aa5f21b5c21bbb3b85,2020-03-20 01:33:18,Kevin Chavez,"Don't SSR example editor on website. (#2356)

Summary:
There's suspicion the example editor fails in prod because of an SSR error, so lets not SSR-it. Also upgrades draft to the latest version on npm.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2356

Test Plan: `yarn start`, played around with the editor.

Reviewed By: claudiopro

Differential Revision: D20532633

Pulled By: mrkev

fbshipit-source-id: 934427d2e1a35232ee9f12632e539817a1f2eaa8",False
7ba51a36512df2e4cd65f4b59f42a2f07f6cba5d,2020-03-16 16:59:58,generatedunixname89002005287564,"html/shared/draft-js/model/immutable

Reviewed By: claudiopro

Differential Revision: D20280741

fbshipit-source-id: 6d7c36d69334b44c81a72a4f3ce58d706cae6966",False
6c1c6544d977c653987cd3883b4fa5c7ef10e68b,2020-03-10 01:41:32,Chris Lüer,"Deprecating Travis Bot files and configuration

Summary:
Deprecate Travis Bot: this touches
- the webhook
- removes it from automated deprecation warning comments on diffs
- Remove rules and triggers
- Script controller

Individual repo settings:
- draft-js webhook configuration
- hack webhook configuration

[TODO]: add post/documentation about move from Travis Bot to Task Notification here

Reviewed By: yns88

Differential Revision: D16993364

fbshipit-source-id: f233e6a478215d5328a2fa33f71888f74d62b839",False
e7ce06b7e7850c828dc93d70bcf6cfb6beb6aa56,2020-03-06 07:59:56,Naman Goel,"Revert D20016281: Fix iOS double-space quick-type bug

Differential Revision:
D20016281

Original commit changeset: aeefd5c3f17c

fbshipit-source-id: b39208ab5c59a462b59d05d0db4c9bab9ffe42a7",False
b4e2a2d52f2da7e054ed97eb78b6aa8e5532455a,2020-03-05 23:23:46,Naman Goel,"Fix iOS double-space quick-type bug

Summary:
Using a Pull Request from github that was made to fix this very bug, I was able to patch the code and fix the problem for us in the meantime.

Since the open-source and internal codebases are totally out of sync, it's not easy to merge the original PR right now.

https://github.com/facebook/draft-js/pull/1152

Reviewed By: claudiopro

Differential Revision: D20016281

fbshipit-source-id: aeefd5c3f17c51c62dd5d7c225cf62d0cd2db26f",False
9ab5c5e25d7951faa12c0329a64e25ec8941b10a,2020-02-26 10:24:39,Hans Halverson,"Move error suppressions to primary locations

Summary:
We will soon be enforcing that flow suppressions will only apply when on an error's primary location ([post](https://fb.workplace.com/groups/179614562644215/permalink/559286354677032/)). This diff uses the codemod created in D20008770 to move all suppression comments to their primary locations in www, and deletes suppression comments that are not on any primary locations.

This diff was generated with:
```
~/fbsource/fbcode/flow/packages/flow-dev-tools/bin/tool suppression-primary-locations --json-file ~/www/errors.json  ~/www
hg st -n | xargs grep -l -P '@(partially-)?generated' | xargs hg revert
hg st -n | xargs grep -l 'format' | xargs prettier --write
```

bypass-lint

Reviewed By: dsainati1

Differential Revision: D20104774

fbshipit-source-id: 489b31925c9d9c522bdd229906b06ad7b36c6a6b",False
66301633082df0daeb6b4d24d1bae3030722a323,2020-02-25 17:27:57,Dan Abramov,"Enforce ReactDOMComet in a Modern Environment

Reviewed By: sebmarkbage

Differential Revision: D20001993

fbshipit-source-id: e002176e49ccbf9db239e69691715bd798fc7966",False
b4a1db999208eeb77aaef7e73ff3558b99d38b12,2020-02-19 04:09:01,Kevin Chavez,"Strictify DraftEditorLeaf.react.js

Summary:
happyflow

Didn't need to change any functionality too.

Reviewed By: gkz

Differential Revision: D19894146

fbshipit-source-id: 9d94eab312b979257aeb79a57e10c8590a42a63a",False
0a4952c9372c160cd4eafbac5f8e345cc41db414,2020-02-14 18:27:39,Paresh Ghaghda,"Revert D19869948: Strictify RawDraftEntity, DraftEntityType, DraftEntityMutability

Differential Revision:
D19869948

Original commit changeset: 7e4648879b24

fbshipit-source-id: 4371e69b62421d6555539f35471b20ace0d4eb25",False
173a2281b7e08157c42a74b0d522b1cd8d206089,2020-02-14 06:19:35,Kevin Chavez,"Strictify RawDraftEntity, DraftEntityType, DraftEntityMutability

Summary:
This did involve changes in the code, because I had to change an `any` to a `mixed` in `RawDraftEntity`.

- Where possible, I just cast it back to `any`. This is possible in files that are `flow` and not `flow strict-local`. This keeps semantics, those any will be dealt with when said files are strictified, and their type safety is is strictly left same, if not improved by having the `any` be explicitly visible.

- In some instances, the `any` was being used as a string. I convert it into a string explicitly now, which should keep the same semantics.

- In one instance I check that the `any` is a number, which is compatible with the semantics of the file.

Reviewed By: claudiopro

Differential Revision: D19869948

fbshipit-source-id: 7e4648879b24e258af5df4ebac4f5c0cd5f902fb",False
7af73b70e0b91a40af0399e33acfcb8ee82c6120,2020-02-14 02:15:00,Kevin Chavez,"Make decodeEntityRanges flow strict

Summary: Functionality shouldn't have changed, I just editeed types. I did have to edit and re-record a test that was wrong.

Differential Revision: D19868736

fbshipit-source-id: e65885cd4565756e6669a17692e2f63d46f0d730",False
d6527a953d7b3eb6f2c833e12ed38386325ce70f,2020-02-13 22:26:16,Sebastian Markbage,"Move more keys to static argument instead of spread

Summary: This pattern is deprecated. Key has to be spread as a static argument instead of through props. These are some of our highest firing callsites.

Reviewed By: mrkev, gaearon

Differential Revision: D19873502

fbshipit-source-id: 9dd43ae625edffbb3c5dbe29237f7b769726fa04",False
6cfed736aaeca6e8be7d93b7c6b196ed23185b80,2020-02-13 14:38:43,Agastya Chandrakant,"""ecmascript"" => ""ECMAScript"" (#2327)

Summary: Pull Request resolved: https://github.com/facebook/draft-js/pull/2327

Differential Revision: D19868957

Pulled By: mrkev

fbshipit-source-id: 769f8beaa65a638d6694de93bcabbd017a9dd01c",False
24339f126738139f578b03074f416143de14f832,2020-02-11 00:23:50,Sebastian Markbage,"ReactDOMComet

Reviewed By: catchingash

Differential Revision: D19522615

fbshipit-source-id: 6829a906faa2cc5fd8feb4e5e7b85c1450287260",False
a9fcbb201de604e040dacb66e67407989a0e2d9b,2020-02-10 17:28:38,Steven Luscher,"Prevent (but not fix) ‘Cannot read property 'getIn' of undefined’ in getUpdatedSelectionState

Summary:
`getBlockTree()` can sometimes return undefined, despite its Flow type saying it always returns a list (eg. `List<any>`). This change protects against this possibility, falling back to the dev-time console warning below.

We can address the root cause later.

Reviewed By: claudiopro

Differential Revision: D19799354

fbshipit-source-id: 39a04a5de80853e5be76020a906f08a6c213685d",False
3251017d474500fb4634e6271558857ef72808c2,2020-02-06 03:57:25,Ryan Silva,"Fix keyBindingFn documentation URL

Summary: Current URL is incorrect. Updated to the correct link.

Reviewed By: mrkev

Differential Revision: D19723305

fbshipit-source-id: 562c204e0d42f1535750b12c5eac62a0e759817d",False
c30ca735fa281126f3ff097157dd412c8d864981,2020-01-31 01:58:19,Kevin Chavez,"Make some more modules strict-local

Summary:
Only change to logic involved not modifying an argument (since arguments are constant in flow strict).

Also fixes a lint (newline missing).

Reviewed By: gkz

Differential Revision: D18329130

fbshipit-source-id: 79007c6591cb9e0398924801496d580715aca7b4",False
700256593c167349be259a7928aa79bced6b4d89,2020-01-29 04:38:50,Kevin Chavez,"Make isHTMLElement flow-strict

Summary: ¯\_(ツ)_/¯

Reviewed By: gkz

Differential Revision: D19418167

fbshipit-source-id: 65f0a19d0590c133b6bc4f5225c2e357f13c8daa",False
0131e1d57e57aaa9946cea9ae0e5470683d75aea,2020-01-29 04:24:35,Kevin Chavez,"Update webpack deps (#2310)

Summary:
**Summary**

This diff update build-related deps. We were creating more than one instance of `webpack-stream`, which is an error on the latest one, so I fix that too.

**Test Plan**

build && playground example
Pull Request resolved: https://github.com/facebook/draft-js/pull/2310

Differential Revision: D19598315

Pulled By: mrkev

fbshipit-source-id: 5430f96576cadbd4f16b5a597dc77b9cc026d002",False
963e31266e79b187d81c418d09e3bc45cfe096ae,2020-01-29 01:56:40,Kanitkorn S,"Remove unused gulp task remained from docusaurus 2 migration (#2308)

Summary:
**Summary**

Run yarn on the current master will produce an untracked file `website/static/css/Draft.css`. It's a remainder from the migration to Docusaurus 2 and should be deleted.

This will fix https://github.com/facebook/draft-js/issues/2304

**Test Plan**

I ran `cd website && yarn && yarn start` and the doc website works fine locally.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2308

Reviewed By: claudiopro

Differential Revision: D19519361

Pulled By: mrkev

fbshipit-source-id: 7ea79dbfeb98f7dddba7d8fccc3cfc4708990788",False
9b9376bd041559766fe86786c749a0d033c837b1,2020-01-28 16:41:00,Kevin Chavez,"Re-write `DraftEditorExample` in the website using react hooks (#2287)

Summary:
Also took the oportunity to clean up the component- it had unused imports and `_handleKeyCommand` was returning a boolean instead of `""handled""` and `""not-handled""`.

`yarn && yarn start`, used the editor.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2287

Differential Revision: D19598449

Pulled By: claudiopro

fbshipit-source-id: 275ef520c10f941236138211c8eb572c6df28f9d",False
bf5611c388dcdf54e90dd06e914ef93d2a5e278a,2020-01-27 23:24:53,Mike Vitousek,"Deploy Flow v0.117 to www

Summary: Flow 0.117

Reviewed By: nmote

Differential Revision: D19567450

fbshipit-source-id: 261f97de2d95d3e1ad128502bb33203ba2615421",False
3ba907bb2a4fb8cfa55c0135f485d25e8500db96,2020-01-27 22:22:31,Dan Abramov,"Add a preventScroll prop

Summary:
Browser scrolls to native editors when they get inserted into the DOM. Draft replicates that behavior. However, that behavior is occasionally not what we want at all.

As a result of this, we sometimes have ""scroll wars"" where different parts of the product code try to restore scroll after others change it. This is a source of bugs.

This adds a first-class way to disable this behavior. I named the prop a bit generically so that if I find more such cases, I can disable them too.

Reviewed By: steveluscher

Differential Revision: D19568181

fbshipit-source-id: ed4db22abebbdae1b11d84e1bf6d7772a840b3da",False
8c5004242ab6fa51b3aa1462f002d185392150c6,2020-01-27 22:22:31,Dan Abramov,"Add editorRef prop to DraftEditor

Summary:
We're gonna use it to remove some findDOMNode usage. This lets you access the actual contentEditable.

In the future, we might be able to remove the `.editor` and `.editorContainer` instance fields, and make them both refs.

Reviewed By: claudiopro

Differential Revision: D19555598

fbshipit-source-id: a86be5370a9fd173b3bb062ecc50cabdf9823b75",False
0dd3978104fea042e6cc01f00b62e5bbef764c0c,2020-01-25 06:58:20,Sebastian Markbage,"Remove findDOMNode from DraftEditorBlockNode

Summary:
This is part of DraftEditorContentsExperimental which is not actually rolled out anywhere.

It's only used on some test pages for specific users:

https://our.intern.facebook.com/intern/gatekeeper/projects/draft_tree_data_support/

I don't know if we have plans of actually rolling this out further. So I'll give it a benefit of a doubt that maybe we'll want to get back to it.

We have to 100% get rid of findDOMNode uses in React though and this is technically reachable from Comet if the GK turns on. So I have to fix it or remove it.

This diff fixes it by attaching a ref to the wrapper element created by blocks.

However, if this is rendered in a parent a wrapper is not created.

https://github.com/facebook/draft-js/blob/bafe30ab702c10b463fc7ee60bc2d6d9d4f7aef3/src/component/contents/exploration/DraftEditorBlockNode.react.js#L370

The non-experimental version uses a permanent wrapper div for this (D14716519):

https://github.com/facebook/draft-js/blob/dceddf552006ea607bc5c15ce3d1b629eca1cb70/src/component/contents/DraftEditorBlock.react.js#L241

However, I'm not sure how you can even create a nested custom block and if scrolling is even relevant in that case. So my fix disables the auto-scrolling in that edge case. Seems good enough to me given that nobody is currently using this. I defer to the Draft.js team for a more permanent fix if we're rolling this out further.

Reviewed By: gaearon

Differential Revision: D19564783

fbshipit-source-id: f8250133334824f130a4214999a4768f39d49f4b",False
c1a55ceb49e60e32424ee634096c219b71008d92,2020-01-24 02:15:20,Sebastian Markbage,"Remove findDOMNode in DraftEditorDragHandler

Summary:
As in my previous change, editor.editorContainer is always an element and doesn't need findDOMNode.

https://github.com/facebook/draft-js/blob/822d2fbd3597c3fe20cc2508d6a12d9a6f856999/src/component/base/DraftEditor.react.js#L370

This isn't exactly the same because the previous code got the parent node:

https://github.com/facebook/draft-js/blob/822d2fbd3597c3fe20cc2508d6a12d9a6f856999/src/component/base/DraftEditor.react.js#L366

However for this purpose they're the same. There are no listeners on the inner one and the event bubbles. We already have a ref to the inner one so might as well use it.

Now I think that this has since been fixed in React so we might  not need this workaround at all anymore.

Reviewed By: gaearon

Differential Revision: D19540873

fbshipit-source-id: 89f91105b97ae6b0eeb5b4d615642a79eef6ab92",False
9d587d9f1912ef720a95ed2710837bd353998375,2020-01-23 07:24:20,Sebastian Markbage,"Remove findDOMNode from getContentEditableContainer

Reviewed By: mrkev

Differential Revision: D19524937

fbshipit-source-id: 3fba5f71d7cdc725e00f3e40956b9f036949c7c7",False
b051fc1b39a809e0575fb585ff7fd626aae321f6,2020-01-17 02:10:05,Jordan Brown,"Upgrade to Flow explicit inexact object type syntax

Reviewed By: dunnbobcat

Differential Revision: D19416353

fbshipit-source-id: 26f111ed06e8ad7cee6717dbcb391f94e096f91a",False
824fd125e579932db0cb47c9dd55a7bc9462a8d9,2020-01-16 02:55:15,Kanitkorn S,"Upgrade eslint + flow, and fix failed test from nullishCoalescingOperator (#2083)

Summary:
**Summary**

I want to upgrade ESLint and Flow on this project. I ended up with
- Remove unused `eslint-plugin-relay`
- Upgrade all ESLint packages to the latest version and fix all the new lint errors afterward.
  - `eslint-config-fbjs`
  - `eslint-config-prettier`
  - `eslint-plugin-babel`
  - `eslint-plugin-flowtype`
  - `eslint-plugin-jsx-a11y`
  - `eslint-plugin-prettier`
  - `eslint-plugin-react`

- Upgrade Flow (`flow-bin`) to the `0.115.0`.

~Then I found that `yarn test` is failing at~
```
src/component/handlers/composition/__tests__/DraftEditorCompostionHandler-test.js: Support for the experimental syntax 'nullishCoalescingOperator' isn't currently enabled (70:40)
```
~So I added `babel/plugin-proposal-nullish-coalescing-operator` to jest preprocessor as well.~
Move plugins in `.babelrc` to jest preprocessor as https://github.com/facebook/draft-js/pull/2083#issuecomment-502032839

**Test Plan**

`yarn lint`, `yarn flow`, and `yarn test` should all pass.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2083

Reviewed By: claudiopro

Differential Revision: D19398251

Pulled By: mrkev

fbshipit-source-id: 4fc2f6dd6e0cd44266d061455b7b6a433231715a",False
bafe30ab702c10b463fc7ee60bc2d6d9d4f7aef3,2020-01-15 04:14:38,generatedunixname89002005287564,"Upgrade to Flow explicit inexact object type syntax

Reviewed By: jbrown215

Differential Revision: D19395428

fbshipit-source-id: 9929777ab964e4e38682acee7b17c76a19067fde",False
ad8374d278507ae73dceffd9bbbcede398f849e3,2020-01-14 02:33:46,Frank Thompson,"fix style handling in convertFromHTMLToContentBlocks

Summary:
# The Problem

`convertFromHTMLToContentBlocks` currently mishandles styles pretty significantly. It has a `currentStyle` attribute that is mutated as the HTML is processed. When processing a node, it determines what styles that node should have (by unioning styes inferred from the tag and styles inferred from the style attribute) and adds them to `currentStyle`. After it's done processing the node, it removes whatever it added.

This has several problems:
## Styles are *never* removed before rendering the children of a node
For example, if you have the following content:
```
<span style=""font-weight: bold"">
  <span style=""font-weight: normal"">
    Not bold!
  </span>
</span>
```
then the ""Not bold!"" text will actually be given the `'BOLD'` style.

## Styles are sometimes removed when they shouldn't be
For example, if you have the following content:
```
<span style=""font-weight: bold"">
  <span style=""font-weight: bold"">
    Bold!
  </span>
  <span>
    Still bold!
  </span>
</span>
```
then the ""Still bold!"" text will *not* be given the `'BOLD'` style.

## Styles from tag override styles from the style attribute

For example, if you have the following content:
```
<b style=""font-weight: normal"">Not bold!</b>
```
then ""Not bold!"" will be given the `'BOLD'` style. (In all browsers I've tested, this content would render as the normal font weight, so I'm assuming this should not have the `'BOLD'` style.)

# The Fix
Using a single `OrderedSet` of styles that is mutated as you process nodes can't fix the second issue mentioned above, because it simply does not store enough info to be able to know what styles it should be using at any given time.

So instead of using this attribute, I'm adding a `style` param to `_toBlockConfigs`. When a node has some styling applied to it, we just make a copy of the style object (implicitly, since it's an immutable `OrderedSet`) with the appropriate styles added or removed. When we're done processing the children of that node, we don't need to do any cleanup because the updated style object is simply thrown away.

In addition, we add styles from looking at tags before adding/removing styles based on the actual style attribute. This allows `<b style=""font-weight: normal"">Not bold!</b>` to actually render as non-bold text.

Reviewed By: mrkev

Differential Revision: D19295374

fbshipit-source-id: 0ba040a9a19de36d716a4fcd6f55bf57077f001e",False
e711230f38736dba127b561dedc813063c8de5c2,2020-01-09 23:46:31,Claudio Procida,"chore(travis): bumps node versions used in Travis CI to 10 and 12 (#2300)

Summary:
**Summary**

As of January 2020, Node 8 is past Active LTS end of life. This PR removes Node 8 from the Travis CI environment config and replaces it with Node 12.

https://nodejs.org/en/about/releases/

**Test Plan**

Tested locally building all targets on Node 12 with [nvm](http://nvm.sh/)
```
nvm use 12
yarn
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2300

Reviewed By: mrkev

Differential Revision: D19298082

Pulled By: claudiopro

fbshipit-source-id: 0ce83534231f1b881b2f56e0410e99319d0f2365",False
822d2fbd3597c3fe20cc2508d6a12d9a6f856999,2020-01-07 07:55:13,Panagiotis Vekris,"v0.115 remove unused suppressions

Summary:
removed unused suppressions
```
~/fbsource/fbcode/flow/tool remove-comments --bin `which flow` ~/www
~/fbsource/fbcode/flow/tool remove-comments --bin `which flow` ~/www/html/js/mobile
~/fbsource/fbcode/flow/tool remove-comments --bin `which flow` ~/www/html/js/service_workers
~/fbsource/fbcode/flow/tool remove-comments --bin `which flow` ~/www/html/js/bladerunner
```
reverted generated files
```
hg status -n | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r .
```
prettified
```
hg status -n | xargs grep -l 'format' | xargs -P 20 -n 1000 prettier --write
```
reverted changes due to lingering Flow errors
```
html/js/bladerunner/lib/live_feed/fetch_experiment/GraphQLBatchRequest.js
html/shared/ads/types/AdsDraftPublishRealtimeTypes.js
html/shared/banzai/BanzaiLooper.js
html/shared/draft-js/component/base/DraftEditor.react.js
html/shared/modules/BigPipe.js
html/shared/modules/ReactRenderer.js
```

drop-conflicts

Reviewed By: dsainati1

Differential Revision: D19290448

fbshipit-source-id: cfdaefb8b5244483192e93d9edf8649a2900d2c5",False
df1628e3f5bb06a93443ac2a825ad80ce17720ad,2020-01-07 02:10:39,Claudio Procida,"Release 0.11.4 (#2298)

Summary:
**Summary**

Updates `CHANGELOG` and bumps version in package.json ahead of `v0.11.4` release

**Test Plan**

```
yarn
npm publish --dry-run
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2298

Reviewed By: mrkev

Differential Revision: D19290780

Pulled By: claudiopro

fbshipit-source-id: c92eff8d3e80bdb0aba772d9eb4ee8bd27acc069",False
f2237995f4bad6fedc9ba9b27471482e8b29ac81,2020-01-03 01:14:16,Kevin Chavez,"Add rules to .flowconfig for flow strict rules (#2288)

Summary:
Internally at facebook, we use `flow strict` to define certain rules that make our codebase more reliable. I just noticed the .flowconfig for this repo doesn't include rules for `flow strict`. We do have files in the repo annotated with strict flow, so lets configure it to get the benefits.

Unfortunatley, there's 3 rules we have enabled internally which we can't use in the repo as it exists today. I put the necessary info as a comment on the .flowconfig itself.

npm run flow -> no errors.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2288

Differential Revision: D19265177

Pulled By: mrkev

fbshipit-source-id: 0eca719027d62c2681cd09be03385ba53a27c2e3",False
4252469ab5d2861bbd39b49c74734b0abdc77ffe,2020-01-02 23:42:17,Claudio Procida,"fix(chore): fixes webpack-stream error with missing catch var declaration (#2291)

Summary:
**Summary**

Fixes an error thrown by `webpack-stream` with the missing catch var declaration
```
[16:12:34] '<anonymous>' errored after 8.42 s
[16:12:34] Error in plugin ""webpack-stream""
Message:
    ./lib/setDraftEditorSelection.js
Module parse failed: Unexpected token (278:12)
You may need an appropriate loader to handle this file type.
|     try {
|       selection.addRange(range);
|     } catch {// ignore
|     }
|   } else {
 @ ./lib/DraftEditorLeaf.react.js 29:30-66
 @ ./lib/DraftEditorBlock.react.js
 @ ./lib/Draft.js
Details:
    domain: [object Object]
    domainThrown: true

```

**Test Plan**
```
yarn
```
Build completes without errors
Pull Request resolved: https://github.com/facebook/draft-js/pull/2291

Reviewed By: mrkev

Differential Revision: D19230824

Pulled By: claudiopro

fbshipit-source-id: 9fdc2ebbee654404458851f6fd14a367c33a23e4",False
64b51dff37dbc385532a56ed19e23a9da1437385,2019-12-19 19:47:54,Jainil Parekh,"IE could not display composer when opening or creating a new group chat from the chat create view

Summary: When opening a group chat from workplace chat's new message in IE the first invocation of interfaceselection.addRange throws an unspecified error. Remarkably, subsequent invocations work fine and draft editor is able to continue as usual. This typically happens when IE doesn't like something but it is very hard to suss out what the root cause is. So I'm wrapping with a try catch so that this does not crash the draft editor completely.

Reviewed By: danielbuechele

Differential Revision: D19163859

fbshipit-source-id: ded92cae390dfca8d8956a49c1be54b1540b2998",False
afb708f471ab76d6912fa7f6a5c7aebd0d66b900,2019-12-18 17:56:16,Jainil Parekh,"Fix DOMObserver mutation data for IE (#2285)

Summary:
Pull Request resolved: https://github.com/facebook/draft-js/pull/2285

IE 11 considers the enter keypress that concludes the composition as an input char, which ends up adding a new line to the editor. I am adding code to strip that newline character when processing the mutation event.

Reviewed By: mrkev

Differential Revision: D19141003

fbshipit-source-id: 53848e42d0e2b45d609e6623cc5d5579168b73fe",False
efcaf429f89d517a537494b6ef730af262c99bb4,2019-12-18 06:24:44,Kevin Chavez,"Update website's yarn version to 0.11.3

Summary: Pull Request resolved: https://github.com/facebook/draft-js/pull/2286

Test Plan: Ran/used the site

Differential Revision: D19152337

Pulled By: mrkev

fbshipit-source-id: bc4d2dfea4e791e883cfeec7e661636598c359b3",False
aa55de242ce4618f5a6f178732e52249b58f955e,2019-12-18 04:43:16,Lauren Wyatt,"Added tests and fixed IE IndexSizeError trying to get a range from a selection when there is not one (#2271)

Summary:
**Summary**
Various browsers will throw errors if `selection.getRangeAt(0)` is called when there is no range. To fix this, a check was added to make sure a range exists.

This change was originally suggested [here](https://github.com/facebook/draft-js/pull/1571) a few years ago. I opted for opening a new PR and adding tests here since that PR seemed stale.

Selection and Range did not work in the test environment, so I had to stub them. I only added functionality for what was needed in the tests I added, but more can be added in the future very easily.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2271

Differential Revision: D18807105

Pulled By: mrkev

fbshipit-source-id: 0e3b833b8a3267b9a5f17b262b6a0442b6ae5e3d",False
e20f79f3c18da244c0dbb2825cd2c591ccb0d73f,2019-12-17 06:25:55,Tarun047,"Add Section and Article to DefaultBlockRenderMap (#2212)

Summary:
*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

Fixes https://github.com/facebook/draft-js/issues/2074
Updated the default block render map to have the section and article tags.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2212

Reviewed By: claudiopro

Differential Revision: D18246366

Pulled By: mrkev

fbshipit-source-id: 144f7721d92d6efcbb5c969ba992841eb9bd5f15",False
6fc996468c2f755ef36430d396026e5ed50a4ecd,2019-12-16 07:39:18,Yangshun Tay,"Prettify docs files (#2275)

Summary:
**Summary**

Prettier can also be used to format more than just JS files, it can format Markdown files too. Instead of using Flow parser for all files in `prettier.config.js`, we can just limit Flow parser for JS files and let Prettier find the default parsers for the various file formats.

Hence I tweaked the Prettier config and added overrides for:

- JS format - Use Flow parser
- Markdown format - Restrict to 80 characters so that it's easier to read

I then ran Prettier on all the docs. I've added a `prettier:diff` command into the `lint-docs` step, ran alongside with Alex that will fail when there are unformatted docs. It's not part of the CI step as I think that might be a bit too strict given that some people (including myself) edit docs in the GitHub UI and that might cause formatting issues which can be fixed by running the `format-docs` command every now and then.

The formatting is only restricted to the docs now and not code as it's potentially dangerous to format code that gets synced with internal FB repos.

**Test Plan**

Load website.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2275

Reviewed By: mrkev

Differential Revision: D18807420

Pulled By: yangshun

fbshipit-source-id: b3f34282c2a2cad8e89cd90e8f3f6b3860b747fc",False
5d37c03c89f3b9f50ebb9d6c80bfac3469f6b89a,2019-12-13 08:11:46,cdr,"Fix scroll behavior when node has tab chars (#2256)

Summary:
Closes https://github.com/facebook/draft-js/issues/2254

Problem behavior and reasoning behind solution is described in the issue.

The linter issues are unrelated to the file I changed so I left them alone in order to keep this commit atomic.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2256

Reviewed By: claudiopro

Differential Revision: D18734244

Pulled By: mrkev

fbshipit-source-id: eb5a1a91f7c3f27fced1e37f5822bc3e126fb332",False
3b6d231ca2aa34277bcd0f10a2c2bb6eb4c59b71,2019-12-12 18:02:18,Lucas Cordeiro,"Fix docs links in readme (#2284)

Summary:
**Summary**

Fixes the links in the readme pointing to the docs. The links ended in `.html` which resulted in a 404 page, this may have been a regression from the recent docusaurus update.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2284

Differential Revision: D18953167

Pulled By: mrkev

fbshipit-source-id: 49ce5f32aad05732d896349a77657236f7f3358d",False
817e3716f39b4b6467ee65f4213a79cd1119c226,2019-12-10 07:11:33,Yangshun Tay,"Remove Jest auto mocking (#2279)

Summary:
**Summary**

Saw that the Travis CI is failing because of a new test (`isHTMLBRElement`) which did not explicitly disable auto mocking. In Sandcastle, Jest tests aren't automocked hence the tests passed internally but is failing on GitHub.

Since all the tests in the repo have `jest.disableAutomock()`, there's no value in having `automock: true` within `package.json`, we can remove it and save ourselves of this config discrepancy and further pain in future.

If we decide to go with this approach then https://github.com/facebook/draft-js/issues/2278 can be abandoned/closed.

**Test Plan**

Travis CI should pass. Also check that Sandcastle passes.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2279

Reviewed By: mrkev

Differential Revision: D18874249

Pulled By: yangshun

fbshipit-source-id: e371558552728b395f67bf1c4d94b127cc3c2c96",False
06037727c770e1867dadd28bec90f2fb3e5df54b,2019-12-07 17:14:43,Yangshun Tay,"Fix isHTMLBRElement test (#2278)

Summary:
**Summary**

In the Facebook repo mirror, modules in Jest tests are not mocked, but on GitHub they are (as seen from `package.json`). That led to D18831442 passing internally in Sandcastle but failing on Travis. Not a huge deal, we can just add `jest.disableAutomock()`.

We might want to see if we can remove `""automock"": true,` from the Jest config in `package.json` to have a more similar environment to Facebook's Jest config.

**Test Plan**

Travis CI should pass now.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2278

Differential Revision: D18874041

Pulled By: yangshun

fbshipit-source-id: 282c137934dea27259a2b52741c749fb6c332323",False
f4167fe10cc46ad10620654615801040f6006675,2019-12-07 03:23:16,Kevin Chavez,"Add myself to get TravisCI emails

Summary: emails

Reviewed By: claudiopro

Differential Revision: D18836147

fbshipit-source-id: 569e149ca3610d7ce8ac6d86bf9d1daae63af4f9",False
bb81765f9c57ca0a393388080d4313de2886c7a6,2019-12-06 23:44:24,Claudio Procida,"Unit tests for isHTMLBRElement

Summary: Adds a unit test for isHTMLBRElement, for the cases null, same document, iframed document

Reviewed By: mrkev

Differential Revision: D18831442

fbshipit-source-id: af4702f25f7a28cc786078e770023e1c44fdb674",False
e869fcb5bd3bdc8982fde497a14c0e59e7c2ae97,2019-12-06 04:23:58,Jack Armstrong,"Fix `isHTMLBRElement` check

Summary: When rendering in an `iframe`/other document, I was getting an error when trying to add a newline. Turns out there was an issue with the `isHTMLBRElement` check, so fix that and change the code in `DraftEditorLeaf.react.js` to use `isHTMLBRElement`

Reviewed By: claudiopro

Differential Revision: D18815600

fbshipit-source-id: 6297e29efa987e1e6937b5093d565355c5839b2e",False
7721805c52103591eaba5ab63fc6077e1ba6da14,2019-12-06 00:10:08,Nivedita Chopra,"Remove niveditc from Travis CI email

Summary: These aren't very actionable for me.

Reviewed By: claudiopro

Differential Revision: D18820482

fbshipit-source-id: 7dc2ddc1c8ed618ea4cd8972ed6054e2003b20b5",False
92680be531b297193daf105434f0630d9f26f5ba,2019-12-05 02:38:26,Yangshun Tay,"Create CNAME (#2276)

Summary:
Fix deployment
Pull Request resolved: https://github.com/facebook/draft-js/pull/2276

Reviewed By: ezzak

Differential Revision: D18814891

Pulled By: yangshun

fbshipit-source-id: 0340db441b354fed633b54ac4dfe9efcf3633bab",False
8c0727ebd4900da2f693b91cf3d715e489e635f2,2019-12-05 01:51:58,Robbert Brak,"Fix typing Chinese in Edge (#2082) (#2088)

Summary:
Fixes https://github.com/facebook/draft-js/issues/2082.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2088

Differential Revision: D18698264

Pulled By: mrkev

fbshipit-source-id: f5f5d4e4a0ff66a9fef62976af8726660411a106",False
861aab8631f5122aefc9087148f5a64468bd4f71,2019-12-05 00:55:39,Yangshun Tay,"Fix Travis website deployment (#2274)

Summary:
**Summary**

Sorry I messed up the deployment commands for the new website. SSH mode should not be used.

**Test Plan**

Can't really test locally (or rather, troublesome to test Travis configs locally). Can we try to land it?
Pull Request resolved: https://github.com/facebook/draft-js/pull/2274

Reviewed By: claudiopro

Differential Revision: D18807347

Pulled By: yangshun

fbshipit-source-id: 82c8bfa0565a4328315ae89bd23bd1d2d6e43a62",False
5b1019138c1f59ae8ae746c74b2dd1afec761d01,2019-12-04 14:38:07,Yangshun Tay,"Upgrade to Docusaurus 2 (#2268)

Summary:
**Summary**

Fixes https://github.com/facebook/draft-js/issues/2261. This should be merged after https://github.com/facebook/draft-js/issues/2267 (how I wish there were stacked diffs on GitHub)

Migrate the website to Docusaurus 2 which provides the following benefits specific to Draft.js:

- Consistency with the other FB Docusaurus websites
- Easy way to import Draft.js (bundle via webpack, no more ugly client-side script tags)
- Nicer CSS framework
- Dark mode (disabled for now until I sort out the dark mode styling for the editor)

Changes made:

- I also changed the theme color of Draft.js to be lighter brown so that the contrast is better in general (much better on dark mode). Let me know if this is not ok.

**Test Plan**

<img width=""1552"" alt=""Screen Shot 2019-11-30 at 9 16 32 PM"" src=""https://user-images.githubusercontent.com/1315101/69909874-bc28fd80-13b6-11ea-90bb-c6b44a1186a5.png"">
<img width=""1552"" alt=""Screen Shot 2019-11-30 at 9 16 39 PM"" src=""https://user-images.githubusercontent.com/1315101/69909875-bcc19400-13b6-11ea-9eda-c6eabfc4fde4.png"">

Try it out here - https://build-swart-eight.now.sh
Pull Request resolved: https://github.com/facebook/draft-js/pull/2268

Reviewed By: mrkev

Differential Revision: D18758642

Pulled By: yangshun

fbshipit-source-id: 169087f716ef2792dade75388b86debbaf34ac44",False
b889d5ddf6288e99df791471afcb70204011997e,2019-12-04 14:38:06,Ilya,"move alex to dev dependencies (#2272)

Summary:
Move ""alex"" to dev dependencies
Pull Request resolved: https://github.com/facebook/draft-js/pull/2272

Differential Revision: D18807062

Pulled By: mrkev

fbshipit-source-id: 565bfb36fecc3e4e3475aafddd5b25ecf105f15a",False
c07a404ec22dffc628b335aa7c67dafc49a18337,2019-12-04 13:55:09,Kevin Chavez,"getEntityKeyForSelection.js

Summary: `getEntityKeyForSelection.js` could use some flowification. This doesn't change functionality, since  `notEmptyKey` implements the same logic `entityKey` used to be checked with.

Reviewed By: miorel

Differential Revision: D16854973

fbshipit-source-id: 18a56b020a9f98cc27e4d1bd5acb6bd215c6ea05",False
9b4a628206b103c8523975fca5f570d78e3f1ee1,2019-12-04 02:39:46,Yangshun Tay,"Improve docs syntax and formatting (#2267)

Summary:
**Summary**

Reformat the docs in preparation for Docusaurus 2:

- Add syntax highlighting for the code blocks
- Remove `.html` from the Markdown link extensions. Docusaurus 1 allows clean URL but Docusaurus 2 doesn't, so this is necessary
- Wrap API headings in code blocks
- Change the level of some API headings so that they appear in the right table of contents

**Test Plan**

Run Docusaurus website locally and click through.

Try it out - https://draft-js-pc0wv8qnv.now.sh
Pull Request resolved: https://github.com/facebook/draft-js/pull/2267

Reviewed By: claudiopro

Differential Revision: D18758620

Pulled By: yangshun

fbshipit-source-id: 73b9572e521cbf891abcf5099fec65f0cbef91d2",False
a1de5deaea58d1907619cc206d4b7d3594388f09,2019-12-02 17:09:34,Claudio Procida,"Updates Changelog for v0.11.3 (#2269)

Summary:
**Summary**

Updates changelog and generated files for v0.11.3.

This PR depends on https://github.com/facebook/draft-js/issues/2265 that fixes the TravisCI build by upgrading Prettier to v1.19.1

**Test Plan**

Verify all tests and lint pass

```
yarn test
yarn lint
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2269

Reviewed By: yangshun

Differential Revision: D18757775

Pulled By: claudiopro

fbshipit-source-id: ead0c20f59a74fc888a67e9810dbea15079ee64e",False
abcbe207a5fec63f54117a7f5e56ecb5d9344e14,2019-12-01 14:54:17,Claudio Procida,"Updates to Prettier 1.19.1 (#2265)

Summary:
**Summary**

Updates `prettier` in dev dependencies to `v1.19.1` to align with the version in use on Facebook's `www` repo. This fixes the [failures in TravisCI lint jobs](https://travis-ci.org/facebook/draft-js/builds/611609545) caused by 6217dc8189154e1444cff66f3f7ea453ac8f804c.

**Test Plan**

Verify there are no lint errors by running the command:
```
yarn lint
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2265

Reviewed By: mrkev

Differential Revision: D18748117

Pulled By: claudiopro

fbshipit-source-id: da74d8c36685647ee8841f29fc05aa754eff8ba7",False
37d281b6e68d72acb7dfcf743e145d1439b66222,2019-11-28 01:53:50,dependabot[bot],"Bump mixin-deep from 1.3.1 to 1.3.2 in /examples/draft-0-10-0/universal (#2259)

Summary:
Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2259

Differential Revision: D18725556

Pulled By: mrkev

fbshipit-source-id: daaf12ad6056a19c6201f1f200e7b0508bbd2d16",False
0b5772019e1d7f698ee1b67e77712a473f0a39fc,2019-11-28 00:38:22,Kevin Chavez,"Upgrade dependencies in /website (#2263)

Summary:
This should address a security vulnerability stemming from `braces < 2.3.1`.

Before:

```
npm ls braces
.../website
└─┬ docusaurus@1.3.3
  └─┬ imagemin-gifsicle@5.2.0
    └─┬ gifsicle@3.0.4
      └─┬ bin-build@2.2.0
        └─┬ decompress@3.0.0
          └─┬ vinyl-fs@2.4.4
            └─┬ glob-stream@5.3.5
              └─┬ micromatch@2.3.11
                └── braces@1.8.5
```

After:

```
npm ls braces
.../website
└─┬ docusaurus@1.14.2
  └─┬ react-dev-utils@9.1.0
    └─┬ fork-ts-checker-webpack-plugin@1.5.0
      ├─┬ chokidar@2.1.8
      │ └── braces@2.3.2
      └─┬ micromatch@3.1.10
        └── braces@2.3.2  deduped
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2263

Test Plan: Ran website, everything looks fine.

Differential Revision: D18725548

Pulled By: mrkev

fbshipit-source-id: 6e674d2426b73587c0c9b1340042998702770d51",False
ae2dd14c7d531a77271e2b9280d85c402392609e,2019-11-26 04:52:57,Kevin Chavez,"Update dependencies in examples/draft-0-10-0/universal (#2257)

Summary:
Updated dependencies for the example under `examples/draft-0-10-0/universal`.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2257

Test Plan: Ran `npm run demo`, everything still works like it did before.

Differential Revision: D18690746

Pulled By: mrkev

fbshipit-source-id: 49af5bee8f8cba925d8b646d04ee9f96250aa9ac",False
11bc5d842d75ba329bf87e7ae5a6644eadb773bc,2019-11-26 04:38:41,Kevin Chavez,"Update dependencies in examples/draft-0-10-0/playground (#2258)

Summary:
This fixes security vulnerabilities detected by github
Pull Request resolved: https://github.com/facebook/draft-js/pull/2258

Test Plan: Used the example. Everything still works as intended.

Differential Revision: D18690749

Pulled By: mrkev

fbshipit-source-id: 7fd6930023c2baf4ebb66605ca8a96679f94a21a",False
7d26fab7cb8c0447f7c1840e1242ac8e8903a163,2019-11-23 01:52:58,Frank Thompson,"fix wrong property access in convertFromHTMLToContentBlocks

Summary:
`_extractTextFromBlockConfigs` was checking the `blockType` property of a `ContentBlockConfig`. However, `ContentBlockConfig` doesn't actually contain a `blockType` property. The right name is just `type`.

This diff fixes that and removes the flow suppression comment. Doing this also fixes an annoying problem where blockquotes (among other things) would have extra newline characters inserted when pasting into the editor.

Reviewed By: mrkev

Differential Revision: D18581836

fbshipit-source-id: 23b2b8a4ea75fd6b7d9a89fd11dc6cc889052d5d",False
e7ae2e7bc4935475a5af9e3738e93bce0614051e,2019-11-21 00:30:06,Jack Armstrong,"Fix draftjs type error for event

Summary:
Fixes an issue introduced by D13137413 where we weren't safely getting the right document for an event target, if the event target is null.

Fixes by using the safer `getCorretDocumentFromNode`, which uses the defualt `document` if the argument is null.

Reviewed By: claudiopro

Differential Revision: D18618225

fbshipit-source-id: bc381a5000318c5065fdf856387dd038b7e04003",False
dceddf552006ea607bc5c15ce3d1b629eca1cb70,2019-11-20 04:52:49,Claudio Procida,"Take over enhancements to render Draft.js in an iframe (#1938)

Summary:
**Summary**

Takes over and applies requested PR feedback to #1877 by haikyuu.

Refer to original PR for context and discussion.

**Test Plan**

Run some manual smoke tests on the editor running in an iframe as follows:

```
yarn
python3 -m http.server 8080 .
open http://localhost:8080/examples/draft-0-10-0/iframe/iframe.html
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/1938

Reviewed By: claudiopro

Differential Revision: D13137413

Pulled By: jack-arms

fbshipit-source-id: efcdbabc7d8d2aff4fbebc8b06c22d57756ebc12",False
8f77aa3432a56da202989dc5624daee70aef3e2f,2019-11-19 00:22:46,Max Vyz,"Implement click listener for editor wrapper (#2230)

Summary:
**Summary**

As I understand the `onClick` listener on the wrapper `div` element is suppose to replicate native `textarea/input` behavior. But the actual value of `onClick` property was `undefined` and thus needed to be implemented

**Test Plan**

It's an example file, no test plan is required.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2230

Differential Revision: D18247675

Pulled By: mrkev

fbshipit-source-id: 88e7160776f66daf1033351e4c5f2f4cfb5d40f1",False
6217dc8189154e1444cff66f3f7ea453ac8f804c,2019-11-14 04:09:51,George Zahariev,"Prettify files rest of non-intern files in html/

Summary:
Prettify files using Prettier 1.19.1

```
www$ ag --js -l --ignore node_modules --ignore third-party --ignore third_party --ignore html/intern/ --ignore html/js/ '\* format' html | xargs ag -L 'noformat|generated|partially-generated|lightSyntaxTransform|haste-ignore' | xargs -P 42 -n 1000 ~/www/scripts/bin/prettier --config ~/www/.prettierrc --write
www$ arc rebuild
```
Manual `$FlowFixMe` placement adjustment in `html/shared/fbjs/functional/__tests__/{min,max}By-test.js`

allow_many_files
allow-large-files
bypass-lint
drop-conflicts

Reviewed By: vjeux

Differential Revision: D18474394

fbshipit-source-id: 45f18c78db41c3bc6d509261391d9269f0fd40ef",False
ae542b750ab3c0e940568c076c30bcf0f4d4ca71,2019-11-13 07:39:57,Daniel Sainati,"deploy v112 to www

Reviewed By: jbrown215

Differential Revision: D18455026

fbshipit-source-id: 4335a17d2c44e8cbb99de31d5e5808d43301c6e3",False
1452b87a51d83010be74d65489a9bdd969ef3d86,2019-11-12 04:09:49,Frank Thompson,"fix decorator handling in editOnBeforeInput

Summary:
This fixes a pretty widespread bug with decorators introduced by D7941738 and D7977136.

## The problem

As far as I can tell, the bug happens in any editor containing a decorator that auto-linkifies content. Here are some repro steps using https://our.intern.facebook.com/intern/editor

Diffs:
- Type ""D12"". No link.
- Update to ""D123"". Link appears.
- Update to ""D1234"". Link disappears.
- Delete ""4"". Still no link.
- Try to delete ""3"". Crash.
(Typing ""D1234a"" also causes a crash, as does typing ""D1234"" and then deleting the ""D"". Anything that causes the regex to fail does the trick.)

URLs:
- Type ""www.facebook.c"". No link.
- Update to ""www.facebook.co"". Link appears.
- Update to ""www.facebook.com"". Link disappears.
- Delete ""m"". Still no link.
- Try to delete ""o"". Crash.

You can do the exact same thing in other surfaces as well, including comments on Tasks (although here instead of crashing, the editor just freezes until you click out of and into it again) and the Intern Q&A form.

I think this issue has also been reported several times on Github:
- https://github.com/draft-js-plugins/draft-js-plugins/issues/1328
- https://github.com/facebook/draft-js/issues/2133
- https://github.com/facebook/draft-js/issues/2143

## Why it happens

I don't know enough about DraftJS to know exactly what was causing the problem, but here's what I observed in the DOM when playing around with this:
- If your decorator uses a simple `span` or `div` (like in the test plan of D7941738), then native events can update the contents just fine.
- However, if your decorator uses anything more complicated (like an `a`), then allowing the native event to go through actually removes the `a` from the DOM. If React later attempts to unmount it, it causes an error.

## The fix
The fix is pretty simple. If some text was already decorated and its length changed, always prevent native insertion. This means the decorator React component will always properly re-render.

## Side-effects
I assume this could have minor perf implications for simple decorators like the hashtag decorator on the FB composer, because it will prevent native handling for some cases where it wasn't actually causing problems. I'm not sure whether this matters or not, but I don't think it should be worse than what it was before D7941738.

Reviewed By: claudiopro

Differential Revision: D18259308

fbshipit-source-id: f81b23440f7d9467396f3108a4d940b1ec98ca68",False
06010906b24afaaf82a2c7bc8c85c0f09446c805,2019-11-12 04:09:49,Frank Thompson,"add flow declaration in editOnBeforeInput-test.js

Summary: This adds an `flow` declaration to `editOnBeforeInput-test.js`. I took the easy way out and used `any` to cast plain objects to `DraftEditor` and `SyntheticInputEvent<>`, which is why I did not use `flow strict-local`.

Reviewed By: claudiopro

Differential Revision: D18433927

fbshipit-source-id: 5cfa39482be75ec526fd47c32496c29f55fe2cdb",False
177db5ebb3c32ac08a40250985abaa339d3691ec,2019-11-06 02:26:01,dependabot[bot],"Bump lodash.merge from 4.6.1 to 4.6.2 in /website (#2241)

Summary:
Bumps [lodash.merge](https://github.com/lodash/lodash) from 4.6.1 to 4.6.2.
<details>
<summary>Commits</summary>

- See full diff in [compare view](https://github.com/lodash/lodash/commits)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash.merge&package-manager=npm_and_yarn&previous-version=4.6.1&new-version=4.6.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2241

Differential Revision: D18247607

Pulled By: mrkev

fbshipit-source-id: 919f2304d20638cdab7455b39bee3feed5a94071",False
29080353f63855df1402781e544b7f4ce65dc9ea,2019-11-06 01:24:13,Ante Beslic,"fixes #304, kudos to @andpor (#2197)

Summary:
Should fix https://github.com/facebook/draft-js/issues/304.
Thanks andpor.

**Summary**
based on Andrzej's https://github.com/facebook/draft-js/issues/1223, issue has been there for an incredible 3.5 years. Let's fix this.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2197

Reviewed By: elboman

Differential Revision: D18314441

Pulled By: mrkev

fbshipit-source-id: 99284101bab838c574341b44b3cfcd935f1dc0e2",False
c42662ec75a7eb366b1cdfa0b434e73d1a41a050,2019-11-05 09:58:00,David Fuentes,"Defaulting to createEmpty if block map is empty in createWithContent (Fixes issue #2226) (#2240)

Summary:
**Summary**

When passing `createWithContent` a `state` parameter created using `convertFromHTML` from an empty string and `createFromBlockArray`, as shown in the example:

```
const sampleMarkup =
  '<b>Bold text</b>, <i>Italic text</i><br/ ><br />' +
  '<a href=""http://www.facebook.com"">Example link</a><br /><br/ >' +
  '<img src=""image.png"" height=""112"" width=""200"" />';

const blocksFromHTML = convertFromHTML(sampleMarkup);
const state = ContentState.createFromBlockArray(
  blocksFromHTML.contentBlocks,
  blocksFromHTML.entityMap,
);

this.state = {
  editorState: EditorState.createWithContent(
    state,
    decorator,
  ),
};
```

The following error is thrown:

```
TypeError: Cannot read property 'getKey' of undefined

  84 | EditorState.createWithContent = function createWithContent(contentState, decorator) {
> 85 |   var firstKey = contentState.getBlockMap().first().getKey();
     | ^  86 |   return EditorState.create({
  87 |     currentContent: contentState,
  88 |     undoStack: Stack(),
```
The previous error is generated because `createWithContent` asumes that `contentState.getBlockMap().first()` will return an element, which is wrong for scenarios where the block map is empty. As a consecuence the `getKey();` function in `contentState.getBlockMap().first().getKey();` is executed on `undefined`, thus throwing the error.

The previous scenario is very common if you are planning to use the editor to allow a user to write HTML content which could also be blank, especially as a default value.

**Solution**

In order to make the less amount of modifications to the code, I've added a validation that will run `createEmpty` in case the block map is empty.

**Test Plan**

Open `/draft-js/examples/draft-0-10-0/convertFromHTML/convert.html` and change line https://github.com/facebook/draft-js/issues/61 from:

`const blocksFromHTML = convertFromHTML(sampleMarkup);`

to:

`const blocksFromHTML = convertFromHTML('');`

No error will be shown.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2240

Differential Revision: D18247644

Pulled By: mrkev

fbshipit-source-id: 3eb90fd5379e8a2d85efbb2b7b9587ca87701d12",False
2a761af081fa2ad664c63f6a0d58c828ef813a8e,2019-11-05 09:39:28,dependabot[bot],"Bump handlebars from 4.1.1 to 4.5.1 in /examples/draft-0-10-0/playground (#2242)

Summary:
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.1 to 4.5.1.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/v4.5.1/release-notes.md).*

> ## v4.5.1 - October 29th, 2019
> Bugfixs
>
> - fix: move ""eslint-plugin-compat"" to devDependencies - 5e9d17f ([https://github.com/facebook/draft-js/issues/1589](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1589))
>
> Compatibility notes:
> - No compatibility issues are to be expected
>
>
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.0...v4.5.1)
>
> ## v4.5.0 - October 28th, 2019
> Features / Improvements
> - Add method Handlebars.parseWithoutProcessing ([https://github.com/facebook/draft-js/issues/1584](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1584)) - 62ed3c2
> - add guard to if & unless helpers ([https://github.com/facebook/draft-js/issues/1549](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1549))
> - show source location for the strict lookup exceptions - feb60f8
>
> Bugfixes:
> - Use objects for hash value tracking - 7fcf9d2
>
> Chore:
> - Resolve deprecation warning message from eslint while running eslint ([https://github.com/facebook/draft-js/issues/1586](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1586)) - 7052e88
> - chore: add eslint-plugin-compat and eslint-plugin-es5 - 088e618
>
> Compatibility notes:
> - No compatibility issues are to be expected
>
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.4.5...v4.5.0)
>
> ## v4.4.5 - October 20th, 2019
> Bugfixes:
>
> - Contents of raw-blocks must be matched with non-eager regex-matching - 8d5530e, [https://github.com/facebook/draft-js/issues/1579](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1579)
>
>
>
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.4.4...v4.4.5)
>
> ## v4.4.4 - October 20th, 2019
> Bugfixes:
> - fix: prevent zero length tokens in raw-blocks ([https://github.com/facebook/draft-js/issues/1577](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1577), [https://github.com/facebook/draft-js/issues/1578](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1578)) - f1752fe
>
> Chore:
> - chore: link to s3 bucket with https, add ""npm ci"" to build instructions - 0b593bf
>
> Compatibility notes:
> - no compatibility issues are expected
>
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.4.3...v4.4.4)
>
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`7ef8617`](https://github.com/wycats/handlebars.js/commit/7ef86173abb446cf564ad6dc2646a4c361e2ab9f) v4.5.1
- [`b75e3e1`](https://github.com/wycats/handlebars.js/commit/b75e3e1f403f0564a43fc9ffa759fbe1afccd1c1) Update release notes
- [`5e9d17f`](https://github.com/wycats/handlebars.js/commit/5e9d17f8faf770efb892a526603a728e480a9349) fix: move ""eslint-plugin-compat"" to devDependencies
- [`b24797d`](https://github.com/wycats/handlebars.js/commit/b24797da01afd4e849fdb315dea8335792974522) v4.5.0
- [`a243067`](https://github.com/wycats/handlebars.js/commit/a2430678830fa4f2fc207fac1453e805908f60de) Update release notes
- [`088e618`](https://github.com/wycats/handlebars.js/commit/088e61812a111f5c0ebf1e583852bc6640efcc3a) chore: add eslint-plugin-compat and eslint-plugin-es5
- [`7052e88`](https://github.com/wycats/handlebars.js/commit/7052e88068025aa5547f3c96d740283045bbbc2c) Resolve deprecation warning message from eslint while running eslint ([https://github.com/facebook/draft-js/issues/1586](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1586))
- [`b8913fc`](https://github.com/wycats/handlebars.js/commit/b8913fcc6598ee7e6d1ef5f1dec98a002f0c36c6) Add missing types for the Exception class properties ([https://github.com/facebook/draft-js/issues/1583](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1583))
- [`62ed3c2`](https://github.com/wycats/handlebars.js/commit/62ed3c25c76445deb8c51a5b36ce52f7f1be3411) Add Handlebars.parseWithoutProcessing ([https://github.com/facebook/draft-js/issues/1584](https://github-redirect.dependabot.com/wycats/handlebars.js/issues/1584))
- [`7fcf9d2`](https://github.com/wycats/handlebars.js/commit/7fcf9d24f8f4aa8de331f8bda13690ba5b85eff1) Use objects for hash value tracking
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.1...v4.5.1)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.1&new-version=4.5.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2242

Differential Revision: D18314832

Pulled By: mrkev

fbshipit-source-id: a021417222e0eddabc7816eeb0468f2c91ace9d9",False
4bca140a5e0ce5fd43f11a3a836ff6920884bd2d,2019-11-03 00:23:41,Jordan Brown,"Suppress non-synced files in www for 0.111

Summary:
Before we can bump the version we need to fix some synced files in xplat

drop-conflicts

Reviewed By: dsainati1

Differential Revision: D18255244

fbshipit-source-id: 4a6cf2491f033855f4130f6bdf04aa4e091a1f21",False
a477e832f9e413964de3a4a51e69dc39ed079a3b,2019-10-31 22:13:53,Kevin Chavez,"Upgrade more deps. (#2239)

Summary:
This PR upgrades more deps including gulp + some other gulp-related and build deps, and flow.

The flow upgrade involved replacing uses of emptyFunction, since Flow 0.99.0 made function types stricter adding checks for function statics. There's a good blog post about it here:

https://dev.to/wgao19/flow-0-99-callable-properties-function-statics-and-more-5c82
Pull Request resolved: https://github.com/facebook/draft-js/pull/2239

Test Plan: yarn test, also played a bit with the rich text editor in the examples folder.

Reviewed By: elboman

Differential Revision: D18226234

Pulled By: mrkev

fbshipit-source-id: 98310667411984eeb24eecd48568d58283950147",False
0e0374583489fd5c23ea633f486cc5d10bc74ed8,2019-10-31 11:24:06,dependabot[bot],"Bump lodash.template from 4.4.0 to 4.5.0 in /examples/draft-0-10-0/playground (#2236)

Summary:
Bumps [lodash.template](https://github.com/lodash/lodash) from 4.4.0 to 4.5.0.
<details>
<summary>Commits</summary>

- [`ab73503`](https://github.com/lodash/lodash/commit/ab73503859a2d2f7f603bc8a293ce93ecc071e83) Bump to v4.5.0.
- [`a4f7d4c`](https://github.com/lodash/lodash/commit/a4f7d4cc2a3b6d3a43f6c27beadbf90410eecdcd) Rebuild lodash and docs.
- [`cca5ac6`](https://github.com/lodash/lodash/commit/cca5ac60d61a2f786eeafadb674d6e12fc6179c8) Fix npm-test by removing the call to test-docs.
- [`9f7f9fc`](https://github.com/lodash/lodash/commit/9f7f9fc3c5f1a4db9a2134950872440c792ee8bb) Adjust heading order. [ci skip]
- [`6e2fb92`](https://github.com/lodash/lodash/commit/6e2fb92e9a2fd29ef630f71bd571afcdf0f2e206) Remove unused `baseArity`.
- [`4f702e2`](https://github.com/lodash/lodash/commit/4f702e238183444ff392c3c7be5b48f1a7271519) Specify utf8 encoding.
- [`b188f90`](https://github.com/lodash/lodash/commit/b188f903ce41e624d6169f47a0c9e5091c178160) Add fp tests for iteratee shorthands.
- [`7b93dc9`](https://github.com/lodash/lodash/commit/7b93dc9c3253c342a45881392d2308374a8909b3) Ensure clone methods clone expando properties of boolean, number, & string ob...
- [`664d66a`](https://github.com/lodash/lodash/commit/664d66a89ec553438d5560239eba24d30867e580) Make string tests more consistent.
- [`d9dc0e6`](https://github.com/lodash/lodash/commit/d9dc0e6fd13c030029964b5ba468e0df3e2de3b2) Add `_.invertBy` tests.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.4.0...4.5.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash.template&package-manager=npm_and_yarn&previous-version=4.4.0&new-version=4.5.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2236

Reviewed By: elboman

Differential Revision: D18220750

Pulled By: mrkev

fbshipit-source-id: 142d3e5f54d8589957be873cd89f76ddf52aab7d",False
78f20ccdbf47741e70c67e0ed95519b5bcf5a671,2019-10-31 07:09:44,dependabot[bot],"Bump mixin-deep from 1.3.1 to 1.3.2 in /website (#2234)

Summary:
Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2234

Reviewed By: elboman

Differential Revision: D18220754

Pulled By: mrkev

fbshipit-source-id: 6b5da164a1b8cc11628bc7cd227285d4844f88e1",False
da1ab7c55d8c3352c5e9a07a573d2bce577f3445,2019-10-31 06:53:15,dependabot[bot],"Bump lodash from 4.17.11 to 4.17.15 in /website (#2233)

Summary:
Bumps [lodash](https://github.com/lodash/lodash) from 4.17.11 to 4.17.15.
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.11...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.11&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2233

Reviewed By: elboman

Differential Revision: D18220755

Pulled By: mrkev

fbshipit-source-id: 15c655b4490baf64a98bcf51e660a6bf2a152261",False
6ed6ed45a338085a03405c0915630df5396f1843,2019-10-31 06:41:21,SuNNjek,"Updated browser icons in README (#2238)

Summary:
**Summary**

Updated README to show current browser icons in compatibility table
Pull Request resolved: https://github.com/facebook/draft-js/pull/2238

Reviewed By: elboman

Differential Revision: D18226486

Pulled By: mrkev

fbshipit-source-id: 3aed87817e9a0a9ea0b08809420b04e7411df3f2",False
2744ff78d6bd0fafc3c77fde8fec800e6c2b8d02,2019-10-31 06:41:21,dependabot[bot],"Bump mixin-deep from 1.3.1 to 1.3.2 in /examples/draft-0-10-0/playground (#2235)

Summary:
Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

 ---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `dependabot rebase` will rebase this PR
- `dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `dependabot merge` will merge this PR after your CI passes on it
- `dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `dependabot cancel merge` will cancel a previously requested merge and block automerging
- `dependabot reopen` will reopen this PR if it is closed
- `dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/draft-js/network/alerts).

</details>
Pull Request resolved: https://github.com/facebook/draft-js/pull/2235

Reviewed By: elboman

Differential Revision: D18220753

Pulled By: mrkev

fbshipit-source-id: 8fe07baacaa11932c1ffa75dab1121f7974c7f07",False
46103ac2e8256f8b3fbde631364d1602c133e974,2019-10-30 10:26:28,Kevin Chavez,"Upgrade 8 dependencies (including jest, @babel/core, etc). (#2237)

Summary:
Update misc dependencies to solve vulnerabilities exposed by yarn audit.

Before:
1 Low | 1 Moderate | 1739 High | 1 Critical

After:
1 Low | 15788 High

No changes were necessary in the source files.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2237

Test Plan:
yarn test

Also played a bit with the rich text editor in the examples folder (uses the built /dist/Draft.js).

Reviewed By: claudiopro

Differential Revision: D18218709

Pulled By: mrkev

fbshipit-source-id: f632b7fb08a15fe86101d726241f9e640cb7e20d",False
53d2a63a4cfdef68516c4ec487d5529566cd4bf3,2019-10-30 02:11:21,Kevin Chavez,"Upgrades ESLint and related plugins/configs. (#2231)

Summary:
This fixes some security issues reported by GitHub.

There are still warnings on the lint, but no errors. I had to make some changes. Most notably:

## `.eslintrc.js`

Changed the value of `rules` because it was required by the new `eslint-plugin-prettier`. See https://github.com/prettier/eslint-plugin-prettier/commit/478c7e5d2165f3e67e893c9a317b602159eaff9c

## `/src`

Changed some lints referencing `fb-www/`. ESLint 6 reports errors on rules that aren't found (see: https://github.com/eslint/eslint/commit/2d32a9e8dd10a5927576bd50d184876c775da4af). For some reason `fb-www` rules are not found. Changing the disables to be `/* eslint-disable-next-line */` makes them valid both the open source config and Facebook's internal config.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2231

Reviewed By: claudiopro

Differential Revision: D18206971

Pulled By: mrkev

fbshipit-source-id: 55ca3e8a24c61250dd7cd01220ed55c73a140b9d",False
5dd99d327066f5f0b30b95ab95770822cff1ac65,2019-10-22 16:43:28,Claudio Procida,"Add linting for insensitive and inconsiderate language (#2223)

Summary:
**Summary**

This PR, similarly to https://github.com/facebook/react-native-website/pull/1337, adds [alexjs](https://alexjs.com/) linting to Draft.js in order to identify and prevent insensitive and inconsiderate language from landing on master.

- Adds Alex
- Configures Alex rules
- **TODO:** Run Alex in Travis CI

**Test Plan**

- Run `yarn lint-docs`
- Verify there are no lint violations
Pull Request resolved: https://github.com/facebook/draft-js/pull/2223

Differential Revision: D18046996

Pulled By: claudiopro

fbshipit-source-id: 66ac935720a0b13576e9a133a3d5f8e98cc539cf",False
778e88de7809f9eb249e63d1b5fd7e7d476c7566,2019-10-22 11:13:18,Ryan Lee,"Fix playground example import (#2220)

Summary:
Fixes  https://github.com/facebook/draft-js/issues/2219
Pull Request resolved: https://github.com/facebook/draft-js/pull/2220

Differential Revision: D18056744

Pulled By: claudiopro

fbshipit-source-id: 02f0fb1848fdfa9e928bbf0be038213ba21cd4cc",False
2595016186a118d8f9da921fbe6ed7111e5d5276,2019-10-21 23:07:49,Alan Norbauer,"Fix React warnings (#2221)

Summary:
**Summary**

Fix instances of the React warning:
```
React.jsx: Spreading a key to JSX is a deprecated pattern. ' +
        'Explicitly pass a key after spreading props in your JSX call. ' +
        'E.g. <ComponentName {...props} key={key} />'
```
originating from [React here](https://github.com/facebook/react/blob/18d2e0c03e4496a824fdb7f89ea2a3d60c30d49a/packages/react/src/ReactElementValidator.js#L366-L373)

This warning occurs when you spread a key with other props. There are probably more instances of this issue but these are the highest firing in our codebase.

**Test Plan**

`npm run lint && npm run test`
Pull Request resolved: https://github.com/facebook/draft-js/pull/2221

Reviewed By: mitermayer

Differential Revision: D18038272

Pulled By: steveluscher

fbshipit-source-id: 736236601ace92ae1e8d127e10bb35e393fa14b7",False
42a9d8b04315cbe7bd7a2fa01e29387c6fae09e1,2019-10-01 01:02:55,Claudio Procida,"Prepares v0.11.2 release (#2196)

Summary:
**Summary**

Bumps the package version and updates the changelog for v0.11.2.

**Test Plan**

N/A
Pull Request resolved: https://github.com/facebook/draft-js/pull/2196

Reviewed By: mrkev

Differential Revision: D17670207

Pulled By: claudiopro

fbshipit-source-id: 381f747f6a1f8979a4ed3c36931872541067774d",False
fe68e43bc852a304010b2dc4246b5385db9e3fe8,2019-09-23 21:39:13,Claudio Procida,"fix(selection): Returns previous selection if either leaf is null (#2189)

Summary:
**Summary**

Bails out early from the `getUpdatedSelectionState` method with previous selection when `anchorLeaf` or `focusLeaf` are null to prevent an error surfaced when using a decorator for emoji inserted between two spans of text entered via IME.

Thanks to robbertbrak for suggesting and cherry-picking a fix from their fork 🎉

Fixes https://github.com/facebook/draft-js/issues/2187

**Test Plan**
1. Build Draft.js
1. Inject into jsfiddle reported by jdecked https://jsfiddle.net/36tvhmce/
1. Try to repro issues with Pinyin and Hiragana IME
1. Verify there is no error in the console and text is entered normally
Pull Request resolved: https://github.com/facebook/draft-js/pull/2189

Reviewed By: kedromelon

Differential Revision: D17504999

Pulled By: claudiopro

fbshipit-source-id: dbd2180cf5c1af5bbe1c2b94c50767c58f524dcf",False
0c92bf7a07169c7823a3d6268e555cf3a6eb0e56,2019-09-23 21:15:39,generatedunixname89002005287564,"Upgrade to Flow strict-local

Reviewed By: gabelevi

Differential Revision: D17527283

fbshipit-source-id: c63d2f1fe7603ab4924d0e16e87ec96e90da042a",False
543df660223288fb59e2f9e11adeb508dbe93788,2019-09-21 00:39:29,Claudio Procida,"chore(website): updates stylesheet for 0.11.1 (#2188)

Summary:
**Summary**
Updates the stylesheet for the website for version `v0.11.1`

**Test Plan**
```
cd website ; yarn build
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2188

Differential Revision: D17505232

Pulled By: claudiopro

fbshipit-source-id: 7c8e6f2dd33a2abf9cdc3e1c93d5b20407174c29",False
3adf59303a5e0759a3eecc0d852a491876a647d4,2019-09-20 18:53:47,Claudio Procida,"Prepare 0.11.1 (#2186)

Summary:
**Summary**
Prepares the `v0.11.1` release

**Test Plan**
```
yarn lint
yarn test
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2186

Reviewed By: gmertk

Differential Revision: D17480382

Pulled By: claudiopro

fbshipit-source-id: 54a5723bed37183fbe12ad446dca48e97fc7c6f1",False
9246cc76cf8d7a13f30a98c938a9e020ad396ea4,2019-09-19 19:40:10,Sannikov,"convertFromHTML breaks after converting \n string, issue #1822 (#1823)

Summary:
This diff is commandeering a PR based on a previous baseline to rebase it against latest master. This diff discards the original fix which is no longer applicable, having the affected HTML converter been removed in favor of the new implementation by nicolasc. I am still keeping the test case as a guard against regression.

**Summary**
The core issue is here:
https://github.com/facebook/draft-js/blob/master/src/model/encoding/convertFromHTMLToContentBlocks.js#L376

A call to the `let chunk = {...EMPTY_CHUNK};` create a shallow copy of the `EMPTY_CHUNK` object. It means that `chunk.blocks` array (and others) share the same reference to the `EMPTY_CHUNK.blocks`.

If code hit this line https://github.com/facebook/draft-js/blob/master/src/model/encoding/convertFromHTMLToContentBlocks.js#L633 `EMPTY_CHUNK` object will end up having `block` array with one element of `{type: 'unstyled', depth: 0}` which caused the aforementioned issue.

Next call to the `convertFromHTML` will start with polluted `EMPTY_CHUNK` object. :-(

**Test Plan**
Open a https://jsfiddle.net/m6z0xn4r/1190/
Put a breakpoint on `convertFromHTML` and see 2 different results while converting headers

Another way:
Open chrome dev tools and:
- execute `convertFromHTML('\n')`
- execute `convertFromHTML('<h1>H</h1>')`
Observe that second call return a block with unstyled type.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1823

Test Plan: Adds a regression test case, run with `jest --watch`

Reviewed By: gmertk

Differential Revision: D17476663

Pulled By: claudiopro

fbshipit-source-id: 05da4d53114aa0d09de61ce55c27f5166b021138",False
b858f43538fedc8f0e8e86c88f2cd92954b271f5,2019-09-19 18:55:57,Claudio Procida,"Fixes HTML importer to make image entity immutable (#2184)

Summary:
**Summary**
Makes image entities created with the HTML importer immutable

This diff also adds the `flow` annotation to the `convertFromHTMLToContentBlocks` test case and fixes typechecking failures that are surfaced by its addition.

To support a more modern syntax to handle nullable fields, it adds the `babel/plugin-proposal-optional-chaining` plugin to Babel config.

Fixes https://github.com/facebook/draft-js/issues/2149

**Test Plan**
Adds tests to verify created entities are immutable
Pull Request resolved: https://github.com/facebook/draft-js/pull/2184

Reviewed By: j-nolan

Differential Revision: D17474930

Pulled By: claudiopro

fbshipit-source-id: c60ef368ff471914c2e188277a0ecc050115533b",False
cd4adaa9f9911ca24d677e061965f01f1046f372,2019-09-17 04:42:00,Mohamed Moussa,"Reaping draft_segmented_entities_behavior

Reviewed By: niveditc

Differential Revision: D17155538

fbshipit-source-id: 7dd234afc51f92d016895be9e15f86cde6eba877",False
819f58cef2cdf2e400965f754034096d26325659,2019-09-11 08:23:42,Liz LeCrone,"Fixing js example and cleaning up one sentence (#2172)

Summary:
**Summary**

Cleaning up JS example to have proper order. Cleaning up sentence to be clearer.

**Test Plan**

NA
Pull Request resolved: https://github.com/facebook/draft-js/pull/2172

Differential Revision: D17306067

Pulled By: Daniel15

fbshipit-source-id: 25d94313dde4157dbea192007ece110add9d5360",False
0e2e9a75c0d5cf80fee1b59cc475db60dfd9fa9b,2019-09-07 01:31:53,generatedunixname89002005287564,"Reaping draft_killswitch_allow_nontextnodes

Reviewed By: kedromelon

Differential Revision: D17204758

fbshipit-source-id: 406a4db6d467c18757db0e1d25a4a833365a7bd2",False
db64f9361392fd988349fbd954e3bd692729bb00,2019-08-31 04:53:34,Kevin Chavez,"Make insertIntoList strict-local

Summary: It was mutating an argument. Simply added a level of indirection.

Reviewed By: gkz

Differential Revision: D16854301

fbshipit-source-id: d3da0dc84bcef4ff6f643ac0146bdbb6138aa943",False
8473e411cec7b4ec64029723b8df2084c1dbcb00,2019-08-31 04:11:08,Kevin Chavez,"Flowify editOnKeyDown.js

Summary:
Only logic change was a sketchy null.

Slowly making my way flowifying draft.js

Reviewed By: gkz

Differential Revision: D16595681

fbshipit-source-id: a55e329e31df9a1bf485a263e0096634be656302",False
2c61167541aa624c0d1a153ad43e1e73d2e393a9,2019-08-30 05:11:42,Paul O'Shannessy,"Adopt Contributor Covenant

Summary:
In order to foster healthy open source communities, we're adopting the
[Contributor Covenant](https://www.contributor-covenant.org/). It has been
built by open source community members and represents a shared understanding of
what is expected from a healthy community.

Reviewed By: kmeht

Differential Revision: D17103386

fbshipit-source-id: 697eedb791c7af1a5a4f9cfe3d43ee75d65c5d3a",False
20a619c9d313a98632ad609ac768e65ba8c7e051,2019-08-29 02:40:40,Kevin Chavez,"decodeInlineStyleRanges.js

Summary: No changes to behaviour, only types. ez ¯\_(ツ)_/¯

Reviewed By: kedromelon

Differential Revision: D16854823

fbshipit-source-id: db211dbd7391f57716775b6f32b6777626771fc1",False
aed35d2269f1fda412befb3b9d7489f529641eb7,2019-08-28 16:57:18,Jainil Parekh,"Fix for workchat composer cursor jumping

Summary:
As figured out in T47552048, the issue of cursor jumping is happening because the draft editor's selection state is not in the correct state. After digging in, I discovered that the draft editor manages this state through the contenteditable div's onSelect event, but it is not being fired in certain cases. So I am changing the code to update the selection state when mouseUp and keyUp events are fired, and this fixes the issue as these events are fired even in those cases where onSelect is not. Although this means that there are some redundant updates to the selection state, this shouldn't cause any bugs.

I suspect this is happening because of some change/bug on how chrome is firing events on contenteditable, since it doesn't repro on firefox and also I couldn't find any code changes that match the bug timeline.

Reviewed By: claudiopro

Differential Revision: D17054885

fbshipit-source-id: 06b1e96629828d4cb1c9cab36c2711c6464f1f3c",False
594a14f27b8ae55b6e7ee5cc01ba15f4dccafce8,2019-08-23 11:11:18,Kevin Chavez,"Flowify editOnInput.js

Summary:
Involved fixing two sketchy null checks. Nothing huge.

NOTE: There's lots of non flow-strict code that makes checks on keys. Empty string is an invalid key. This is the behavior right now, so I left it unchanged.

I extracted it to another module because I'll be using it to check the existence of keys in other parts of the code too.

Reviewed By: kedromelon

Differential Revision: D16595680

fbshipit-source-id: 13a08e3b2477ba46ba2a2c66089afe47edccb20a",False
69722783f1e3f27bd88376bcfee7ec4ce97b9cde,2019-08-23 10:23:43,Kevin Chavez,"Flowify editOnBlur.js

Summary: The only change I had to make was switching a sketchy null check to not be so, by wrapping the value in `Boolean`.

Reviewed By: kedromelon

Differential Revision: D16595682

fbshipit-source-id: eef3f62e14dd93f8e3a3149b8fa5959b4878fbe2",False
14349f12df003b143f718e676d3b202c414f9458,2019-08-22 14:55:38,Mukesh Soni,"updated function description for onEditInput event handler function (#2132)

Summary:
Fixes https://github.com/facebook/draft-js/issues/1085

Updated the comment describing the `onEditInput` event handler function.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2132

Reviewed By: mitermayer

Differential Revision: D16545276

Pulled By: mrkev

fbshipit-source-id: 4f2f4263f9ee63d8c468f8f07ff0b30d9793fccb",False
85aa3a30d604f977482757a537b75b036b11201a,2019-08-21 03:41:52,Ajith V,"updated hastext method to not account for zero space width chars (#2163)

Summary:
Pull Request resolved: https://github.com/facebook/draft-js/pull/2163

\u200B (zero space width chars) is put into the blockmap while inserting tokens. Therfore hastext returns true even when there is no text in the input. Updated hastext method to not account for zero space width chars.

Reviewed By: claudiopro

Differential Revision: D16868475

fbshipit-source-id: 1b0c9142c54e9c45d19fde516167ef34d02e719d",False
30435736f79c1dd2fc664e627737eb27c25b7488,2019-08-16 23:11:07,Tee Xie,"Support post processor on paste entities.

Summary:
this is to address the case where people paste content from quip
or google doc which breaks KM editor.

Differential Revision: D16833432

fbshipit-source-id: cc853284c833f131e11930cc4cf18714809071ac",False
0375c0e7f6e58d9b1440361e1dbec51ffdd93e90,2019-08-16 04:23:23,Runjie Guan,"@flow -> @flow-strict for html/shared

Summary: Enabling `flow strict-local` for files that don't require any further actions

Reviewed By: gabelevi

Differential Revision: D16823572

fbshipit-source-id: ffa42bbb9a55f4bc282d1013f33f45b0c59cd8a6",False
734bd82d8e201152c60d9ab89be563dbb3693387,2019-08-14 05:25:40,Daniel Lo Nigro,"Encode non-ASCII characters in all snapshot tests

Summary:
We're not supposed to commit non-ASCII text to www for some reason. However, some snapshots contained fancy characters.

This diff updates Jest to use the `NonASCIIStringSnapshotSerializer` I added in D16570959 to be used for **all** snapshot tests.

Reviewed By: inlineblock

Differential Revision: D16633746

fbshipit-source-id: f3055ec873571f5bbe32e8c7d958f663bf7439c9",False
1ff8c8c88b3c8b17dbcd771bae330a2e3adddb66,2019-08-13 22:56:28,Jordan Lee,"Fix various grammatical errors (#2158)

Summary:
Improve documentation readability by inserting/removing punctuation as appropriate.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2158

Differential Revision: D16785872

Pulled By: niveditc

fbshipit-source-id: 6e1208b1d6536a57be32f2fc7b91b291de3001f0",False
ce8bdd04d0b5bd1f34c10a03db0066eeb623e83b,2019-08-13 14:27:37,Nitzan Raz,"Composer: Not assuming element has leaves

Summary:
Fixes a bug that where two dates are mentioned in a row, the second date
doesn't have leaf elements (not sure what those are) and explodes.
Instead, the second date just won't be highlighted

This affects more than just dates, as one can see in the attached task.

Reviewed By: claudiopro

Differential Revision: D16756786

fbshipit-source-id: 929600e1a5258120c70f2321eeace651afee3670",False
22b75997955cd8480d1c0b60bbae736fc84d5d84,2019-08-06 17:24:04,Günay Mert Karadoğan,"Update jsfiddle links with recent versions of the Draft and React (#2145)

Summary:
Fixes https://github.com/facebook/draft-js/issues/2144

**Summary**
Previous jsfiddle links were using old versions of React and Draft.

Feel free to reject if you actually have access to previous fiddles and update the libs there.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2145

Reviewed By: claudiopro

Differential Revision: D16545086

Pulled By: gmertk

fbshipit-source-id: 2450a17e0005f984dffd3e7c75b792c4edab3ef8",False
ed09f78c3ddf6d32c381555e7164076a62a7994f,2019-07-25 07:00:21,Kevin Chavez,"Flow-type DataTransfer.js

Summary:
Flowifies DataTransfer.js. We have a flow libdef for the browser's DataTransfer object, **so the only non-flow change this involved was a quick name check to avoid the collision**.

This surfaced a couple of places where the module is misused (yay! means it's surfacing potential bugs!). Putting them behind flowfixme's to avoid changing functionality and keep this diff simple (and eye-testable).

I can make tasks for fixing these flowfixme's if desired.

Differential Revision: D16176363

fbshipit-source-id: 755da606d0d86b74f2024b6d8e522746072bfc61",False
8e9cabfd4193cea46008bd5ac96e6a6fb60af9cf,2019-07-23 00:08:50,Frank Thompson,"Revert D16421104: [rfc][draft-js] catch errors when encoding entity map

Differential Revision:
D16421104

Original commit changeset: a2046ad0cb16

fbshipit-source-id: 978ba5b24c043443134b986f2dd2fd425a7f9979",False
259d122a74bba9ede5ad13e3ff30b84eb5592fd3,2019-07-22 23:39:47,Frank Thompson,"catch errors when encoding entity map

Summary:
We've had several reports of people's content failing to save in our product. The only error message we have is this (with no callstack, unfortunately):
```
Unknown DraftEntity key: undefined.
```
I poked around in the DraftJS code, and my guess is that this is due to some character having an entity key associated with it that for whatever reason does not appear in the entity map. This diff ""fixes"" the issue by not throwing an error in this situation.

This is definitely not as good as figuring out the root cause of the entity mismatch, but it seems reasonable for `convertFromDraftStateToRaw` to work with slightly malformed input.

Reviewed By: niveditc

Differential Revision: D16421104

fbshipit-source-id: a2046ad0cb166dac97187fd3c524f9c8cb4017ea",False
96e7f25503c9f0422573ab33be6c1f8986c6c818,2019-07-20 03:56:10,Frank Thompson,"Revert D16362778: [rfc][draftjs] catch errors when encoding entity map

Differential Revision:
D16362778

Original commit changeset: 6e2a6041d1a0

fbshipit-source-id: 9c0e3f2c1033c8f6879e03ce4cf8799fab5e0a02",False
c0e911c1196bc5eb91aa585b447695e29207be2c,2019-07-20 03:12:07,Frank Thompson,"catch errors when encoding entity map

Summary:
We've had several reports of people's content failing to save in the Performance tool. The only error message we have is this (with no callstack, unfortunately):
```
Unknown DraftEntity key: undefined.
```
I poked around in the DraftJS code, and my guess is that this is due to some character having an entity key associated with it that for whatever reason does not appear in the entity map. This diff ""fixes"" the issue by not throwing an error in this situation.

This is definitely not as good as figuring out the root cause of the entity mismatch, but it seems reasonable for `convertFromDraftStateToRaw` to work with slightly malformed input.

Not sure if it's ok to use `FBLogger` in this code or not, but I saw another usage of it in `draft-js-contrib` here:
diffusion/WWW/browse/master/html/shared/draft-js-contrib/matchers/getImplicitDateTimeMatches.js;1000956292$34

I could also just ignore the error, but the linter didn't like that ¯\_(ツ)_/¯

Reviewed By: niveditc

Differential Revision: D16362778

fbshipit-source-id: 6e2a6041d1a02b412d94655c9b6224fee868748d",False
db792efd5121ceb312030c7b1d1a303bc8172ef4,2019-07-17 05:19:18,Matthew Holloway,"Adding 'preserveSelectionOnBlur' prop (#2128)

Summary:
**Summary**

This adds a `preserveSelectionOnBlur` prop as per https://github.com/facebook/draft-js/issues/2123

**Test Plan**

Tests were added for the two possible scenarios. I'm not sure how much to mock in this test because it is just testing a specific branch of code, so I've faked certain details like the rangeCount.

What do you think mrkev claudiopro ?
Pull Request resolved: https://github.com/facebook/draft-js/pull/2128

Reviewed By: claudiopro

Differential Revision: D16270879

Pulled By: mrkev

fbshipit-source-id: 304af92c1211b8ff95741bff434b4fe3c4b6dd7d",False
4064caed50117e33a18eb9d2c5d4a686eae76de7,2019-07-17 01:38:09,claudiopro,"Changes reference to BSD license to MIT (#2130)

Summary:
**Summary**
Changes reference to the BSD license to MIT in the contributing guidelines. Fixes https://github.com/facebook/draft-js/issues/2129

**Test Plan**
Proofreading
Pull Request resolved: https://github.com/facebook/draft-js/pull/2130

Reviewed By: niveditc

Differential Revision: D16286748

Pulled By: claudiopro

fbshipit-source-id: 3700f15d32fd2b1527135e8f432600009051208e",False
bc716b279299748d955bbdc398454bff45ea0191,2019-07-12 04:38:23,Kevin Chavez,"All these modules can actually be strict

Summary: eyes

Reviewed By: claudiopro

Differential Revision: D16177499

fbshipit-source-id: 95cb458b3203c93ba21a673ec6a1e10195f4f3d5",False
973f7ffb01ecf76262a0a307da052abc61a0fad2,2019-07-11 01:39:25,Claudio Procida,"Updates CHANGELOG for v0.11.0 (#2052)

Summary:
**Summary**

Updates the CHANGELOG for v0.11.0

This is going to be a refinement process from a very raw git log containing 200+ commits since v0.10.5. The focus should be on
- Advertising new functionality
- Highlighting breaking API changes
- Rolling up subsequent updates affecting the same feature or dependency into the most recent change to reduce the noise
- Attribute changes to contributors and link to relevant issues, PRs, and profiles

**Test Plan**

Proofreading
Pull Request resolved: https://github.com/facebook/draft-js/pull/2052

Reviewed By: claudiopro

Differential Revision: D16171723

Pulled By: mrkev

fbshipit-source-id: 41ca634e0e9903c45042299f05090e140e68c987",False
82e2135ed155d05943f6bcadc34ae3bfdbbefbf1,2019-07-11 01:23:22,Tee Xie,"Fixed a bug causing block data being over-written when pasted.

Summary:
there is a bug in Draft JS replace fragment logic where it replaces
block data directly with the fragment's block data. That causes things like
notice block loses it's data when pasted from other blocks.

The diff introduces a new parameter to allow the data on the block to be merged
instead of replaced. That way we could preserve the original data as well as
merging from the fragment's data (if available).

Note that in our use case, old data take precedence - for exmaple, if you paste
from a ""note"" notice to a ""warning"" notice, the resulting notice should still be
warning instead of ""note"".

Differential Revision: D16167295

fbshipit-source-id: 6e525d2263014e0666928077a71d9d406bd68143",False
0e8854420f8fb9ccaebb2d80099614402792c0c8,2019-07-10 15:47:39,Claudio Procida,"Merge pull request #2113 from danielo515/patch-1

Update Overview.md",True
0f138d15399f6ba5a201b5142d137160eef0793b,2019-07-10 01:09:54,Claudio Procida,"Update ShipIt Sync

fbshipit-source-id: 5ba27243cb827f73b7052bb62a5fd671b76547f2",False
7220e6cd7d8c1072131027484d35f4930dd16b76,2019-07-10 01:08:08,Claudio Procida,"Merge pull request #2125 from claudiopro/0.11.0

Release 0.11.0",True
ab7c21b87ed6b7952f7868f892b87a2d58d7f2a8,2019-07-09 20:39:42,Claudio Procida,Updates generated resources,False
fe6c335a1ce5b70f60ed1f6dbafe435b2b1ac67f,2019-07-09 20:37:28,Claudio Procida,v0.11.0,False
5eb49b1ce911811a9e4c5e9c15b5673e9c2906a7,2019-07-09 20:11:57,Claudio Procida,"Moves test for legacy convertFromHTMLToContentBlocks out of OSS repo

Summary: This diff removes the Jest snapshot test for the legacy `convertFromHTMLToContentBlocks` util from the OSS repo.

Reviewed By: mitermayer

Differential Revision: D16163233

fbshipit-source-id: 9b902aba0f9e9218fed4df5f4f54e9cd92589e1a",False
a7d955e5a6325f149db5ab942d52de2645945419,2019-07-09 13:57:34,Claudio Procida,"Removes legacy convertFromHTMLToContentBlocks from OSS repo

Summary: This is the last diff in the stack to deprecate and remove the legacy `convertFromHTMLToContentBlocks` util from the OSS repo.

Reviewed By: mitermayer

Differential Revision: D15899285

fbshipit-source-id: ac57fe1fb5875bb308522299f73e74228764071a",False
d08399bcc6ef3718bb574684a3ffeebd95a98cd9,2019-07-09 13:57:33,Claudio Procida,"Renames convertFromHTMLToContentBlocks2 to convertFromHTMLToContentBlocks

Summary:
Renames `convertFromHTMLToContentBlocks2` to `convertFromHTMLToContentBlocks` to mark it the default.

This diff has no functional changes.

Reviewed By: mitermayer

Differential Revision: D15845011

fbshipit-source-id: 6191e7d5e2de7b094077cea143dafe77a2210f59",False
2487e7dfad7e0c77303e293556c3c71d0744b561,2019-07-07 00:38:31,job,"Fixed dag and drop .length error (#2117)

Summary:
If you drag an image into the draft-js editor it throws an error:

```
insertTextIntoContentState.js:25 Uncaught TypeError: Cannot read property 'length' of null
    at insertTextIntoContentState (insertTextIntoContentState.js:25)
    at Object.replaceText (DraftModifier.js:63)
    at Object.insertText (DraftModifier.js:67)
    at insertTextAtSelection (DraftEditorDragHandler.js:116)
    at onDrop (DraftEditorDragHandler.js:102)
    at DraftEditor.react.js:268
    at HTMLUnknownElement.callCallback (react-dom.development.js:147)
    at Object.invokeGuardedCallbackDev (react-dom.development.js:196)
    at invokeGuardedCallback (react-dom.development.js:250)
    at invokeGuardedCallbackAndCatchFirstError (react-dom.development.js:265)
    at executeDispatch (react-dom.development.js:571)
    at executeDispatchesInOrder (react-dom.development.js:596)
    at executeDispatchesAndRelease (react-dom.development.js:695)
    at executeDispatchesAndReleaseTopLevel (react-dom.development.js:704)
    at forEachAccumulated (react-dom.development.js:676)
    at runEventsInBatch (react-dom.development.js:844)
    at runExtractedEventsInBatch (react-dom.development.js:852)
    at handleTopLevel (react-dom.development.js:5030)
    at batchedUpdates$1 (react-dom.development.js:21469)
    at batchedUpdates (react-dom.development.js:2247)
    at dispatchEvent (react-dom.development.js:5110)
    at react-dom.development.js:21526
    at Object.unstable_runWithPriority (scheduler.development.js:255)
    at interactiveUpdates$1 (react-dom.development.js:21525)
    at interactiveUpdates (react-dom.development.js:2268)
    at dispatchInteractiveEvent (react-dom.development.js:5086)
insertTextIntoContentState @ insertTextIntoContentState.js:25
replaceText @ DraftModifier.js:63
insertText @ DraftModifier.js:67
insertTextAtSelection @ DraftEditorDragHandler.js:116
onDrop @ DraftEditorDragHandler.js:102
(anonymous) @ DraftEditor.react.js:268
callCallback @ react-dom.development.js:147
invokeGuardedCallbackDev @ react-dom.development.js:196
invokeGuardedCallback @ react-dom.development.js:250
invokeGuardedCallbackAndCatchFirstError @ react-dom.development.js:265
executeDispatch @ react-dom.development.js:571
executeDispatchesInOrder @ react-dom.development.js:596
executeDispatchesAndRelease @ react-dom.development.js:695
executeDispatchesAndReleaseTopLevel @ react-dom.development.js:704
forEachAccumulated @ react-dom.development.js:676
runEventsInBatch @ react-dom.development.js:844
runExtractedEventsInBatch @ react-dom.development.js:852
handleTopLevel @ react-dom.development.js:5030
batchedUpdates$1 @ react-dom.development.js:21469
batchedUpdates @ react-dom.development.js:2247
dispatchEvent @ react-dom.development.js:5110
(anonymous) @ react-dom.development.js:21526
unstable_runWithPriority @ scheduler.development.js:255
interactiveUpdates$1 @ react-dom.development.js:21525
interactiveUpdates @ react-dom.development.js:2268
dispatchInteractiveEvent @ react-dom.development.js:5086
```
With this change the editor checks if there is any text and if there is it handles it like normal, if there isn't it does nothing.

Closes: https://github.com/facebook/draft-js/issues/2116
Pull Request resolved: https://github.com/facebook/draft-js/pull/2117

Reviewed By: niveditc

Differential Revision: D16132165

Pulled By: claudiopro

fbshipit-source-id: cd9ddc424845df3e9de1de6087201ef83e28ecb0",False
ec43403d38486039f1c42c04dcee36fc7ca9f477,2019-07-05 21:52:37,Claudio Procida,"Removes all resolved uses of convertFromHTMLToContentBlocks_DEPRECATED

Summary:
Removes all uses of `convertFromHTMLToContentBlocks_DEPRECATED` except those that haven't been safely transitioned to `convertFromHTMLToContentBlocks2`, i.e. Recruiting Tools confirmation email template editor and the test case for `convertFromHTMLToContentBlocks_DEPRECATED` itself.

**Note:** this diff will not be landed until a few days after D15844900 is pushed, to ensure all internal customers of Draft.js are on board.

Reviewed By: mitermayer

Differential Revision: D15844926

fbshipit-source-id: c8b28513b27bba214669f1a7af82afcb79b1dc9c",False
0f5427a061fd0817d64401a89025621b63078a9e,2019-06-24 17:25:03,Daniel Quadros de Miranda,"draft-js: clean up useless divs from HTML when pasting content

Summary:
When pasting rich (HTML) content into a Draft editor, the generated blocks
are flattened such that they can be represented in the internal state model.
Until a change to the tree-based model is fully implemented, that may cause
formatting to be lost if the content is wrapped in multiple levels of divs,
as the parsing does not traverse them deeply.

Improve the amount of formatting that can be preserved in the current model
by stripping out divs considered 'useless' (with no text or styling), such
that more important elements can be 'brought to the surface' and parsed
in a more pleasant manner.

Reviewed By: claudiopro

Differential Revision: D15923965

fbshipit-source-id: 72824ddba69b5d08374f505187ed4a6ea7c4d573",False
6394bd4da76995aad9429bc16056161344a153cd,2019-06-21 18:04:00,Daniel Rodríguez Rivero,"Update Overview.md

There is no need to create an extra function just for updating the state.",False
ceaeebf1f50fee452d92d71c5e2008e3d4fb6d9f,2019-06-19 18:11:13,Claudio Procida,"Deprecate legacy convertFromHTMLToContentBlocks

Summary: This diff renames `convertFromHTMLToContentBlocks` to `convertFromHTMLToContentBlocks_DEPRECATED` to formally declare it deprecated ahead of its removal, and give consumers a heads up that they ought to upgrade to `convertFromHTMLToContentBlocks2` and report back any issues with parsing HTML templates.

Reviewed By: mrkev

Differential Revision: D15844900

fbshipit-source-id: c7077f02627e82814f2429ec80f8a70b1e87aadc",False
eddcc5532b70a9f7112a2985e4e8dff0f05817d3,2019-06-14 15:39:11,Sajad Torkamani,"Fix broken id anchor (#2095)

Summary:
*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

**Summary**

Just a small fix :)

**Test Plan**

1. Check out draft-js repo
1. Install dependencies with `yarn`
1. Change working directory to the website dir: `cd website`
1. Launch website in development mode: `yarn start`
1. Click the **Docs** link in the header
1. Click the **Learn more about why** link at the bottom of the page
1. Verify the page **Issues and Pitfalls** opens and scrolls to the **Missing Draft.css** heading
Pull Request resolved: https://github.com/facebook/draft-js/pull/2095

Differential Revision: D15821826

Pulled By: claudiopro

fbshipit-source-id: 85977433416c7642f477d5709bee70f0795cf313",False
87a812dc164c49d1ef56a384ceb1b1a89e5e76bd,2019-06-14 15:28:54,Jonathan Erlich,"Typo corrected - Overview.md (#2089)

Summary:
*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

[...]

**Test Plan**

[...]
Pull Request resolved: https://github.com/facebook/draft-js/pull/2089

Differential Revision: D15821704

Pulled By: claudiopro

fbshipit-source-id: ea47287ffcaecab0addf0e74a6f7e8c36bf50274",False
12c448036cefc191887def9c05f2a16ed90a7380,2019-06-14 06:22:54,Kevin Li,"fix: set to nested list items to right depth

Summary:
Previously, a non-root-level bullet point would be demoted by one level.

i.e.
```
- A
- B
  - C
- D
  - E
    - F
```

would render as

```
- A
- B
- C
- D
- E
  - F
```

I manually tested and verified this only affects `convertFromHTMLToContentBlocks2`, and not `convertFromHTMLToContentBlocks`.

Reviewed By: NoamELB

Differential Revision: D15748960

fbshipit-source-id: e018ac740b622fb13f7053d4d1aa4c4e50a67d00",False
7cfb055e7176dbbe6ac26450d866a10ca8a53798,2019-06-14 06:22:54,Kevin Li,"fix(styles): avoid permanently accumulating attribute styles

Summary:
Attribute styles defined on a node were permanently added to the persistent set of styles.
This meant that any bold/italic/underline/strikethrough styles would persist until the end of the document, or until a different value was set for it.

This wasn't an issue in `convertFromHTMLToContentBlocks` because it would clone the current styles before passing them off to its children.
Since this was refactored away in `convertFromHTMLToContentBlocks2` (probably for perf reasons), I safely mutated `currentStyle` around its children, in the same way as `inlineStyle`.

Reviewed By: claudiopro

Differential Revision: D15737186

fbshipit-source-id: 494f75da48f9a23a5ece450ab66002f4a3f9c43a",False
96c722144acc23b269ba37004451c601b08ce7db,2019-06-13 00:03:14,Claudio Procida,"Adds support for nullish coalescing operator (#2076)

Summary:
**Summary**

Adds support for nullish coalescing operator which was missing from the babel config of the OSS repo.

**Test Plan**

`yarn`
Verify Travis CI tests pass
Pull Request resolved: https://github.com/facebook/draft-js/pull/2076

Differential Revision: D15781518

Pulled By: claudiopro

fbshipit-source-id: 4d6deb3503dfbbcf142a8dbaa10ebc2ec8e7a1c4",False
23fc70f0cb97d0c96ac3637446f52a4c49cad8c0,2019-06-11 20:49:38,Claudio Procida,"Fixes runtime error when cutting empty selection at the end of the content

Summary: This diff introduces an undesired behavior introduced by D13085302 where the removeRange operation triggers an error if the selection is collapsed at the end of the last content block.

Reviewed By: elboman

Differential Revision: D15758815

fbshipit-source-id: 0f0c2cc94aed23643efb36a66587189e624addc6",False
01ce68321b8b497795f53d9a10f64fbcd036bd1c,2019-05-29 10:15:25,Sam Goldman,"Deploy Flow v0.99.0 to www

Reviewed By: panagosg7

Differential Revision: D15486708

fbshipit-source-id: f0717e6fbdea8845553926f462f12b54698817fc",False
943f6dce5188724a11bb392645f5873fe5dcf1a6,2019-05-20 22:39:19,Bennett,"Add import statements for hooks-example in README (#2075)

Summary:
**Summary**

The README is missing the import statements for the getting-started-example with hooks.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2075

Differential Revision: D15415655

Pulled By: claudiopro

fbshipit-source-id: 64c5b766e381269ebf441ac98b79260354f1d198",False
634bd297f1646934087051b1149164b01a09a136,2019-05-09 22:38:26,Fabio M. Costa,"Fixing major Android editing issues (#2035)

Summary:
This PR is a new attempt to address https://github.com/facebook/draft-js/issues/1895

On https://github.com/facebook/draft-js/pull/2031 I was trying to make compositions work using the data provided by that event, and even though that works well for most operational system, that doesn't work well for Android, where you can make composition updates in multiple places on the same composition transaction.

This PR is an improvement over that PR, in that it uses a DOM mutation observer during the `compositionStart` -> `compositionEnd` interval to detect the changes the user made, and then re-apply those to the ContentState on `compositionEnd`.

This approach is the one used by [Prosemirror](http://prosemirror.net/) (see https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js), which is the only Rich Text Editor I've tried that works well on Android.
Like previously mentioned, it allows multiple mutations on multiple places in the same composition transaction, which was impossible with the previous approach, and would cause DOM<->state inconsistencies in multiple use cases.

The intent of this PR is not to fix every single Android bug, but to have a consistent editing experience on Android without introducing bugs (ideally).

**TODO, known issues:**
- [x] Removing empty line breaks with <backspace> doesn’t remove blocks.
- [x] Mutations on the same block (different leaf nodes) are not being properly applied.
- [x] Selection is not properly updated during composition events
- [ ] Keep `inlineStyleOverride` working with a consistent behavior

**TODO, others:**
- [x] Test on Android Pie v9 API 28
- [x] Test on Android Oreo v8.1 API 27
- [x] Test on Android Oreo v8.0 API 26
- [x] Test on iPhone 12.1 (with Japanese Kana keyboard)
- [x] Test composition events on Chrome Desktop v73
- [x] Test composition on IE11 (I didn't know how to test composition events though)
- [x] Unit tests

There are 3 ways to try out this PR.

Codesandbox: https://3ymzzlj9n5.codesandbox.io/ (uses `draft-js-android-fix-beta.3`)

Use the published [draft-js-android-fix](https://www.npmjs.com/package/draft-js-android-fix) package: `yarn install draft-js-android-fix`

Note that this package might not be up-to-date, it's hard for me to guarantee I'll always remember to update the package, but I'll do my best.

The other way is guaranteed to be up-to-date, but has a longer setup:
* run `git clone https://github.com/facebook/draft-js.git`
* run `git remote add fabiomcosta https://github.com/fabiomcosta/draft-js.git`
* run `git fetch fabiomcosta`
* run `git checkout -b attempt_android_fix_with_dom_diff fabiomcosta/attempt_android_fix_with_dom_diff`
* run `yarn install` (or use `npm`)
* run `open examples/draft-0-10-0/rich/rich.html`, or any other example you'd like to test
Pull Request resolved: https://github.com/facebook/draft-js/pull/2035

Reviewed By: kedromelon

Differential Revision: D14568528

Pulled By: claudiopro

fbshipit-source-id: 16861de52eca41cd98f884b0aecf034213fc1bd0",False
768765f6c85a108df658687aeede2e27c54cd2e3,2019-05-08 06:24:55,Daniel Sainati,"html/js/shared

Summary:
```
~/fbsource/fbcode/flow/src/facebook/komodo/scripts/annotate-exports-multi-run.sh -c -l html/shared

hg status -n --rev master | xargs grep -P -l '@(partially-)?generated' | xargs hg revert -r master
hg status -n --rev master | xargs grep -P -l 'lightSyntaxTransform' | xargs hg revert -r master
hg status -n --rev master | xargs -P 20 -n 1000 prettier --write --require-pragma
hg status -n | xargs -P 20 -n 1000 ./scripts/bin/prettier --write
~/www/scripts/third-party/node ~/www/scripts/third-party/node_modules/eslint/bin/eslint.js --no-eslintrc --fix --parser babel-eslint --plugin 'fb-www' --rule 'fb-www/order-requires: [1]' $(hg status -n --change .)
hg status -n | xargs -P 20 -n 1000 ./scripts/bin/prettier --write
```

Why we are doing this: https://fb.workplace.com/groups/179614562644215/permalink/373766316562371/
bypass-lint
allow_many_files
drop-conflicts

Reviewed By: panagosg7

Differential Revision: D15246251

fbshipit-source-id: e5e40b13f9dbf77d90d34d81704a2e295d767a18",False
f92d4b1bd04e9c9be4429407330c2be493583c2f,2019-05-07 17:53:49,Mounish Sai,"docs: remove --save flag (#2008)

Summary:
--save is no longer needed.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2008

Differential Revision: D15239571

Pulled By: claudiopro

fbshipit-source-id: 78227dc4d3748ea64d769198a0dd9886f5e30b0c",False
8514b57da56218ce18a8088a626c0005adcc06dd,2019-05-07 17:53:48,Umang Galaiya,"Rename DraftEditorBlock to EditorBlock (#2002)

Summary:
**Summary**

The `DraftEditorBlock` component is exposed to the public API as `EditorBlock`, while the [documentation](https://draftjs.org/docs/advanced-topics-block-components) still mentions `DraftEditorBlock`.
https://github.com/facebook/draft-js/blob/b4183b1519edcd075325adae0cb208551dc80f50/src/Draft.js#L45
Pull Request resolved: https://github.com/facebook/draft-js/pull/2002

Differential Revision: D15239547

Pulled By: claudiopro

fbshipit-source-id: 43556827d1bc571e98b528562c88038f195534c7",False
e8e0bcfe6407463a3bc35d81cba7fd0de7053fb9,2019-04-30 14:31:34,seojeee,"Fix broken link in Overview.md (#2062)

Summary:
**Summary**

fixed the broken link on the documentation

**Test Plan**
.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2062

Differential Revision: D15146390

Pulled By: claudiopro

fbshipit-source-id: 31450d24a5326025b3fa7ffb9c142f1ccfa4fba3",False
fe4e266208964324079edc7bd0af2b70ad959c6a,2019-04-25 23:23:26,Claudio Procida,"Fix failing DraftStringKey test (#2064)

Summary:
**Summary**

Fixes failing tests by disabling Jest automock

**Test Plan**

`jest -u`
Verify the PR fixes the build on Travis CI
Pull Request resolved: https://github.com/facebook/draft-js/pull/2064

Reviewed By: kedromelon

Differential Revision: D15079625

Pulled By: claudiopro

fbshipit-source-id: 26b23ec5cca83b2a2b907a34ed43e65c95e3bb2f",False
978ad6b14403800df5e82ca95f20304bd4a81d1d,2019-04-25 15:22:03,Claudio Procida,"Unit tests for DraftStringKey

Summary: Simple unit tests for the DraftStringKey module

Reviewed By: j-nolan

Differential Revision: D15063748

fbshipit-source-id: f857332ed835cd3d79c2d68dc8ca133885d4a5ec",False
76e121e7676f688fbc63f89379d508b3f8211e8e,2019-04-25 15:06:45,Claudio Procida,"Fixes require order lint issues /2

Summary: Fixes some require order lint issues in tests

Reviewed By: j-nolan

Differential Revision: D15064471

fbshipit-source-id: 533eb93b82393b003642ca5fa0a1af7e5bacdd31",False
e2c5357734de2a66025825c2872cc236a154d60c,2019-04-24 21:52:49,Claudio Procida,"Fixes require order lint issues

Summary: Fixes some require order lint issues

Reviewed By: kedromelon

Differential Revision: D15063948

fbshipit-source-id: 044b00fb1f91ebf5606f6bf8ef82a1427a9f4d55",False
1ba0764cd4c6f603a88056b26770b6f0a1516db3,2019-04-24 21:52:49,Claudio Procida,"Removes unnecessary eslint disable rules

Summary:
Removes unnecessary eslint disable rules:

* no-bitwise

Reviewed By: kedromelon

Differential Revision: D15064085

fbshipit-source-id: a700129232277d3714187bb9ca51a434fa377338",False
d09ef3e416beb766b5a227ea84e8d735ff11823b,2019-04-23 00:21:32,Tee Xie,"Fix the issue of draft JS does not do copy and paste correctly with custom entities.

Summary:
details are here: https://github.com/facebook/draft-js/pull/1784
in the comment, nivedita mentioned we need to test this out for intern editor
hence not merging the PR.

since that comment was made back in Jan, so it's probably gonna take a while
for this to be merged into FB codebase. In the mean time this is blocking
CMS Editor's embeded CMS use case. So I figured we should do a branching
to merge the fix just for CMS Editor.

Unfortunately, the logic is pretty deep in the DraftJS stack, so I had to make
a couple changes to pass down the copy paste behavior.

Differential Revision: D14626028

fbshipit-source-id: 4826ea33abf2618835841200af81e10d707aa23b",False
75a89ff99c2aac83e95a2f1ef75288f3e435e198,2019-04-15 16:38:14,Tanner Eustice,"fix typo in README.md (#2055)

Summary:
**Summary**

Just fixing a typo in the README, changing 'use' to 'you'.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2055

Differential Revision: D14933030

Pulled By: claudiopro

fbshipit-source-id: dc4034a9574e40cf1b671e7d2a9ac042ad47eb3a",False
f9f5fd6ed1df237389b6bfe9db90e62fe7d4237c,2019-04-12 01:23:08,Charles ⚡,"Adding Hooks in docs (#2004)

Summary:
Adds React Hooks as examples in docs #1987
Pull Request resolved: https://github.com/facebook/draft-js/pull/2004

Reviewed By: claudiopro

Differential Revision: D14783281

Pulled By: claudiopro

fbshipit-source-id: 7edcdb3ee4e32afd1197ea69fed968538243eccd",False
dc58df8219fdc1e12ce947877d103b595682efa9,2019-04-10 03:43:51,Aaron Abramov,"rename `*.test.js` to `*-test.js` to match naming convention

Summary:
bypass-lint

from the task:
```
Right now any file inside __tests__ on www is considered a test. This makes it difficult to create test helpers that make the code cleaner, as they're interpreted as tests and thus executed.

We should restrict tests to files ending with -test.js (as it's the general convention there).
```

Reviewed By: scotthovestadt

Differential Revision: D14856710

fbshipit-source-id: 900735c423b04472d46ab10158779a20bbcc2506",False
1fae34fe94309fe1c4917e60fef5f3a93108e32a,2019-04-05 08:23:50,Dennis Wilkins,"Convert some of draftjs' ReactDOM.findDOMNode to refs (#2051)

Summary:
Pull Request resolved: https://github.com/facebook/draft-js/pull/2051

ReactDOM.findDOMNode is deprecated and need to remove instances of it in draftjs, so React can be in strict mode.

Reviewed By: bennyhobart

Differential Revision: D14716519

fbshipit-source-id: b1bb4ab73f70a8b4e8429077a0b6b2c180724ee8",False
ffd8f5919190ff5be7788346423e04d4f37ade41,2019-03-31 17:37:26,Ben Gardner,"Correct warning condition (#2049)

Summary:
**Summary**

To my knowledge, ```warning``` works the way ```invariant``` does; it warns if the first argument is false not true.

Prior to this PR, ```moveSelectionBackward``` warns when the selection is collapsed when it should do the opposite.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2049

Differential Revision: D14699712

fbshipit-source-id: bd649fa6fdc60346d80be27ab4217324c3ef21d6",False
aede8238ed5f36e6ebaf637c713bee24f56d29e6,2019-03-29 06:10:27,Kevin Hawkinson,"Exports isSoftNewlineEvent as static method of KeyBindingUtil

Summary: Pull Request resolved: https://github.com/facebook/draft-js/pull/2045

Differential Revision: D14674391

fbshipit-source-id: 431ba174a820532d9727a7d98ddf3d1da7ffafe6",False
71ef3736ac6497cc3c5e0baeabd6bdd3ce7417ac,2019-03-21 17:37:18,Claudio Procida,"Upgrades react-scripts to ^1.1.5 (#2042)

Summary:
**Summary**

Upgrades react-scripts to ^1.1.5 to remove an indirect dependency on the [vulnerable package macaddress@0.2.8](https://snyk.io/vuln/SNYK-JS-MACADDRESS-12141).

**Test Plan**

Smoke test the Draft.js playground

```
cd examples/draft-0-10-0/playground
yarn install
yarn run start
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2042

Reviewed By: anarelion

Differential Revision: D14560176

Pulled By: anarelion

fbshipit-source-id: b109049e545361db9ed0a35b7242fac5fd85cdc3",False
21753fa3316acf03d5e0568d465503944cb9bf18,2019-03-20 22:40:37,Claudio Procida,"Upgrades docusaurus (#2039)

Summary:
**Summary**

Runs `yarn upgrade docusaurus` to ensure we're on the latest set of dependencies

**Test Plan**

Run the docusaurus build and test the website on http://localhost:3000/

```
cd website
yarn run build
yarn run start
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/2039

Reviewed By: mrkev

Differential Revision: D14539917

Pulled By: mrkev

fbshipit-source-id: 16f79868bbae7e78076df26997021b13b097d66d",False
3c01ef6eb73e912d3a9bc38e7c917bc2c4246821,2019-03-11 23:53:41,Fabio M. Costa,"Fix npm run dev (#2030)

Summary:
**Summary**

Fixes the `npm run dev` command, which currently fails when run.

**Test Plan**

`npm run dev`
`yarn run dev`
Pull Request resolved: https://github.com/facebook/draft-js/pull/2030

Differential Revision: D14406346

fbshipit-source-id: 9a689d4ef3097a2728f5603d20097b98b6c3a8df",False
fc3549a869201cc5856b3800fdf2bd9d55451c20,2019-03-09 01:21:37,Claudio Procida,"Removes unused gulp-browserify-thin (#2032)

Summary:
**Summary**

Removes unused dev dependency on `gulp-browserify-thin`. Addresses a security vulnerability that affects `minimatch@2.0.10` indirectly required through this module.

```
→ yarn why minimatch
Using globally installed version of Yarn
yarn why v1.12.1
[1/4] �  Why do we have the module ""minimatch""...?
[2/4] 🚚  Initialising dependency graph...
[3/4] 🔍  Finding dependency...
[4/4] 🚡  Calculating file sizes...
=> Found ""minimatch@3.0.4""
info Has been hoisted to ""minimatch""
info Reasons this module exists
   - Hoisted from ""eslint#minimatch""
   - Hoisted from ""glob#minimatch""
   - Hoisted from ""gulp-if#gulp-match#minimatch""
   - Hoisted from ""jest#jest-cli#istanbul-api#minimatch""
   - Hoisted from ""gulp-concat-css#rework-import#globby#glob#minimatch""
   - Hoisted from ""envify#jstransform#commoner#glob#minimatch""
   - Hoisted from ""jest#jest-cli#istanbul-api#fileset#minimatch""
   - Hoisted from ""jest#jest-cli#jest-runtime#babel-plugin-istanbul#test-exclude#minimatch""
   - Hoisted from ""gulp#glob-watcher#chokidar#fsevents#node-pre-gyp#npm-packlist#ignore-walk#minimatch""
info Disk size without dependencies: ""44KB""
info Disk size with unique dependencies: ""64KB""
info Disk size with transitive dependencies: ""120KB""
info Number of shared dependencies: 1
=> Found ""browserify#minimatch@2.0.10""
info Reasons this module exists
   - ""gulp-browserify-thin#browserify#glob"" depends on it
   - Hoisted from ""gulp-browserify-thin#browserify#glob#minimatch""
info Disk size without dependencies: ""76KB""
info Disk size with unique dependencies: ""96KB""
info Disk size with transitive dependencies: ""152KB""
info Number of shared dependencies: 1
✨  Done in 0.96s.
```

**Test Plan**

Check if `gulp-browserify-thin` is required anywhere, it is not.
Pull Request resolved: https://github.com/facebook/draft-js/pull/2032

Reviewed By: mrkev

Differential Revision: D14388097

Pulled By: mrkev

fbshipit-source-id: 6b9b46ec8129d7899805021fbd6d6d1f8b9e443b",False
68196f63be890956d29992f89856ea4d2c612fd2,2019-03-07 22:51:58,Claudio Procida,"Upgrades @babel/core, babel-preset-fbjs, and gulp-util (#2028)

Summary:
**Summary**

Addresses broken flow types extracted during the gulp build. Solves #2027

Upgrades the following dependencies:

- babel-core@^6.8.0 -> babel/core@^7.3.4
- babel-preset-fbjs@^2.1.0 -> ^3.2.0
- fbjs-scripts@^0.8.0 -> ^1.1.0
- gulp-babel@^6.1.2 -> ^8.0.0
- jest@^23.5.0 -> ^24.1.0

**Test Plan**

yarn
yarn test
yarn flow

Manual inspection of generated flow types under `lib/`
Pull Request resolved: https://github.com/facebook/draft-js/pull/2028

Reviewed By: mitermayer

Differential Revision: D14366317

Pulled By: mitermayer

fbshipit-source-id: 734c15717e94c3bc7f1a552496b67ce6a509da06",False
7b9a7e116ab6dd639ebba28736629dfc04cbc7b0,2019-03-05 10:38:45,George Zahariev,"Specify correct type of joinClasses

Summary:
The type of `joinClasses` in fbjs 1.0 which draft-js open-source uses is incorrect (it is correct in www), specify the correct type when importing.

I would have thought that I would have to cast the import to `any` before casting it to a different type, but apprently this works (tested in cloned github repo).

Reviewed By: claudiopro

Differential Revision: D14318804

fbshipit-source-id: e4fd34ca5efda6fd9be681a49905d9e9fdb9e3ae",False
618393591811b890472eea89dcc06ec84e3bc9dc,2019-03-02 04:06:42,George Zahariev,"Deploy 0.94 to www

Summary: Updates WWW to Flow 0.94.0

Reviewed By: dsainati1

Differential Revision: D14282561

fbshipit-source-id: 57f2c623f1dada2acaf1566d36cb9d162edbb2c4",False
6a26a82b98f229933e483703ba702097840a0706,2019-02-27 02:21:59,Claudio Procida,"Restores flow error suppression for fbjs@1.0.0 (#2014)

Summary:
**Summary**

Restores a flow error suppression annotation removed with D14074027

**Test Plan**

`yarn run flow`
No errors
Pull Request resolved: https://github.com/facebook/draft-js/pull/2014

Reviewed By: dsainati1

Differential Revision: D14229161

Pulled By: dsainati1

fbshipit-source-id: b169d832d0b50e3366a94d53ae7e60ca89035ae7",False
5081c872304384d3a213159bd8cc16e164bdf85a,2019-02-26 09:07:23,Guillaume Aubert,"Fix leading line feed conversion

Summary:
Pasting text from Quip results in a space being inserted at the beginning of each new line (except for the first one), due to blocks including \n as a leading character that is then turned into a space.

I couldn't repro the issue with Word flagged in the comment (could be Word on Windows, or one of the older versions of Word?), but just in case I'm only removing the leading \n that is invisible in HTML and leaving the other replacements as is.

Reviewed By: claudiopro

Differential Revision: D14199824

fbshipit-source-id: c6b9cfa72e3f75d9fae485bb87fb5bd40862375a",False
3400cdafb465640c41d3728d52ed59e8f13ad78a,2019-02-16 02:52:10,Daniel Sainati,"deploy 0.93

Summary: This diff updates ~/www to Flow 0.93.0

Reviewed By: pakoito

Differential Revision: D14074027

fbshipit-source-id: 39459cb65fb0fb10eecf31066423146499ffe634",False
fdf63aa6a8907e0889b882bf1db051fa412be283,2019-02-14 16:55:38,Claudio Procida,"Handles <br> tags in refactored HTML converter

Summary: This diff aligns the refactored HTML converter with the legacy one to correctly handle <br> tags

Reviewed By: mitermayer

Differential Revision: D14027112

fbshipit-source-id: 68c2ae2272bac4e2d90a72b71cfb43f7b20faa3a",False
b4183b1519edcd075325adae0cb208551dc80f50,2019-02-09 05:36:57,Claudio Procida,"Normalize case in convertFromHTMLToContentBlocks variable names

Summary: Normalize case in `convertFromHTMLToContentBlocks` variable names. It is often found as `convertFromHTMLtoContentBlocks` (lowercase 'to') and can give us unpleasant surprises in case of codemods

Reviewed By: mitermayer

Differential Revision: D14004772

fbshipit-source-id: e7dc11a6eeedbf2fa3ca607f613f99fa6583942a",False
bd799f56a2594dcb177a9fbe9985059134502841,2019-02-09 00:36:32,Claudio Procida,"Cleans up and refreshes generated website resources (#1998)

Summary:
**Summary**

Cleans up unused website resources from before the migration to Docusaurus, and makes sure static website resources are generated and refreshed at every build.

**Test Plan**

```
yarn
cd website
yarn build
yarn start
```

Website loads and pages contain the expected content.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1998

Reviewed By: niveditc

Differential Revision: D14004275

Pulled By: niveditc

fbshipit-source-id: 2d0afaf448ae5d1c6f9f6915e530c50c983135d1",False
e84e757caf05d0d25695ac6b88089e8d799ef8a6,2019-02-08 20:37:53,Deniz Susman,"Typo fix in code comment (#1997)

Summary:
""programmatically"" instead of ""programatically"".
Pull Request resolved: https://github.com/facebook/draft-js/pull/1997

Differential Revision: D14004426

fbshipit-source-id: f775eb9e69ca0f9dbd02fbe94132ebc166f82d08",False
c21a9f7f09fa737f27875dc5ca8264a0b1dc86c2,2019-02-07 16:20:57,Jan Karlo Dela Cruz,"Fix bad destructuring when content block key has a `-` (#1995)

Summary:
**Summary**

If a content block was created with a key that contains the `-`, it would fail to decode the `decoratorKey` and the `leafKey` because the current implementation relies on `-` to be a parsing delimiter. Here's an example:

```js
class SomeComponent extends React.Component {
  constructor(props) {
    super(props);

    const block = new ContentBlock({
      type: 'paragraph',
      text: 'some-text',
      key: 'some-key'
    });

    const contentState = ContentBlock.createFromBlockArray([block]);

    this.state = {editorState: EditorState.createWithContent(contentState)};

    this.onChange = editorState => this.setState({editorState});
  }

  render() {
    return (
      <Editor
        editorState={this.state.editorState}
        onChange={this.onChange}
      />
    );
  }
}
```

When you select anywhere on the editor, you'd get this error:

```
    TypeError: Cannot read property 'getIn' of undefined

      45 |   const focusBlockKey = focusPath.blockKey;
      46 |   const focusLeaf = editorState
    > 47 |     .getBlockTree(focusBlockKey)
         |                              ^
      48 |     .getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);
      49 |
      50 |   const anchorLeafStart: number = anchorLeaf.get('start');

      at getUpdatedSelectionState (src/component/selection/getUpdatedSelectionState.js:47:30)
      at getDraftEditorSelectionWithNodes (src/component/selection/getDraftEditorSelectionWithNodes.js:48:58)
      at getDraftEditorSelection (src/component/selection/getDraftEditorSelection.js:37:53)
      at assertGetDraftEditorSelection (src/component/selection/__tests__/getDraftEditorSelection-test.js:55:53)
      at Object.<anonymous> (src/component/selection/__tests__/getDraftEditorSelection-test.js:211:3)
```

**Test Plan**

Added a unit test for `DraftOffsetKey.js` to check for all delimiter cases.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1995

Differential Revision: D13982004

fbshipit-source-id: 3cd5967ad86041e310c41e7bcbfff4e868062804",False
a97ed7efcf0caeee8ab0a03f785b4b431eba5a8f,2019-02-07 07:53:26,claudiopro,"Upgrades Draft to React 16.8 ⚛️ (#1996)

Summary:
**Summary**

Upgrades [react](https://npm.im/react) and [react-dom](https://npm.im/react-dom) dependencies to the freshly released 16.8 version supporting Hooks.

**Test Plan**

`yarn`
manual smoke test of editor in examples
Pull Request resolved: https://github.com/facebook/draft-js/pull/1996

Differential Revision: D13982016

fbshipit-source-id: b2f87a1d85336f60d7a03318e5e0155bb3c44fc8",False
71672107a9593a71acf9b4d7aaed00432b75d932,2019-02-05 02:36:23,Deniz Susman,"Fix typo in code comment for DraftEditor (#1991)

Summary:
""effectively"" instead of ""effetively"".
Pull Request resolved: https://github.com/facebook/draft-js/pull/1991

Differential Revision: D13945386

fbshipit-source-id: bfc4b2edc3dff6177ccb0865e4265aeb412744f7",False
a4cc10d80045d52db9dafb98ecadeb4597521077,2019-02-04 16:06:19,Claudio Procida,"Adds email notifications for TravisCI builds (#1990)

Summary:
**Summary**

Adds claudiopro 's email for TravisCI build notifications. Feel free to do the same if you want to stay in the loop.

**Test Plan**

Wait for the next build to receive an email from TravisCI �‍♂️
Pull Request resolved: https://github.com/facebook/draft-js/pull/1990

Reviewed By: elboman

Differential Revision: D13935604

Pulled By: elboman

fbshipit-source-id: 0a3020e65890793b82c87626f6da284ec310805c",False
e8a281c936fc78834c1e1d2505ba5153aed531c5,2019-02-01 21:50:58,Claudio Procida,"Upgrades flow-bin to 0.91.0 and mutes fbjs joinClasses error � (#1989)

Summary:
**Summary**

Fixes a CI build error (#1988) by adding a `$FlowExpectedError` annotation, and upgrading [flow-bin](https://www.npmjs.com/package/flow-bin) to 0.91.0

**Test Plan**

```
yarn run flow
flow src
```

```
→ flow src
The flow server's version didn't match the client's, so it exited.
Going to launch a new one.

Launching Flow server for /Users/procidac/Development/gh/claudiopro/draft-js/src
Spawned flow server (pid=87525)
Logs will go to /private/tmp/flow/zSUserszSprocidaczSDevelopmentzSghzSclaudioprozSdraft-jszSsrc.log
Monitor logs will go to /private/tmp/flow/zSUserszSprocidaczSDevelopmentzSghzSclaudioprozSdraft-jszSsrc.monitor_log
No errors!
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/1989

Reviewed By: pakoito

Differential Revision: D13917267

Pulled By: pakoito

fbshipit-source-id: ce66ee4c67c4e7cc46c51ca91a4ade3d980fdf2e",False
c022efba2bae265bbaf532f6c867a094b571f917,2019-02-01 04:50:57,Paco Estevez Garcia,"Update to 0.92.0

Summary: This diff updates `~/www` to Flow 0.92.0

Reviewed By: motiz88

Differential Revision: D13900311

fbshipit-source-id: 2ddbbd3f02aba09fa8f24e2b9692fb10b07ad620",False
e942ee9205da89354a366d05f90645736988d38d,2019-01-22 21:21:02,Claudio Procida,"Fixes lint warnings in convertFromHTMLToContentBlocks2 tests

Summary: Fixes lint warnings in convertFromHTMLToContentBlocks2 tests and initializes with defaults from the `clear` method.

Reviewed By: j-nolan

Differential Revision: D13711386

fbshipit-source-id: e5562b69c4388b75ea5a0b5abfb4508ad9096a87",False
a3a35857b0697d573f425138e9260324d0b059b8,2019-01-22 19:06:02,Nivedita Chopra,"Update webpack-dev-server & babel version in TeX examples (#1981)

Summary:
**Summary**
* Upgrade `webpack-dev-server` to 3.1.14 to fix [vulnerability in versions < 3.1.11](https://nvd.nist.gov/vuln/detail/CVE-2018-14732) & `webpack` to 4.0.0 to match it
* Upgrade `babel` to 6.0.0 & `babel-loader` to 7.0.0 to match `webpack` upgrade
* Changes to `server.js` & `app.js` to support the `webpack` & `babel` version upgrades

**Test Plan**
Run `yarn start` and load http://localhost:3000/
<img width=""1089"" alt=""screenshot 2019-01-21 13 22 30"" src=""https://user-images.githubusercontent.com/2357761/51502558-5974d780-1d8b-11e9-8568-917f43967188.png"">
Pull Request resolved: https://github.com/facebook/draft-js/pull/1981

Reviewed By: claudiopro

Differential Revision: D13754649

Pulled By: claudiopro

fbshipit-source-id: 19169f9b091d85344d975e2d7b963437b7701e9b",False
363f66e36790b67bea87e88813134dcd84fcc643,2019-01-22 03:36:19,Deep,"Remove componentWillReceiveProps usages in examples (#1952)

Summary:
**Summary**
Resolves [1940](https://github.com/facebook/draft-js/issues/1940)
Change usage of `componentWillReceiveProps` in Tex examples to `componentDidUpdate`
Pull Request resolved: https://github.com/facebook/draft-js/pull/1952

Reviewed By: claudiopro

Differential Revision: D13417818

Pulled By: claudiopro

fbshipit-source-id: b13ff3140c3207cddaeb8d98c239f7dfd4b04a47",False
9b2a3660fa2e6abb8f6503ebf7f830bc98d0c248,2019-01-22 02:51:55,Anthony Muscat,"Update fbjs to 1.0.0 to fix ReDos Vulnerability (#1978)

Summary:
**Summary**
draft-js was using older version of fbjs that uses older version ua-parser-js what has a vulnerability.

https://app.snyk.io/vuln/npm:ua-parser-js:20180227

**Test Plan**

1. Run npm test and it passes
2. Run npm build and it passes
Pull Request resolved: https://github.com/facebook/draft-js/pull/1978

Differential Revision: D13746429

fbshipit-source-id: 636e9ad795f97781f6dc8a88125dcea0be005987",False
6db3726eeffe0e747b508bf768a7851b87509e8a,2019-01-20 03:36:32,PLa,"Add live demo to README.md (#1907)

Summary:
**Summary**
- Add live demo (GIF) to your README file
Pull Request resolved: https://github.com/facebook/draft-js/pull/1907

Differential Revision: D13745823

fbshipit-source-id: 94d0309c270c9337b2c35265e9a6d8c335854566",False
37f2f2ac16e4edf29c7c7e8230dec544faeafdfe,2019-01-06 00:51:01,Isaiah Solomon,"added highlighting (<mark> tag) to draft js html to content block converter

Summary:
Added mark tag as recognizable tag used for styling in HTML conversion.

We need this because we need a way to include a custom style for highlighted text (via `span`), which there currently seems to be no support for.

Reference to similar open source pull request with same change: https://github.com/facebook/draft-js/pull/1277/commits/638f68641c0ea4f4f0f45ae44e221f3e04006796

Reviewed By: claudiopro

Differential Revision: D13573448

fbshipit-source-id: a72716dd39870d9db8cc0b13d8fcbed683e49063",False
585af35c3a8c31fefb64bc884d4001faa96544d3,2019-01-04 16:06:40,Claudio Procida,"Relicense under MIT and remove patents grant (#1967)

Summary:
**Summary**

After internal discussion and approval by the legal team, we decided to align Draft.js with other Facebook open source projects [recently re-licensed under MIT](https://code.fb.com/web/relicensing-react-jest-flow-and-immutable-js/).

This PR removes the patents grant and re-licenses all Draft.js source files under the MIT license.

**Test Plan**

`yarn lint`
Manual code inspection
Pull Request resolved: https://github.com/facebook/draft-js/pull/1967

Differential Revision: D13572529

fbshipit-source-id: f59982148515fdc7a2f697c92e1939e211b6125c",False
642aa119af114e8db590fe76cd2f2b84e118471c,2019-01-03 17:06:51,Claudio Procida,"Normalize copyright headers to BSD + patents grant and drop the year (#1964)

Summary:
**Summary**

This PR follows up work started by niveditc on #1860 and suspended because of limitations with tooling. Let's give it another try.

- Remove all copyright years
- Correct copyright headers under `website/` referencing the MIT license
- Inline `All rights reserved.` on the same line of the copyright
- Fixes copyright headers of examples incorrectly using headers for source files

The PR also normalizes copyright headers to BSD with patents grant, as some files were later added with the newest MIT license applied to React and other OSS projects. We should discuss the switch to MIT for Draft.js as well.

**Test Plan**

Manual inspection of files + `yarn lint`
Pull Request resolved: https://github.com/facebook/draft-js/pull/1964

Differential Revision: D13562427

fbshipit-source-id: 6a15d29ff56a6340ee2a0f13f278b207f1761d28",False
fb7882b436fa148629a2e0ab4784218a2fc5d630,2018-12-26 20:06:02,Claudio Procida,"Fixes flow error (#1962)

Summary:
**Summary**

Fixes a flow error in master (#1961) by replacing an inline `$FlowFixMe` with the appropriate type `string`

**Test Plan**

```
→ yarn flow
Using globally installed version of Yarn
yarn run v1.12.1
$ flow src
No errors!
✨  Done in 0.28s.
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/1962

Differential Revision: D13548249

fbshipit-source-id: 6975261897187560536a08fafc24c3400d7bf645",False
8dd6dda034d06326e77044677327734e02c585fd,2018-12-15 03:51:29,Gabe Levi,"Remove unused suppression comments from www as of v0.89

Summary:
This makes a best effort attempt to clean up unused suppressions in www.

* Removed comments from www

```
$ ~/flow/tool remove-comments --bin `which flow` --check status .
Removed 565 comments in 360 files
Ignored 38 comments in 18 files due to -flowtest.js suffix or __flowtests__ directory. Run with `--include-flowtest` to also remove those files.
```

* Revert generated code (61 files P60440612)

* Manually fixed a few things in www and mobile. Mostly flowlint comments or poorly scoped comments

* Ran prettier

* Removed comments from mobile

```
[glevi@devbig023 www-hg]$ ~/flow/tool remove-comments --bin `which flow` --check status html/js/mobile
Removed 11 comments in 11 files
Ignored 6 comments in 3 files due to -flowtest.js suffix or __flowtests__ directory. Run with `--include-flowtest` to also remove those files.
```

* Reverted generated files

* Manually fixed mobile again (a few malformed flowlint comments)

drop-conflicts
bypass-lint

Reviewed By: jbrown215

Differential Revision: D13450730

fbshipit-source-id: 6fdbd00e36e439388e221fc233f2ecf01fe07442",False
85ad25c3f5c8fe5a989f4d92eb0c5f100b0e57c7,2018-12-13 02:21:10,Kevin Chavez,"Upgrade to Gulp 4 (fixes build) (#1957)

Summary:
Fixed the build-- it was broken from using Gulp 3 on Node 10:
https://github.com/nodejs/node/issues/19786
Pull Request resolved: https://github.com/facebook/draft-js/pull/1957

Reviewed By: pakoito

Differential Revision: D13433181

Pulled By: pakoito

fbshipit-source-id: 0f224a3ff92e1cc6abdbd4cec88a5742f9d3ff9a",False
83edf02d25e926449130e40cceb8bf82deefc49d,2018-12-12 20:06:32,Paco Estevez Garcia,"Add correct type annotations to DraftEditor.react.js

Summary: This diff fixes some debt introduced when the flow failed to infer the types of these functions when automatically annotating them with the Annotate_exports codemod.

Reviewed By: rubennorte

Differential Revision: D13431571

fbshipit-source-id: 53696e7e179b876ffc9d509406fe84e9a2bbb9af",False
81f92eee02aebe06a8e8cfebe9874c7594d844cb,2018-12-12 18:05:59,Paco Estevez Garcia,"Fix $FlowFixMe type not working for CI builds of draft-js

Summary: This diff fixes a $FlowFixMe type not accepted by CI builds of draft-js, as seen in https://travis-ci.org/facebook/draft-js/jobs/466944758

Reviewed By: mjesun

Differential Revision: D13431039

fbshipit-source-id: 14b1acc68b08821fa353eaacf5b25fb4686a9cd9",False
7cb10f9bcbbaf5cc7187bf6cf96ac262c64a6cab,2018-12-12 16:36:01,Paco Estevez Garcia,"Annotate exports codemod on html/shared

Reviewed By: avikchaudhuri

Differential Revision: D13425830

fbshipit-source-id: 20fd7ae249fd79030dc736b0caeacb5a440f6141",False
236270aec6ddd6064cb55863801983911b231eff,2018-12-08 08:06:24,Andrey Sukhachev,"Kill permanent permanently.

Summary:
* Killed permanent in sprite options
* Killed manual `permanent` in CSS files.
* local `tbgs permanent` is empty now.

bypass-lint
ignore-signed-source

Reviewed By: ngavalas

Differential Revision: D13365183

fbshipit-source-id: e8375fe8570250c2d38556450eb378448ce645cd",False
645549343e7248ae07bf8e274de971acfe1c53c0,2018-11-19 19:40:14,Sophie Alpert,"Ctrl-K at end of line should delete newline

Summary: If you're at the end of a line and press Ctrl-K (on Mac OS), it should delete the newline (same as if you had just pressed forward-delete). Now it does (and stores the newline in the secondary clipboard, as Ctrl-K always does).

Reviewed By: claudiopro

Differential Revision: D13085302

fbshipit-source-id: b32cfcd41ad4ff482ff71621f98bd6524c415fc5",False
010fce785948edaf92bd9e81e8777784c1421545,2018-11-16 19:05:56,Craig Phillips,"Revert D13097194: [codemod][types-first] Add type annotations to html/shared

Differential Revision:
D13097194

Original commit changeset: 3e698c746fda

fbshipit-source-id: 8af5ee4fac8cdeb10726bbc9c650238593ff5f6e",False
6f4102d90aa70d6f54ee16b1eb92dba9b90c10cb,2018-11-16 18:36:54,Paco Estevez Garcia,"Add type annotations to html/shared

Reviewed By: mjesun

Differential Revision: D13097194

fbshipit-source-id: 3e698c746fdabcb49a220886ad083d962675b447",False
ab199efc0b744bd3bf18ff938983ae218ed42670,2018-11-13 11:20:50,Paul O'Shannessy,"Fix all 'curly' violations

Summary: Fix `curly` ESLint violations and reformat as needed.

Reviewed By: miorel

Differential Revision: D12966889

fbshipit-source-id: 92f589c8664f160fd00d9314a77c0c0b1cf37b0d",False
7dddded53f479bb1f0713964659cfdc3426a5937,2018-11-12 03:50:49,Thibaud Colas,"Fix tex and universal examples crash because of different React versions (#1756) (#1931)

Summary:
**Summary**

Fixes #1756, and #1930. The tex and universal examples have their own dependencies, and relied on a different version of `react`/`react-dom` from the one defined for Draft.js. This caused a JS error when running the examples.

I have also added the missing lockfile for the universal example.

**Test Plan**

- Make a clean copy of the project
- For both examples, go through the instructions to install their dependencies and build them.
- Open the examples in a browser, and attempt to type in the editor(s)
Pull Request resolved: https://github.com/facebook/draft-js/pull/1931

Differential Revision: D13019619

fbshipit-source-id: 3451737816a5ba9fe283cb65b285fd5fb5e5532a",False
744af911f4f28669a2f477145d93e63db951f0ec,2018-11-02 09:52:19,Sam Goldman,"Deploy Flow v0.85 to www

Summary:
The controller you requested could not be found.
The controller you requested could not be found.
The controller you requested could not be found.
The controller you requested could not be found.

The controller you requested could not be found.

Reviewed By: panagosg7

Differential Revision: D12897571

fbshipit-source-id: 5362e2472cef0719f7294ccad9c516cf6862cdfa",False
59dd225738167d213558934a6e45c7f0a1c5e0c1,2018-10-26 11:08:18,Avik Chaudhuri,"flow 0.84 www deploy

Summary:
The controller you requested could not be found.
The controller you requested could not be found.

Reviewed By: samwgoldman

Differential Revision: D10851590

fbshipit-source-id: 7858075ed2dd740f5105aa668c42c2e6d96aa0ef",False
ce7f677bed3ba5a24bef7abd98e30c8248e8f211,2018-10-25 01:37:51,Andrea Fercia,"Bring back the ariaOwneeID prop. (#1883)

Summary:
**Summary**

Reverts https://github.com/facebook/draft-js/commit/7f0cab28386ec4bde8ec6289377bff9e53cd019b to bring back the `ariaOwneeID` prop. The ARIA property `aria-owns` is required for the combobox ARIA widget, in both ARIA 1.0 and 1.1. Some plugins, for example the Mentions and Emoji plugins, still pass an `ariaOwneeID` prop which at the moment doesn't do anything. Also, without `aria-owns`, some browser / screen reader combinations don't read out the suggestions at all. For more details please refer to the related issue #1736.

Fixes #1736.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1883

Reviewed By: vdurmont

Differential Revision: D10371390

Pulled By: vdurmont

fbshipit-source-id: 140282124128437e0d8cc9b08490420c3dc81dc1",False
4a9a6a8b6af280a5f5f43f458d5c9d4e46c364b1,2018-10-22 18:51:33,noelyoo,"Add Node.js version 10 for CI (#1909)

Summary:
**Summary**

This PR adds nodejs version `10` for the Travis Ci build

Details:
* https://github.com/nodejs/Release#end-of-life-releases
* https://docs.travis-ci.com/user/languages/javascript-with-nodejs/#specifying-nodejs-versions

![image](https://user-images.githubusercontent.com/25740248/47252831-f1f67580-d485-11e8-8ae0-1525cfd154df.png)

**Test Plan**

Travis CI test
Pull Request resolved: https://github.com/facebook/draft-js/pull/1909

Differential Revision: D10487838

fbshipit-source-id: 98d98ea38da66752c6c73fd379acb024058f09a3",False
11d737977892a892c6913c8d4818d9a410cf9c4c,2018-10-22 00:11:06,noelyoo,"Refactor buffer constructor (#1912)

Summary:
**Summary**

This PR replaces `new Buffer` with `Buffer.from` and removes its deprecation warning.

The behavior of new Buffer() is different depending on the type of the first argument, security and reliability issues can be inadvertently introduced into applications when argument validation or Buffer initialization is not performed.

To make the creation of Buffer instances more reliable and less error-prone, the various forms of the new Buffer() constructor have been deprecated and replaced by separate Buffer.from(), Buffer.alloc(), and Buffer.allocUnsafe() methods.

details: https://nodejs.org/api/buffer.html#buffer_buffer_from_buffer_alloc_and_buffer_allocunsafe
https://github.com/nodejs/Release#end-of-life-releases
Pull Request resolved: https://github.com/facebook/draft-js/pull/1912

Differential Revision: D10481708

fbshipit-source-id: c4c2040133ee0bc82932de17c20fc5ca06d296c9",False
1d3c77f17bd2be04ec56fb0dfa36fa32ccfa59de,2018-10-22 00:11:05,noelyoo,"Fix typo (#1913)

Summary:
**Summary**

This PR fixed the following typo:
* `overwritting` -> `overwriting`
* `as early as possibly` -> `as early as possible`
Pull Request resolved: https://github.com/facebook/draft-js/pull/1913

Differential Revision: D10481696

fbshipit-source-id: c6a482d212c744ed6ccf3b8b8410413cac22cd85",False
2e3a181eb3c479a7e16a8d54899f8fe41d7b6d2b,2018-10-17 22:21:17,Paco Estevez Garcia,"Add type annotations to React.Component classes in html/shared

Reviewed By: rubennorte

Differential Revision: D10426632

fbshipit-source-id: b6ba889749311f8f013c362c78f77dcd2515b028",False
280d2420c961468dd2b953d8c89a18ace09c9b3f,2018-10-17 11:22:10,Sam Goldman,"Add return type annotation to addEmojiInput

Summary:
Flow does not infer generics, so generic functions should have annotated return
types. This will become an error in the next Flow version.

Note that this uncovered a bunch of errors, which I mostly fixed. I suppressed
a few that would require code changes.

Reviewed By: nmote

Differential Revision: D10419507

fbshipit-source-id: 84b8f33f3c8fe272b18e35e838a0ebf7bdbaa6ff",False
7df9eb9b2434c7782e549a1a54172ce60fc389bb,2018-10-16 20:21:10,Nivedita Chopra,"Add issue triage guidelines to CONTRIBUTING.md (#1896)

Summary:
**Summary**

We've been loosely following these guidelines for the past month & they seem to be working well. Adding to `CONTRIBUTING.md` to make it more visible.

**Test Plan**
<img width=""793"" alt=""screenshot 2018-10-14 12 54 05"" src=""https://user-images.githubusercontent.com/2357761/46921447-40040880-cfb0-11e8-8e74-386c17a4778e.png"">
Pull Request resolved: https://github.com/facebook/draft-js/pull/1896

Differential Revision: D10382836

fbshipit-source-id: e96336a96f27681b59510fcd15baa30e146ed631",False
a0267a94e855dcb8fac82c0b1b8b37fbc17a7047,2018-10-16 00:21:29,Eric Biewener,"Unstyle empty list item on Enter key (#769)

Summary:
**Summary**

This appears to be standard functionality in text editors. If the list item has no text and the user pressed `Enter`, rather than creating a new list item, the current one should simply be removed. This is how it works in Google Docs, TextEdit, etc.

**Test Plan**

1. Open the Rich Text editor example.
2. Create a list item. Don't add any text to it.
3. Press enter

The list item should be removed.
Pull Request resolved: https://github.com/facebook/draft-js/pull/769

Reviewed By: flarnie

Differential Revision: D10371552

Pulled By: flarnie

fbshipit-source-id: aa975e465c5cdbb1a8def62ba079545836211152",False
9a96ab03d91f5e07a64f597b331f24f1cf831c18,2018-10-15 22:52:44,Nivedita Chopra,"Add meeting notes for 10/12 (#1901)

Summary:
**Summary**

Publishing meeting notes, fixes #1899

**Test Plan**

Rendered in MacDown - [2018-10-12-meeting.pdf](https://github.com/facebook/draft-js/files/2477047/2018-10-12-meeting.pdf)
Pull Request resolved: https://github.com/facebook/draft-js/pull/1901

Differential Revision: D10382794

fbshipit-source-id: ee421b517a80ce9548f390ead86ed7cecde52d44",False
0b7ec2a1d1cabb0bf22285301f8633bae04b9cfe,2018-10-15 17:51:06,Yao Bin,"Update Advanced-Topics-Inline-Styles.md (#1902)

Summary:
**Summary**

Fix the Hello World words which did not rendered properly on the docs site.

**Test Plan**

Before
![image](https://user-images.githubusercontent.com/771989/46931399-8e330d80-d07d-11e8-828d-e74c52724d7a.png)

After
![image](https://user-images.githubusercontent.com/771989/46931423-a3a83780-d07d-11e8-8ada-4468acff26cf.png)
Pull Request resolved: https://github.com/facebook/draft-js/pull/1902

Differential Revision: D10378437

fbshipit-source-id: e264eadc2dd9fd9e5b660b806e9769a002c08778",False
20a0f73f0b2e479c61fb41c3e23d0e5b86d4f8ec,2018-10-11 03:20:58,Denis Oblogin,"Fixes some drag-n-drop problems (#1599)

Summary:
**Summary**
Fixes issue #1383. Fixes problem which is: onDrop breaks onSelect/onChange events.
Fixes issue #1454 (partial). Fixes problem which is: after first internal drop dragged text will not be moved to target position, but copied.
The solution is to set `editor._internalDrag` to false not during onDragOver events, but after end of drag-n-drop.

**Test Plan**
Attached reproducable videos (on Chrome for Linux)
Issue #1383 before and after:
![1383-before](https://user-images.githubusercontent.com/3238637/46585340-68ec4100-ca78-11e8-9c2f-c98e7cb381ff.gif)
![1383-after](https://user-images.githubusercontent.com/3238637/46585344-6c7fc800-ca78-11e8-9c2e-fdac5594d1d0.gif)
Issue #1454 before and after:
![1454-before](https://user-images.githubusercontent.com/3238637/46585364-9e912a00-ca78-11e8-9c17-5dfcec5a2e16.gif)
![1454-after](https://user-images.githubusercontent.com/3238637/46585361-9a650c80-ca78-11e8-8b7f-dac6c6af4b23.gif)
Pull Request resolved: https://github.com/facebook/draft-js/pull/1599

Differential Revision: D10236073

fbshipit-source-id: 3b7b816630f3b5b15931cb53782a1d5b9e9d5121",False
022bcf7d224ac99d3eae3881db88c418a5600d92,2018-10-11 00:05:59,Colin Jeanne,"Allow Option+Space to be handled on OSX Chrome (#1254)

Summary:
**Summary**

Currently pressing Option+Space in Chrome on OSX will cause a nonbreaking space to always be inserted into the editor. This behavior ignores any key bindings that the editor has set.

This change moves the logic which adds the non breaking space to after the point that the key binding function has been run in order to give editors a chance to handle this behavior on their own.

**Test Plan**

This has been tested manually since there are no current tests for the event handlers and no current framework for testing the handlers. We have been running [with this change in our fork of Draft](https://github.com/textioHQ/draft-js/commit/f4c3aebe6593e3ccdb1de4c15363e72faae0f236) for about seven months without issue.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1254

Differential Revision: D10241854

fbshipit-source-id: b8fe92a4f76bbb7543efdb3e5deca1dbdbc0960c",False
8ad59c4e407785c685472a82bfe7ecb1cd363352,2018-10-11 00:05:59,Prateek Nayak,"Added information about nature of block keys (#1892)

Summary:
**Summary**

Added a note letting users know the block keys are strictly alphanumeric and using the `generateRandomKey` function to generate block keys is a good approach.

Any changes needed can be mentioned and will be implemented in a jiffy!

Issue in focus: #1843
Pull Request resolved: https://github.com/facebook/draft-js/pull/1892

Differential Revision: D10303263

fbshipit-source-id: 717baed9d04b91acb4e73b936f3e367b4fb11f04",False
1d2d854c68216667b21505cc145a0627ebe14195,2018-10-09 07:36:09,Alexis H,"Bug/1668 (#1691)

Summary:
**Summary**

Updating examples package.json to reference parent projects react & react dom versions. This ensures its kept in sync with the Draftjs version.

**Test Plan**

This commit updates example package.json. Not sure it is testable with jest. Unless its possible to detect when two versions of react are loaded.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1691

Differential Revision: D10247219

fbshipit-source-id: 462c3d64efdbaca00563a0110d511f1865860b71",False
75aa88a20480ee7e9326712a8b04bb6acd477251,2018-10-09 07:20:56,Nivedita Chopra,"Remove flow typing for DraftEntity mock (#1891)

Summary:
**Summary**

Flow typing this file breaks Travis CI. See also discussion in #1890

**Test Plan**
`yarn run flow`
Pull Request resolved: https://github.com/facebook/draft-js/pull/1891

Reviewed By: mjhu

Differential Revision: D10250894

Pulled By: mjhu

fbshipit-source-id: f6a3a54a8b2d2f2f589a035e42f1c743afd638b2",False
7666e95c2233540f9595fc75c6e86fdebc99f65f,2018-10-09 03:06:20,Andrew Branch,"Fix SelectionState’s `hasEdgeWithin` (#1811)

Summary:
Fixes #1700, which includes a detailed description and reproduction of the issue.

Hopefully it's ok that I refactored the true/false assertions not to use snapshots; I found them confusing and tedious and figured it was probably just an artifact of migrating to Jest a long time ago.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1811

Differential Revision: D10234643

fbshipit-source-id: 531e45c8fe1708fb440240e1a7bd121cb126cd08",False
bbd3ef102b5191ef8a58edd04997a3c345e291b7,2018-10-09 02:36:27,Nivedita Chopra,"Flow strict for some files

Summary: I went through all the test files and was able to make some of them flow strict.

Reviewed By: sophiebits

Differential Revision: D10236583

fbshipit-source-id: 480b6dc959ab9e93cb27efb8ac4d85817a76eb53",False
800d6b5888ab3fe4a1fcdb9c12f1942bca6c3972,2018-10-09 00:21:06,LaySent,"Fix drop issue (#1725)

Summary:
**Summary**

I have created a demo to illustrate this issue, feel free to look at [here](https://github.com/laysent/draft-js-drag-and-drop-issue)

If you look at `src/component/base/DraftEditor.react.js`, there is a problem with `_dragCount`:

When you drag a file into editor and drop it, `onDragEnter` will be triggered to increase `this._dragCount`. However, `onDragLeave` will not be triggered when dropping, thus `this._dragCount` will not be decreased back to 0.

Thus, after dragging and dropping, when user drags another file and NOT drop it, both `onDragEnter` and `onDragLeave` will be triggered. This time, `this._dragCount` will be increased then decreased. However, since it's initial value after dropping is not 0, it will not be decreased back to 0 after `dragLeave`, thus it will not trigger `this.exitCurrentMode()` in `onDragLeave`. Editor remains in ""drag"" mode.

To resolve this issue, simply set `_dragCount` back to 0 when dropping the file.

**Test Plan**

I don't think one is necessary for this issue. But would be happy to provide one if required.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1725

Differential Revision: D10234644

fbshipit-source-id: 6b8ffeef21899d80f623db3554dd688038ed92ac",False
d87e0937a8c4f1c1bfce19dfb4815ec0d1bb0773,2018-10-08 20:06:20,Nivedita Chopra,"Add flow to files

Summary:
These are the last two files that aren't flow typed.

I'll look into strict typing for this file & others in a bit.

Reviewed By: elboman

Differential Revision: D10236440

fbshipit-source-id: 9f546b2c62f969ab550f9d16c5e6e12fb2371479",False
cc6b897e358464a8010f27dd9ee2c9431ccf2cf1,2018-10-07 21:36:57,vinogradov,"Docs: add explicit deprecation notes to Entity methods (#1787)

Summary:
**Summary**

The note in the docs `Please note that the API for entity storage and management has changed recently; for details on updating your application see our v0.10 API Migration Guide` doesn't give a quick clear idea of what I should use instead of the old methods (I need to go to that migration guide, but let's suppose I'm a new user and I don't have any code to migrate). The problem becomes obvious after getting warnings in the browser console.  So my suggestion is to place deprecation notice right in the name header. I believe this would save some time for those who open docs just to see the method signatures.

Now (https://draftjs.org/docs/api-reference-entity.html):
![image](https://user-images.githubusercontent.com/439939/41491613-39a1cfb2-710b-11e8-849b-4f8a13bf9088.png)

What I suggest:
![image](https://user-images.githubusercontent.com/439939/41491621-43f89af4-710b-11e8-8d71-2c3c20054e42.png)
Pull Request resolved: https://github.com/facebook/draft-js/pull/1787

Differential Revision: D10234733

fbshipit-source-id: 8f7c32ad4f0da203ffe0a80584781413681ba158",False
67d6fda1269d2c82db6092a9a2d0d196e4538974,2018-10-05 04:36:42,Claudio Procida,"Clarifies editor example, changes height to min-height (#1889)

Summary:
**Summary**

Clarifies editor example, explaining how to use CSS selectors from the Draft.css stylesheet, changes `height` to `min-height` in example.

**Test Plan**

Tests on CodeSandbox: https://codesandbox.io/s/9y5162ryj4
Pull Request resolved: https://github.com/facebook/draft-js/pull/1889

Differential Revision: D10207706

fbshipit-source-id: cf3a6eb659f486ec9a0d6e64018478b113c20922",False
b8862fd42faaac9ce4bbced90518bc00b719dfe2,2018-10-04 22:06:43,Claudio Procida,"Improves editor overview example with min height and border (#1887)

Summary:
**Summary**

Improves editor overview example providing a code sample that sets the editor's min height and border, as well as focuses the editor when clicking the editor area.

**Test Plan**

Copy and paste example into CodeSandbox
https://codesandbox.io/s/9y5162ryj4

Fixes #1880
Pull Request resolved: https://github.com/facebook/draft-js/pull/1887

Differential Revision: D10200611

fbshipit-source-id: 5c261cf78d8d36e3255528b68d30d7b46e2908bf",False
8d5cbbe9bf1767ee56cb908fd95fdea9b8aaced2,2018-10-04 19:36:26,Claudio Procida,"Adds iframed editor example (#1879)

Summary:
**Summary**

Adds an iframed editor example to Draft.js based on haikyuu's CodeSandbox demo https://codesandbox.io/s/y0q1q281kz

**Test Plan**

```
git clone claudiopro/draft-js .
cd draft-js
git checkout iframe-example
python3 -m http.server 8000
open http://localhost:8000/examples/draft-0-10-0/iframe/iframe.html
```
<img width=""1072"" alt=""screen shot 2018-09-24 at 4 23 24 pm"" src=""https://user-images.githubusercontent.com/860099/45957816-396c1c00-c016-11e8-9808-c4453ff6c4ff.png"">
Pull Request resolved: https://github.com/facebook/draft-js/pull/1879

Differential Revision: D10194094

fbshipit-source-id: 0beabd7b890fbc31acdc84a780d6e91ca1de31a4",False
6ba124cf663b78c41afd6c361a67bd29724fa617,2018-10-04 08:36:43,Julian Krispel,"fixes #868 (#1878)

Summary:
**Summary**
- Updated the DraftEntity flow type to be `string`. fixes #868

**Test Plan**
N/A
Pull Request resolved: https://github.com/facebook/draft-js/pull/1878

Differential Revision: D10188002

fbshipit-source-id: e52da4d8dd708c7ed58e7d6f8c585e86835f1bb2",False
c336ae22d2a565653656b53e6d549cbcc5e2f7cb,2018-10-04 08:36:42,Connor Jennings,"Update documentation concerning immutable updates (#1884)

Summary:
**Summary**
Adding some inline examples in the documentation around immutable updates for `EditorState`, `ContentState` and `SelectionState` based on the suggestions of #1445.

Let me know if there's more areas in the documentation that could use similar examples or if some editing needs to be done to what I've added.

**Test Plan**

N/A, but I did view in online markdown editor and it looks ok
Pull Request resolved: https://github.com/facebook/draft-js/pull/1884

Differential Revision: D10188040

fbshipit-source-id: c91d935d3ffdb7aee9ccf826af68c91cf1596a0a",False
2ff0c7e3cff26c274ecc19b2f650907f90b5e80e,2018-10-04 08:22:01,Connor Jennings,"Update docs to ensure kebab menu shows subheads (#1885)

Summary:
**Summary**

Reference issue: #1873

The kebab menu for `docs` pages was empty on certain pages (it seems like a setting on the siteConfig.js that [controls whether this menu is shown or not](https://github.com/facebook/Docusaurus/blob/f2927a9fc458cc368ebae5474e55b755fe4120db/v1/lib/core/BlogPostLayout.js#L92). It doesn't seem like there's a way to override this on a per page basis with configuration).

I modified the format of these pages to bring them more in line with similar `docs` pages. Also added headers to ensure all docs pages had a value in the kebab dropdown. Seemed easier than coding around it.

**Test Plan**

Verified the changes on `docs` pages locally
Pull Request resolved: https://github.com/facebook/draft-js/pull/1885

Differential Revision: D10187920

fbshipit-source-id: 9d130c62b1e79be1e87011d10d403d7773d6a412",False
690f7ef2449feab85f5b803689c9d5a8a4ce9c08,2018-10-02 23:21:45,Nivedita Chopra,"Fix check for tree blocks

Summary: We were wrongly converting from tree to raw whenever a block had a children array, even if no blocks actually have children. This is bad because when we toggle the GK, we clear the children, but we don't necessarily delete the field altogether (and shouldn't). A tree to raw conversion (or vice versa) is needed only when blocks are actually nested.

Reviewed By: agoder

Differential Revision: D10145467

fbshipit-source-id: 10e489e9c3ba3ae0d16c3da4767cd1400345d92e",False
0688fa32150dc5ce8e31ce3cc871037e616c70df,2018-09-29 20:22:04,Nivedita Chopra,"Perform untab on backspace for nested items

Summary:
For nested lists, when we backspace at the start of a nested item we want to perform the same action as if we hit `Shift + Tab`.

* Abstract out the untab logic to use in both `onTab` and `onBackspace`.
* No regression in untab (`Shift + Tab`) behavior.
* Backspace on a nested block untabs it (diagrams below)

{F139898511}

Reviewed By: claudiopro

Differential Revision: D10118538

fbshipit-source-id: d6b95bd6ca85f6b9443d54de38e1e15bbfc81eba",False
7daa87ee3b7ec1b54ae5649844b3b9fbc5cfeded,2018-09-28 18:06:31,Nivedita Chopra,"Fix bug in merge blocks

Summary:
I read the docs wrong for `Immutable.OrderedMap` set & merge and we don't need to reorder blocks in the `mergeBlocks` operation. We can just update the relevant blocks and delete the empty parent block.

Adds a new test case for the operation that was failing earlier and got fixed here:
{F139809753}

Reviewed By: elboman

Differential Revision: D10100468

fbshipit-source-id: c0e5ad0bf1e3ae091cda2091e57b94d8ee488e45",False
8ac19227a5c009355fbd3e8c55b80e03acd18555,2018-09-27 00:51:37,Nivedita Chopra,"Fix raw to tree conversion

Summary:
The existing conversion logic doesn't correctly deal with complex nested lists. Rather than using a hash table (which doesn't track order), we need to use a stack that keeps track of the active parent blocks at each level.

**Old (buggy behavior):**
https://pxl.cl/hMPf

**New (fixed behavior):**
https://pxl.cl/hMPh

Reviewed By: vdurmont

Differential Revision: D10048052

fbshipit-source-id: b2c1a3fcad19818037aa1ebfdedf3025e794048d",False
02e0e00b5b5545e958c678aa8a583868f60bf33f,2018-09-21 09:06:16,Nivedita Chopra,"Bug Fix - Remove deleted block from its parent's children

Summary:
Forgot to update this parent-child pointer & didn't have a test for it, so the invariant threw an error for untab in production.

https://pxl.cl/hFG6

Reviewed By: vdurmont

Differential Revision: D9982548

fbshipit-source-id: 7d97bdcea15d23f3d4fcd1a64d00e12587b76549",False
fbe226771b37279b0ceeb0dbce8172ede6aeecb8,2018-09-20 22:52:09,Nivedita Chopra,"Support custom block rendering

Summary: In tree mode, we were ignoring the custom block components passed via the block renderer function.

Differential Revision: D9954387

fbshipit-source-id: 9165b015c1ddcdd9cfbce94a09e7f2e60c68bce9",False
d9c9d407d7648f0790e4bc788fd69e69548c3877,2018-09-15 21:36:37,Claudio Procida,"Updates favicons and launcher icons with Draftjs logo (#1872)

Summary:
**Summary**

Updates icons and launcher icons to use the Draftjs logo on a maroon backdrop instead of the ""D"" letter.

**Test Plan**

* `yarn build && cd website && yarn start`
* Verify the favicon is the new icon with the Draftjs logo

<img width=""170"" alt=""screen shot 2018-09-15 at 2 06 40 pm"" src=""https://user-images.githubusercontent.com/860099/45586618-1e9cf780-b8f2-11e8-8b7a-ebc20af5e5c4.png"">

_**Note**: apparently, Docusaurus doesn't seem to use the apple and android launcher icons on this config. I'll try and look into that on a separate PR (will add support into Docusaurus itself if needed)_
Pull Request resolved: https://github.com/facebook/draft-js/pull/1872

Differential Revision: D9846099

fbshipit-source-id: 347ae57270eebaeedadd324af9ca78a74421713c",False
fbd18ceadd76607cf9119302db692948368fbb41,2018-09-15 05:22:37,Nivedita Chopra,"Merge successive non-leaf blocks resulting from tab

Summary:
When you tab a block & both its neighbors are non-leaves, we should merge the two blocks.

https://pxl.cl/ht30

This is case 6 below, which I had postponed back in D9631917:
{F137497472}

Reviewed By: vdurmont

Differential Revision: D9836483

fbshipit-source-id: 2c74a772e5c1d0b2751db10e760632ac75e77273",False
36e588ae3ef8580ce46718ec1089da2ee8a3ef6d,2018-09-15 05:22:36,Nivedita Chopra,"Merge successive non-leaf blocks resulting from untab

Summary:
When untab results in two consecutive non-leaf blocks of the same type, it causes various bugs & issues on certain further operations.

- Implement an operation to merge two consecutive blocks in the block map by adding all the children of the next block to the given (previous) block & removing the next block.
- Use this operation during untab for the case where children were moved up & there are two consecutive non-leaf blocks (see before & after videos in test plan)

Merge operation:
https://pxl.cl/hsS9

Untab resulting in merge:
https://pxl.cl/hsSg

(these two examples are implemented as tests )

Reviewed By: vdurmont

Differential Revision: D9834729

fbshipit-source-id: 5352763266e3b5fbb030b329015298bd669a4a4f",False
0cb38042435a81b3740c5beb418635e50ae0a3ce,2018-09-15 05:22:36,Nivedita Chopra,"Unnest the first non-leaf child

Summary:
We don't want to leave behind doubly nested children if their preceding block is untabbed. Here we iterate to make sure that the next block is never left with a non-leaf first child.

Diagram of this operation, also implemented in the test below:
https://pxl.cl/hs20

Reviewed By: vdurmont

Differential Revision: D9826012

fbshipit-source-id: 1c14c5091ce89ddee3e80b2a7e9eef9d4759c320",False
77e684480012fc51933b6d307fddb285304697e3,2018-09-15 05:22:36,Nivedita Chopra,"Implement untab operations

Summary:
This diff implements the `unTab` operation for nested lists.

It covers the following four cases (refer to the diagrams below for a better explanation):
1. Block is not nested => do nothing
2. Block is first child => move as previous sibling of parent
3. Block is last child => move as next sibling of parent
4. Block is neither the first nor the last child => split the block at the child, keep previous children on original parent, move block as next sibling of parent & add the new block with the next children as its next sibling.

1 - 3 =>
{F138170258}

4 =>
{F138170261}

**TODO:**
Still figuring out the correct paradigm for dealing with the block's children when the first nested block is un-nested & will add behaviors + test cases for that in the next diff.

Reviewed By: vdurmont

Differential Revision: D9757713

fbshipit-source-id: 01796b003acbfcfcc6fa8d5f6f4576d4f2a13ec6",False
8bb9c6c3364ea9d4d2417e352c0ae5137abcb44a,2018-09-15 04:22:05,Valentin Hervieu,"Fix small typo (#1865)

Summary:
Anroid => Android
Pull Request resolved: https://github.com/facebook/draft-js/pull/1865

Differential Revision: D9838116

fbshipit-source-id: ef1e24d53cec41de652f0cc535560167added964",False
b9dd551e3bfabec0c44d917e569bed9bf7892944,2018-09-14 15:22:33,saranshkataria,"added favicon (#1871)

Summary:
Fixed #1857 by adding a favicon. The color scheme of the icon needs to be thought about though since it is not visible when the tab is active because of the white color.

On chrome:
![image](https://user-images.githubusercontent.com/1450819/45538271-39089f80-b824-11e8-8553-5902b11a53bb.png)

Looks okay when the tab is inactive, but when it is active, the logo is not visible:
![image](https://user-images.githubusercontent.com/1450819/45538295-4b82d900-b824-11e8-9b27-339dc2c797d3.png)
Pull Request resolved: https://github.com/facebook/draft-js/pull/1871

Differential Revision: D9829164

fbshipit-source-id: 99c7f4d805b7da2713c3596992b39c125b63b221",False
1bf214529d5fef75002757aa1320d8fa6866fe0e,2018-09-13 12:21:39,Yangshun Tay,"Add Algolia search (#1864)

Summary:
**Summary**

Add Algolia search as per #1775.

**Test Plan**

<img width=""1552"" alt=""screen shot 2018-09-12 at 10 07 59 am"" src=""https://user-images.githubusercontent.com/1315101/45397732-fa33e780-b673-11e8-8264-5044e82fbe61.png"">

Clicking on the results brings me to the correct location in the docs. It's magic!
Pull Request resolved: https://github.com/facebook/draft-js/pull/1864

Reviewed By: niveditc

Differential Revision: D9784511

Pulled By: niveditc

fbshipit-source-id: 4e1b0b35af85ab349d79a83315f2010bc32c7f7f",False
724fdc66cb54049fa1036e2fcfd4af291901c4ef,2018-09-13 04:53:24,Yangshun Tay,"Support npm version 6.x (#1866)

Summary:
**Summary**

Now `nvm install 8` ends up installing npm 6.4.1 but our `package.json` doesn't support that npm version. This PR includes 6.x in the versions we support.

More context: https://github.com/facebook/draft-js/pull/1864#issuecomment-420574680

**Test Plan**

CI tests.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1866

Reviewed By: niveditc

Differential Revision: D9789746

Pulled By: niveditc

fbshipit-source-id: 8bdf8573c84d66bdce8281c4b2660df953399583",False
0a45fcdf5ebfbb011711643690e06e2b67040928,2018-09-11 08:08:44,Nivedita Chopra,"Remove unused var in BlockTree (#1859)

Summary:
**Summary**

This variable is unused & caused a lint warning.

**Test Plan**
Old (with warning):
```
> npm run lint

> draft-js@0.10.5 lint /Users/niveditc/draft-js
> eslint .

/Users/niveditc/draft-js/src/model/immutable/BlockTree.js
  30:7  warning  'FINGERPRINT_DELIMITER' is assigned a value but never used. Allowed unused vars must match /^_/  no-unused-vars

✖ 1 problem (0 errors, 1 warning)
```

New:
```
> npm run lint

> draft-js@0.10.5 lint /Users/niveditc/draft-js
> eslint .
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/1859

Differential Revision: D9762873

fbshipit-source-id: 42dab26c26164d08cda8fb2875a8fa4d6d3d9f1a",False
b9629747f600cb61ff15c3efe4253d8f89a72f0e,2018-09-11 07:52:29,Nivedita Chopra,"Update jest version to latest (#1858)

Summary:
**Summary**
Follow-up to #1724. Ran `yarn add jest@latest` to update to the latest Jest version.

**Test Plan**
```
npm run test
yarn run test
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/1858

Differential Revision: D9762740

fbshipit-source-id: 28a0bf01d103f835240d29fbb980dd586386de5f",False
b8ea2283b0fc2a15284e884eab1d374e4ad570e4,2018-09-11 06:06:19,Nivedita Chopra,"Add meeting notes from 9/7 (#1862)

Summary:
Meeting notes from first meeting with new maintainers.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1862

Differential Revision: D9758649

fbshipit-source-id: 6b2dda9b90e2f8598bfbeac39bd1d097fe0a4ecb",False
d40ff40cec807253246da6cf5dc2736219581b94,2018-09-10 19:06:13,alaoui abdellah,"Update Advanced-Topics-Entities.md (#1767)

Summary:
Add a line of code in the example to set the editor state after adding the entity.

For a newcomer, it's not straightforward because it wasn't mentioned anywhere in the docs prior to arriving here. Of course, you'll figure it out once you check the example. But let's save newcomers a roundtrip

**Summary**

Update the docs
Pull Request resolved: https://github.com/facebook/draft-js/pull/1767

Differential Revision: D9749305

fbshipit-source-id: 88af5ee30690fa41cc72280a6bad153a17324c33",False
6df3808c6d0453a68cd6f9939fec80a527cca497,2018-09-10 16:53:01,Jainil Parekh,"Fix paste handling for images with role=""presentation""

Summary:
Since draft.js replaces pasted images as a camera emoji to indicate pasted content, text copied as:

{F136101602}

which is copied to clipboard as
```
""<meta charset='utf-8'><span style=""color: rgb(29, 33, 41); font-family: system-ui, -apple-system, system-ui, &quot;.SFNSText-Regular&quot;, sans-serif; font-size: 24px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 300; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;"">hello<span> </span></span><span class=""_5mfr _47e3"" style=""line-height: 0; vertical-align: middle; margin: 0px 1px; font-family: system-ui, -apple-system, system-ui, &quot;.SFNSText-Regular&quot;, sans-serif; color: rgb(29, 33, 41); font-size: 24px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 300; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial;""><img class=""img"" height=""24"" role=""presentation"" src=""https://static.xx.fbcdn.net/images/emoji.php/v9/f4a/2/24/1f600.png"" width=""24"" alt="""" style=""border: 0px; vertical-align: -3px; margin-top: 0px;""><span class=""_7oe"" style=""display: inline; font-size: 0px; width: 0px; margin-bottom: 0px; font-family: inherit;"">?</span></span>""
```
essentially `<span><img /><span>...</span></span>`

when pasted, renders as:
{F136101606}

This behavior is not required when pasting images that are for presentation only, so adding the camera emoji is skipped for this use case. This is an update to the functionality added in https://github.com/facebook/draft-js/pull/1378

Rolling this out with gatekeeper `draftjs_fix_paste_for_img`

Differential Revision: D9333247

fbshipit-source-id: 772229521b4457ea2a6efd726715710c03c4887d",False
9f0d115d27da8c164dc3592f671c432145ff8de7,2018-09-09 03:53:04,Alastair Hole,"Minor fix in entities docs (#1534)

Summary:
Minor documentation edit
Pull Request resolved: https://github.com/facebook/draft-js/pull/1534

Differential Revision: D9735000

fbshipit-source-id: 85a920ce14db84c4c5ba8b39f84f5b8a4d2fef1f",False
98e7730bfc3873170ad22fbaa24d257c837724e0,2018-09-09 03:53:04,William Boman,"KeyBindingUtil: add usesMacOSHeuristics method (#869)

Summary:
**Summary**

Add a public method, `usesMacOSHeuristics`, to the `KeyBindingUtil` module. This makes it possible to determine how draft-js will interpret certain keyboard events and thus alter the UI accordingly, e.g.;

<img width=""499"" alt=""screenshot 2016-12-13 at 17 58 33"" src=""https://cloud.githubusercontent.com/assets/6705160/21150013/dee64566-c15d-11e6-9639-75a39d21d079.png"">

I currently achieve this by doing (🙈);

```js
const COMMAND_MODIFIER_CHAR = (navigator && navigator.userAgent.indexOf('Mac') >= 0)
    ? '\u2318' // Mac command key character
    : 'Ctrl'
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/869

Differential Revision: D9734962

fbshipit-source-id: ed3f3d0a87df51c708fd666fe85bc6acba1ecfee",False
c6ff39d2a05589103e5f95a37f84bfc356592a35,2018-09-09 02:06:37,Cédric Messiant,"Export RawDraftContentState publicly (#1841)

Summary:
**Summary**

When I used v0.10.1 I was able to import `RawDraftContentState`. Since I upgraded to version 0.10.5 I can't.

Example of line that does not work anymore:

`import { RawDraftContentState } from 'draft-js';`
Pull Request resolved: https://github.com/facebook/draft-js/pull/1841

Differential Revision: D9734731

fbshipit-source-id: e972a67b05b4cfc9e6e9cffe185fd0ca395ce327",False
a18b6fe67129eac23146bddc853c9cf63c775cec,2018-09-09 01:37:42,Matt Greenfield,"Fixes incorrect docs, see #1497 (#1837)

Summary:
**Summary**

Updates the docs to fix #1497. The current suggested method results in an `Element type is invalid:` error.

I can confirm that using the component itself rather than its name as a string works as expected.

Credit goes to albertlockett
Pull Request resolved: https://github.com/facebook/draft-js/pull/1837

Differential Revision: D9734736

fbshipit-source-id: 91aee43c504a3d5eda1bc74548f806faae4bc35d",False
e145a2aa4f129a4db997b35954d6b97e0d84f34a,2018-09-07 02:06:31,Nivedita Chopra,"Implement moveChildUp operation for untab

Summary:
Implements a `moveChildUp` method to help with untab (`onTab` with shift key) in `NestedRichTextEditorUtil`.

This will move the first/last child up as the previous / next sibling of its parent.

These are the operations that are implemented (and they work as the test cases):

{F137866518}

Differential Revision: D9672458

fbshipit-source-id: f2ba306ae56d243071232f04bef2746c4a060dfb",False
8c373b633f2ada0c611c8188e7d62606874ca743,2018-09-06 22:54:06,Nivedita Chopra,"Update link to code of conduct (#1855)

Summary:
**Summary**

Link to code of conduct was broken, fixed to reference https://code.fb.com/codeofconduct/

**Test Plan**
-
Pull Request resolved: https://github.com/facebook/draft-js/pull/1855

Differential Revision: D9684100

fbshipit-source-id: 7f1067605ba6afb1e0ee583007375b0d5335c313",False
022798c34c138f8e5c025d28fdf0797776d61555,2018-09-06 22:36:21,Nivedita Chopra,"var => const on remaining file

Summary: Saw this flagged in Quality Analyser tool. Also added flow to the file.

Reviewed By: vdurmont

Differential Revision: D9674403

fbshipit-source-id: 1705cb7271b0eeda397d79a7b5f853f28fe94de1",False
6b833128a256c2812bd30dafd3ae88d144550294,2018-09-06 04:21:44,Nivedita Chopra,"Allow insertion at a specific point for updateParentChild

Summary:
We need more flexibility for this method, so that the untab method can correctly add a child to the middle of the children array.

* insert at position 0 (first child)
* insert at len(children) position (last child)
* insert somewhere in the middle

Reviewed By: flarnie

Differential Revision: D9653244

fbshipit-source-id: 7d2bc44a9116d512838c8bbd5fe89a5ae20d5de7",False
4a5ad079042ba87e4b29e9a77abf5270f6f5e090,2018-09-05 19:23:13,Claudio Procida,"Fixes warning for missing keys in example color controls (#1853)

Summary:
**Summary**

Fixes a warning in the color examples for missing keys for elements in an array for the style controls.

```
react.development.js:336 Warning: Each child in an array or iterator should have a unique ""key"" prop.

Check the render method of `ColorControls`. See https://fb.me/react-warning-keys for more information.
    in StyleButton (created by ColorControls)
    in ColorControls (created by ColorfulEditorExample)
    in div (created by ColorfulEditorExample)
    in ColorfulEditorExample
```

**Test Plan**

Manual tests on Chrome, warnings are gone

**Note:** This PR also fixes the [Travis CI build failure](https://travis-ci.org/facebook/draft-js/jobs/424170309) introduced with e6c693c
Pull Request resolved: https://github.com/facebook/draft-js/pull/1853

Differential Revision: D9654616

fbshipit-source-id: 1e4e9a4ef2eb896306404acc31623076e107b91c",False
8d3cfbab58f59f47141894aaad5ec01e119f0e07,2018-09-05 01:23:15,Nivedita Chopra,"Implement onTab in NestedRichTextEditorUtil

Summary:
Implement `onTab` for `NestedRichTextEditorUtil`
* Cases 1-5 in the image below
* Decided to postpone case 6 since its not essential for the implementation
* Note that case 1 & 3 are logically equivalent, and the `createNewParent` method implemented in D9624285 handles both.

{F137497472}

Reviewed By: mitermayer

Differential Revision: D9631917

fbshipit-source-id: 9f4298488d8c2a8f172cd82423c30c16d773a8ab",False
6f736573a2cb1c414cf3cdcfdbde38657a5d4151,2018-09-05 01:23:15,Nivedita Chopra,"Add utilty methods for creating a new parent & updating node to become sibling's child

Summary:
Implement some tree operations that will be used in the `NestedRichTextEditorUtil onTab` method.

Specifically:
- Creating a new parent for a node
- Updating the node so that it is a child of its previous or next sibling

The `onTab` use case is sketched out in the diagram below. The red stars represent the `createNewParent` operation & the red squares represent the `updateAsSiblingsChild` operation.

{F137497472}

(also added a new utility method `replaceParentChild` that switches one child for another & is used in createNewParent)

Reviewed By: mitermayer

Differential Revision: D9624285

fbshipit-source-id: f5701373ce1734cb8f21aca154ed45d656a47c54",False
e2c24cf8c5ef0d752bca962b5859810b02a4568b,2018-09-04 23:06:17,Nivedita Chopra,"Update prettier version to 1.13.6 (#1854)

Summary:
**Summary**

Updating to 1.13.6 which is the version used internally in Facebook's codebase, so that there are no conflicts in how prettier dictates formatting. Right now, we're seeing an issue where 1.13.6 dictates different formatting for nested ternary operators & this broke the Travis CI in https://github.com/facebook/draft-js/compare/0cb80b775ecd...fbc8a0cbfce6#diff-4e6b8232e09a07f699eebad1949b3ba3L118

Looks like the earlier breakage due to prettier version upgrade reported in https://github.com/facebook/draft-js/issues/1562 is now not an issue with a much higher version :)

**Test Plan**
Before fix (breakage in Travis at https://travis-ci.org/facebook/draft-js/jobs/424170309):
```
$ eslint .
/home/travis/build/facebook/draft-js/src/model/immutable/BlockTree.js
  30:7  warning  'FINGERPRINT_DELIMITER' is assigned a value but never used. Allowed unused vars must match /^_/  no-unused-vars
/home/travis/build/facebook/draft-js/src/model/transaction/moveBlockInContentState.js
  119:33  error  Replace `⏎··········?·targetBlockIndex·-·1⏎·········` with `·?·targetBlockIndex·-·1`  prettier/prettier
✖ 2 problems (1 error, 1 warning)
  1 error, 0 warnings potentially fixable with the `--fix` option.
```

After fix:
```
> yarn run lint
Using globally installed version of Yarn
yarn run v1.5.1
$ eslint .

/Users/niveditc/draft-js/src/model/immutable/BlockTree.js
  30:7  warning  'FINGERPRINT_DELIMITER' is assigned a value but never used. Allowed unused vars must match /^_/  no-unused-vars

✖ 1 problem (0 errors, 1 warning)

✨  Done in 8.50s.
```
(will be fixing the warning separately, that's been ongoing for a while).
Pull Request resolved: https://github.com/facebook/draft-js/pull/1854

Reviewed By: elboman

Differential Revision: D9636114

Pulled By: elboman

fbshipit-source-id: 037c692554976b4626e27d3ebc0ccf95922bfb38",False
fbc8a0cbfce6eba0fcd67f3682a2894c8d048662,2018-09-04 10:21:43,Nivedita Chopra,"Change oncall to draft_js

Summary:
Changing the oncall from `ui_infra` to `draft_js` & add the `emails` annotation to the remaining files.

Also testing a Butterfly rule that adds the current Draft.js oncall as reviewer & the `draft_js` project as subscribers.

Reviewed By: mitermayer

Differential Revision: D9631825

fbshipit-source-id: b2756950eea62223f3ff9ada54435fccad1a168c",False
e6c693c9acaea29070127ebb9c72a3feb7b8335f,2018-09-04 10:21:43,Nivedita Chopra,"Fix Lint errors for type imports

Summary: Lint flagged some errors on D9631825, so fixing them in a separate diff.

Reviewed By: mitermayer

Differential Revision: D9631877

fbshipit-source-id: edfc074fb4e7e8e15642f8722cdce2054eec5924",False
0cb80b775ecd44fce34ed7b41c03ecd501cd4061,2018-09-01 03:22:04,Nivedita Chopra,"Add utility methods for parent-child & sibling pointer updates

Summary:
When the tree is updated, we need to make sure that we correctly mirror the parent-child & prevSibling-nextSibling links. The utility methods in this diff help make these pointer updates more resilient.

This diff introduces methods to add:
- a child to a parent (either as the first or last child)
- a prev <-> next sibling relationship

These functions will only respect the local invariants on the nodes being updated, and can leave the rest of the tree in an inconsistent state that requires a few more updates (see the test file for examples of this).

In the next diff, I'll be codifying some common paradigms (such as creating a new parent node & adding an existing node as  its child) which will use the methods implemented in this diff to simplify the logic. The paradigm-based operations will preserve the tree invariant after the operation.

Differential Revision: D9601093

fbshipit-source-id: 3152ffc24a49e7a591958aada3333f331aaef9dd",False
c5b785a47dbfc2d41a1c9e604b8af4a273ea6707,2018-08-31 12:51:38,George Zahariev,"Remove Flow Strict Local from files with future sketchy-null errors after bug fix

Reviewed By: wcheng86

Differential Revision: D9565308

fbshipit-source-id: 60eec8efa5c6beaab56a816e35e98b0d83d0e656",False
f5b2acbff7c395b28f3773f5e0e3497d744f9fb5,2018-08-31 03:21:40,Nivedita Chopra,"Remove non-leaf blocks in tree => raw conversion

Summary:
The raw => tree data conversion creates new parent blocks because nodes with content on them (leaf nodes) aren't allowed to have children. When we convert to back to raw mode, we need to get rid of these extra non-leaf nodes, otherwise they get rendered.

Also fixed the test cases to respect the tree invariants.

Reviewed By: mitermayer

Differential Revision: D9567760

fbshipit-source-id: 6b53fba057dedeabad63a2492748fc1958b71a96",False
d6a0ac02f90e66bf2d23d81265bd2814a522d029,2018-08-30 01:52:17,Yangshun Tay,"Update Docusaurus to 1.3.3 (#1797)

Summary:
Docusaurus 1.3.0 brings about some [backwards-incompatible CSS changes](https://github.com/facebook/Docusaurus/blob/master/CHANGELOG.md#breaking-changes). So the team is helping the major users update 😄

The header font weights in Docusuaurs have been changed to bold, so I removed the custom styling that made it bold. Additionally, I made `<a>` have a different color because the primary color in Draft.js is black and users can't easily distinguish it from body text - bad for accessibility.

cc JoelMarcey endiliey

Ran the site locally and visited every page.

<img width=""1552"" alt=""screen shot 2018-06-24 at 8 38 28 pm"" src=""https://user-images.githubusercontent.com/1315101/41829262-96daa336-77ee-11e8-881a-629297843d34.png"">

<img width=""1552"" alt=""screen shot 2018-06-24 at 8 38 32 pm"" src=""https://user-images.githubusercontent.com/1315101/41829265-9adbee4a-77ee-11e8-89e7-0e95a9d58026.png"">
Pull Request resolved: https://github.com/facebook/draft-js/pull/1797

Reviewed By: flarnie

Differential Revision: D9560933

Pulled By: flarnie

fbshipit-source-id: 4e3938cda818f6d6623ab301b4d8612e80b2f973",False
3306ddfe63b1227b514db16c9d24ed772d98c166,2018-08-29 23:21:50,Nivedita Chopra,"Fix Travis breakage caused due to unimported idx module

Summary:
**Summary**
I broke the CI build by using `idx` in the `DraftTreeAdapter` file, which is a FB-internal module not available on this project

Reviewed By: jjs0

Differential Revision: D9557731

Pulled By: jjs0

fbshipit-source-id: 1edaee3ac51525afb276a29462ffd29518b18c29",False
39be4887fd2d769937e8047d2eb1356f6a7c8338,2018-08-29 03:06:22,Nivedita Chopra,"Fix DraftTreeAdapter to respect the tree invariants

Summary:
`DraftTreeAdapter` is called to convert list-data style Content Blocks into a valid Tree Data structure.

* The Tree Data structure has an invariant that only leaf nodes (i.e. nodes with no children) can have text in them. To respect this invariant, we need to create a new parent block at each level of a nested list. By implementing this, we fix a bug with the rendering of nested lists.
* Also adds the tree invariant check in DEV mode in `convertFromRawToDraftState` (which calls the tree adapter) to flag if this structure breaks again due to any updates.
* Re-record snapshot for `DraftTreeAdapter-test.js` and `convertFromRawToDraftState-test.js`

Reviewed By: mitermayer

Differential Revision: D9524985

fbshipit-source-id: f5828dfb5f12cb4e34c8511456a79457c1a09808",False
c0fb6a8299508c304c216a322a86f8d73baaa7a4,2018-08-25 00:52:45,Sophie Alpert,"Warn visibly when extensions break Draft

Summary: Content to be finalized, but I think this suffices for an employee test.

Reviewed By: flarnie

Differential Revision: D9492642

fbshipit-source-id: bf8cbcc1d590ab27643d2b4b9d3cf4171d3409a1",False
9f86efb499fa1bb174daf1113a1294832200c6ec,2018-08-21 00:06:54,Shubham Tiwari,"modify docs overview url (#1802)

Summary:
Summary

I fixed the broken link in the README.

Test Plan

I tested the change by clicking on the link to make sure that it works now.
Pull Request resolved: https://github.com/facebook/draft-js/pull/1802

Reviewed By: flarnie

Differential Revision: D9347916

Pulled By: flarnie

fbshipit-source-id: a38dd7ec8d6baa73d694eabf4b7362cab8ca8d23",False
93a90a9f885d179213df8f151c52a787fca82c7e,2018-08-19 10:06:24,Panagiotis Vekris,"v0.79.1 in www

Reviewed By: gabelevi

Differential Revision: D9390004

fbshipit-source-id: f1bff3f8db0c964b1712c1af9e142e86735d0cb7",False
a6c9ffd90207ddaff535538dcccd953b06bbcf2b,2018-08-17 04:37:08,Steven Luscher,"Inline call to `gkx` to combat fatal in `ContentState`

Summary:
ngavalas has a theory that timing is causing this to fatal – the GK map might not have been primed yet by the time the `gkx` check is made in the //module body//.

The solution herein is to inline the check. The hope is that the GK map will always be primed by the time you go to check the GK.

Reviewed By: ngavalas

Differential Revision: D9316479

fbshipit-source-id: 49bb592328e76ffbe6c2d85a3db55a12e0f9dd80",False
9130859f6ba1868918ede9da63274ef9c05ff676,2018-08-17 03:05:56,Ashley Watkins,"Handle ReactDOM type errors

Summary:
When re-enabling ReactDOM Flow typing, we discovered Flow errors.

This commit suppresses the errors.

The controller you requested could not be found.
The controller you requested could not be found.

Reviewed By: flarnie

Differential Revision: D9224137

fbshipit-source-id: e5cbc4887d3296ae9a71523da3bb37de5f16ac4d",False
1a5b27ac26a5a66f1a2964fe1fa0c4e65e7b820a,2018-08-14 23:36:13,Sophie Alpert,"Remove gating on draft_non_native_insertion_forces_selection

Summary: No bugs reported.

Reviewed By: stopachka

Differential Revision: D9273799

fbshipit-source-id: ee714cbf0d76baca6f121939082138b53118f106",False
05208a8bbe6b3832594e933d62659394d5a8687d,2018-08-14 02:36:05,Nivedita Chopra,"Fix tree invariants test (#1836)

Summary:
**Summary**

Disables auto-mocks on the tree data invariants test, thus fixing the Travis CI build.

**Test Plan**

```
npm test
```
Pull Request resolved: https://github.com/facebook/draft-js/pull/1836

Reviewed By: agoder

Differential Revision: D9301796

Pulled By: agoder

fbshipit-source-id: 879207e40da993eb4070d352ebc9535d7d23ad4e",False
06005490641b9025790d823539a59b16383e685f,2018-08-10 00:50:58,Flarnie Marchan,"5/n Disable forward delete across blocks when nested blocks are enabled

Summary:
We are disabling forward delete across blocks for now because it is rarely used
compared to backspace. We expect that people may not even notice, but if/when
they do then part of the roll-out for nested blocks will be to implement this
feature.

For more details about our ideal implementation of the forward-delete behavior
across nested blocks, see https://fb.quip.com/tybJAJoCmiRL

Reviewed By: mitermayer

Differential Revision: D9186965

fbshipit-source-id: a2abb17dd8a77949616d7e057da2476c534f2a77",False
ad4f64f3774bffdd356c61bc575982a7744f8822,2018-08-09 06:06:47,Nivedita Chopra,"Add data structure invariants for tree data

Summary:
1. Only leaf nodes have text.
2. Leaf nodes cannot have children.
3. Parent and child relationships should be mirrored.
4. Sibling relationship (``prevSibling`` & ``nextSibling``) should be mirrored.
5. All children of a parent must have sibling relationships.
6. The first node has no prev sibling.
7. The last node has no next sibling.
8. The data structure is a tree - fully connected & acyclic on the ``parent -> child`` and ``nextSibling`` edges.

We do these checks as:
* Go through each node in the block map and check that it is a valid node with respect to its properties and pointers to and from other nodes
* Find the first (unique) node of the tree and check that the tree is connected

Reviewed By: mitermayer

Differential Revision: D9193098

fbshipit-source-id: 0dd6177e3cb8d15c9ee76ce48fa14d191f3ec93c",False
ae25b8ff22461d6bf545b0529b99ed744e43f19a,2018-08-08 07:35:56,Sophie Alpert,"Fix unlucky failures in character replacement

Summary:
Fixes https://github.com/facebook/draft-js/issues/1830 (bug introduced in https://github.com/facebook/draft-js/pull/719; this is a proper fix for https://github.com/facebook/draft-js/issues/398).

* When we're allowing native insertion, we don't want to modify the selection because doing so blocks browser features like spellcheck from working
* In all other cases when typing, we *do* want to force the selection – failing to do this is why the original issue occurred
* We use the `insert-characters` change type for both native and non-native insertions
* Instead of guessing in `EditorState.push` whether to force a selection, accept it as a parameter
* Gate all changes by `draft_non_native_insertion_forces_selection`

I verified with the feature flag disabled (same behavior as before):

* Typing over a character works, and the cursor moves as expected (because of the `chars === currentlySelectedChars` check)
* With editor contents ""ABC\ndef"", replacing ""d"", ""e"", or ""f"" with the character above *fails* to replace the char (because that check is buggy).

And with the feature flag enabled (new behavior):

* Typing over a character still works (but does so without the buggy check)
* With editor contents ""ABC\ndef"", replacing ""d"", ""e"", or ""f"" with the character above *succeeds* at replacing the char.

Reviewed By: flarnie

Differential Revision: D9209691

fbshipit-source-id: f63551dbad689391aa9c2a69f1d6ba395b8bf1ac",False
2d7ad181d60b97a87e2f6fff6557ae31c02a8749,2018-08-07 21:51:09,Flarnie Marchan,"Regression test for bug with nested block and deleting

Summary: This is a regression test for https://our.intern.facebook.com/intern/diff/D9129494/

Reviewed By: niveditc, mitermayer

Differential Revision: D9150680

fbshipit-source-id: 6f94a2f5699577fe9abdba16c3af62c5ed0e606d",False
e98e91e39bb0162eab2a2e2ab123e1b5b4a03151,2018-08-07 03:21:41,mitermayer,"3/n Splitting PR #1828: updates to the Rich Text Editor example (#1828)

Summary:
Splitting up this PR and updating it as I do.

This piece was an update to the Rich Text Editor example.

This is directly taken from mitermayer 's fork, props to him
Pull Request resolved: https://github.com/facebook/draft-js/pull/1828

Reviewed By: mitermayer

Differential Revision: D9181983

Pulled By: mitermayer

fbshipit-source-id: aa2b66cb87123f96c3cd9cde19eb0fa86ff47c51",False
a399e43ba31f9b0c40a0301804b42d687764e552,2018-08-07 03:21:41,mitermayer,"2/n splitting PR #1828: updating removeRangeFromContentState (#1828)

Summary:
Splitting this PR into smaller pieces and updating them.

This chunk just makes some improvements/fixes to the removeRangeFromContentState
logic that handles nested blocks.

This is directly taken from mitermayer 's fork, props to him
Pull Request resolved: https://github.com/facebook/draft-js/pull/1828

Reviewed By: mitermayer

Differential Revision: D9181963

Pulled By: mitermayer

fbshipit-source-id: 98abba5ed76ed00207aafc59afe940dd2eeb3d00",False
328ddc63525956e55027abb1a6a81d56e8fa5fae,2018-08-07 03:06:23,mitermayer,"1/n splitting PR #1828: Initial forking of RichTextEditorUtil (#1828)

Summary:
We are splitting up and updating pieces of this PR by Mitermayer.

This chunk forks the RichTextEditorUtil and puts them both under the same Flow
interface, also adding a test. The forked NestedRichTextEditorUtil is a WIP
version of this utility.

This is directly taken from mitermayer 's fork, props to him
Pull Request resolved: https://github.com/facebook/draft-js/pull/1828

Reviewed By: mitermayer

Differential Revision: D9181952

Pulled By: mitermayer

fbshipit-source-id: 75f08fdb228ae1b45f97ae29aeae2f3d5ea53650",False
cf48f776429989a19e20874364ae3058f1067fab,2018-08-06 22:07:23,Nivedita Chopra,"Tree Data - Fix for backspace at the start of a nested block

Summary:
On backspace (with collapsed selection) at the beginning of the first child (C) of a parent node (P), we want the behavior to be:
* The parent node P is deleted.
* All the children (siblings of C) become siblings of P's previous sibling.

Pair programmed with flarnie :)

Reviewed By: mitermayer

Differential Revision: D9129672

fbshipit-source-id: af577be995a4c1029352cd83dd71357f8f045ff8",False
f3d349069d0d3d5a3e254e4cb520159c1f0d063e,2018-08-06 22:07:22,Nivedita Chopra,"Tree Data - Don't update pointers if range is within the same block

Summary:
Fixes a bug where we were trying to fix/update block pointers even when nothing changed across blocks.

Pair programmed with @[22701560:flarnie] :)

Reviewed By: mitermayer

Differential Revision: D9129494

fbshipit-source-id: 5b935371d30bdaa87849313ccd2c3c0f5be9facd",False
99eca6bacccb9d768202cb5188d820e6975ba1a3,2018-08-01 22:51:58,Flarnie Marchan,"Warn if 'moveSelectionForward/Backward' called with non-collapsed selection

Summary:
Noticed that these helper methods are designed with the assumption they will
only be passed a collapsed selection, but I don't see anything enforcing that
requirement in the code. Since we will be tweaking these helpers and refactoring
things, want to make the code more sturdy and enforce this constraint.

Starting with a 'warning' in case something relies on broken behavior here, but
as a follow-up we should make this an invariant.

Reviewed By: vdurmont, mitermayer

Differential Revision: D9034617

fbshipit-source-id: 378390c308d1ab2657bea7a5cc9cae060e515658",False
37dadd35d76768ae8109297afad6d498cfa3bd60,2018-07-17 16:52:14,Dan Abramov,"Fix Draft input cursor jumping to the end

Summary:
This is a missing bit from our setting/unsetting of the 'blockSelectEvents'
flag. I'll add more context when I get home, exiting shuttle soon.

Reviewed By: sophiebits, makakoa

Differential Revision: D8871413

fbshipit-source-id: b03bff193b5cb918085a9f83f0f980709db6b490",False
7f9299d02e7441d303d07cfbd4ee3e806c349c65,2018-07-10 02:51:19,Aaron Abramov,"codemod jasmine -> jest in html/shared

Summary: replace `spyOn` with `jest.spyOn`

Reviewed By: captbaritone

Differential Revision: D8211248

fbshipit-source-id: 7f23ae117c5cc8176bc4ff9f064ea65b03ffb62c",False
47ae65af45a2f620a8b91c7980cab2a256ca55be,2018-07-06 06:51:31,Paul O’Shannessy,"Remove logo from background circle (#1800)

Summary:
Per some discussions offline, the website logo wasn't supposed to have
the circle. This make the logo a transparent SVG with just the white
logo filling the viewbox.
Closes https://github.com/facebook/draft-js/pull/1800

Reviewed By: flarnie

Differential Revision: D8656873

Pulled By: flarnie

fbshipit-source-id: 9389f6bec1721ab6cb1fc9f65b7438836431553d",False
81cc54b908a7463409ce80c785585a65b3646340,2018-06-22 04:36:34,Matthew McKeen,"Fix tests to be independent on the implementation of invariant

Summary:
This fixes these tests to be independent of the implementation of invariant
so that these tests can work in multiple environments.

Differential Revision: D8580484

fbshipit-source-id: d0b07b6dc62b8f04d0610e84d43fe902b67431d7",False
0f58b641b2319a6941cec0fddc64c04d1f92c60c,2018-06-12 00:50:45,Nivedita Chopra,"var => const on test files

Summary: I missed these in D7803975 :)

Reviewed By: mitermayer

Differential Revision: D8346232

fbshipit-source-id: 5f27156608ee031c729e5ea1ffe6110bbcb6659b",False
0bb8d764aca49d5d2dab5da7ee6bd3a1587af88a,2018-06-08 03:05:39,Dave Alongi,"Re-apply order-requries linter on html/shared/

Summary:
D8283144 updates the 'order-requires' rule to also sort destructured imports/requires. Re-apply it.

Since the rule previously ignored ordering within destructures, it will not be noisy to land the fixes before the rule change.

drop-conflicts
bypass-lint

```
~/www/scripts/third-party/node ~/www/scripts/third-party/node_modules/eslint/bin/eslint.js --no-eslintrc --fix --parser babel-eslint --plugin 'fb-www' --rule 'fb-www/order-requires: [1]' html/shared/

Reviewed By: miorel

Differential Revision: D8301539

fbshipit-source-id: c70d84e640fd864be098161efb9abcc49e66cd38",False
bf1a028aa55504832861c96f4c3eaaf25349aa07,2018-06-07 15:20:35,Miorel Palii,"Auto-fix `prefer-const` ESLint rule (3/n)

Reviewed By: dalongi

Differential Revision: D8277895

fbshipit-source-id: 91941b3761b583580afa889510d7d150cf3bcd61",False
eea70f40fa93111085bba6ba4e473fd4f0a3d5bd,2018-06-04 13:07:33,Miorel Palii,"Auto-fix all auto-fixable eqeqeq problems

Reviewed By: zpao

Differential Revision: D8248952

fbshipit-source-id: dad12657addf2a39d9e23b46f7995f58078afd09",False
0ce20bcc6ac18b24b06945d54f1a4a692eee8cc9,2018-05-25 00:05:25,Joel Marcey,"Add Draft.js logo to header

Summary:
**Summary**

Added the Draft.js logo to the header.

Also turn on on page navigation for docs - some of the headers will need to be
changed in some of the docs to get it all to work correctly.

**Test Plan**

Ran site locally
Closes https://github.com/facebook/draft-js/pull/1768

Reviewed By: NoamELB

Differential Revision: D8148268

Pulled By: NoamELB

fbshipit-source-id: 2731fb31d87116f01de24e2953dcf3bcee0493c6",False
72ad814b90c701bca732bd3d38975afbb4ea938b,2018-05-24 13:36:48,Noam Elboim,"Fixing Docusaurus migration issues

Summary:
**Summary**

Fixes #1765

Includes:
1. Upgrading Docusaurus to 1.1.0, which fix the sticky footer issue.
2. Using production assets (for react, react-dom, immutable, babel-core) instead of development ones.
3. Supporting small screens with css.

More details in the issue.

**Test Plan**

Live site with the fixes: https://noamelb.github.io/draft-js

* Wide desktop:
![screencapture-noamelb-github-io-draft-js-2018-05-21-22_50_02](https://user-images.githubusercontent.com/7422547/40327618-45d38ba4-5d4c-11e8-908a-0f04a30a4d2c.png)

* Mobile:
![screencapture-noamelb-github-io-draft-js-2018-05-21-22_58_13](https://user-images.githubusercontent.com/7422547/40328208-4635f60c-5d4e-11e8-8838-5e2ee125e2a6.png)

* Mobile Docs:
![screencapture-noamelb-github-io-draft-js-docs-getting-started-html-2018-05-21-23_09_18](https://user-images.githubusercontent.com/7422547/40328215-49b5034a-5d4e-11e8-8166-152dfa161dcf.png)
Closes https://github.com/facebook/draft-js/pull/1771

Reviewed By: yangshun

Differential Revision: D8095846

Pulled By: yangshun

fbshipit-source-id: a07720785d787a6455c2704b2f4413b0572af321",False
dc9fa27ced7403b441ab2c4196a9b0a528a58d71,2018-05-24 12:36:13,George Zahariev,"Enable deprecated-type rule in www

Summary:
Enable the rule and remove `flow strict-local` files with violations. (In a previous diff, we dealt with all `flow strict` files with violations).

In subsequent diffs will enable in other `.flowconfig`s

bypass-lint

Reviewed By: wcheng86

Differential Revision: D8124247

fbshipit-source-id: 188da38c1e94c2f006f1b967f7b31a7453fca54e",False
710919b6b8c7eda0ff642bd345a106c5b2f084fc,2018-05-16 22:51:07,Noam Elboim,"Migrate to Docusaurus - Attempt #2

Summary:
This PR continues https://github.com/facebook/draft-js/pull/1607 (by aadsm) to update the website to https://github.com/facebook/docusaurus.

Changes from the original PR:
* Removing the `./setup.sh` line in .travis.yml (since the file was removed).
* Upgrading to the latest Docusaurus and React.
* Adding Google Analytics to Docusaurus config.
* Adding cname to Docusaurus config.
* Wiring the correct footer links.

Live Example: https://noamelb.github.io/draft-js/

Thanks flarnie & yangshun for all the help ☺️

![screencapture-localhost-3000-2018-05-10-23_18_05](https://user-images.githubusercontent.com/7422547/39892600-d14dc6be-54a9-11e8-953e-51be1cf48637.png)
![screencapture-localhost-3000-docs-getting-started-html-2018-05-10-23_18_26](https://user-images.githubusercontent.com/7422547/39892604-d3d9bdac-54a9-11e8-8306-e878775c1f79.png)
<img width=""1055"" alt=""ga"" src=""https://user-images.githubusercontent.com/7422547/39892610-d6dc2c7e-54a9-11e8-8f58-9d256d2247ee.png"">

Co-authored-by: António Afonso <aadsm@users.noreply.github.com>
Closes https://github.com/facebook/draft-js/pull/1759

Reviewed By: flarnie

Differential Revision: D8026140

Pulled By: flarnie

fbshipit-source-id: 975fcde309a8ab24af90c5363acf1b601dfdcde7",False
b2f6ed0274a441aeb90b631d4897765a9a37df2f,2018-05-15 05:35:44,Sophie Alpert,"Remove old decorator fingerprint logic

Reviewed By: mitermayer

Differential Revision: D7977136

fbshipit-source-id: e6389c58d668b8c403020bfa3f740c4f777add75",False
37989027063ccc8279bfdc99a813b857549512a6,2018-05-11 23:51:03,Miorel Palii,"Use strict-local in as many files as possible

Summary: I looked for files that had zero ""baddies"" (i.e. any, Function, Object), tried making them strict, reverted if there were errors.

Reviewed By: gabelevi

Differential Revision: D7957942

fbshipit-source-id: 22664d1add5e0a69e1f14342602abdbeef1dfc40",False
0ecf9a63632db5612679dfc5934bf07e4c8cd8ae,2018-05-11 04:51:08,Flarnie Marchan,"Pass eventTimeStamp to 'handleKeyPress' to allow tracking

Summary:
For purposes of logging, so that we can get the exact timestamp from the event
object for this event.

Reviewed By: dwwoelfel

Differential Revision: D7955262

fbshipit-source-id: b905088a28abc0b1c18ce55cf7d1651674e3fa64",False
b86b5ce9bf35712abeac2a98341bdf097824c9af,2018-05-11 02:50:26,Flarnie Marchan,"Pass synthetic event to 'handleBeforeInput' callback

Summary:
For purposes of logging, so that we can get the exact timestamp from the event
object for this event.

Reviewed By: bvaughn

Differential Revision: D7954113

fbshipit-source-id: 94e90385cd47bf0fe045d91fb8fb5167a1fffc05",False
fa88ee18cf9f0fd17bb29c47cc009a4cdf8c8c46,2018-05-10 08:05:43,Sophie Alpert,"Fix block tree before/after comparison

Summary:
In some cases, we need to prevent native insertion because native insertion would leave the decorators in the wrong place (and critically – editOnInput's attempt to patch things up would just make things worse and process the insertion twice). This new logic should be correct.

Previously, typing '#' before 'f' in 'x #foo' would result in 'x ###foo' (extra '#' inserted).

Reviewed By: mitermayer

Differential Revision: D7941738

fbshipit-source-id: eeff55ff082fc80c19f76fe1ea915bcbf0e7d86e",False
a1f4593d8fa949954053e5d5840d33ce1d1082c6,2018-05-09 01:35:56,Miorel Palii,"React.Element<any> / React.Element<*> -> React.Node as much as possible

Summary:
Most of the time when people annotate something with `React.Element<any>` or `React.Element<*>` they don't really care about it really being a React element, and would be just as happy with `React.Node`. The exceptions I encountered when writing this diff were:

1) places where people do `React.cloneElement` -- in that case we of course need an element
2) components that want some of the props or children to be a certain component type -- but in those cases we ought to specify the type of element rather than accepting `any` or `*`

As such, it's reasonable to replace `React.Element<any>` and `React.Element<*>` if doing so does not cause any Flow errors, and this should put a noticeable dent in our usage of unsafe Flow types.

Reviewed By: camspiers, stryju

Differential Revision: D7810983

fbshipit-source-id: d28f645a63cdfbae74370817e36c5bf590f543d6",False
d2a3ae82baeb9f14c6f8a882a5c93f87afec84dc,2018-05-02 23:05:52,Noam Elboim,"Add different counter-style for ordered lists based on their depth

Summary:
Draft.js have only 1 type of counter-style for ordered lists - the numeric.
Current Draft.js:
https://pxl.cl/d7zZ

Quip have a 3 different counter-styles, based on the depth:
https://pxl.cl/d7x6

This can be added by implementing the second argument to the counter function:
 content: counter(ol1) "". "";
to:
  content: counter(ol1,lower-alpha) "". "";

For more info: https://css-tricks.com/numbering-in-style/
Browser support is excellent: https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type#Browser_compatibility (for Basic support)

Reviewed By: flarnie

Differential Revision: D7840010

fbshipit-source-id: 6655566baafd9c03468c1b1b7c83bdb5ecf1ada6",False
06c0ee60f2b603b2872350069551d7f59173e73a,2018-05-02 23:05:51,Noam Elboim,"Finish modernizing convertFromHTMLToContentBlocks - max nesting bug fix

Summary:
The old convertFromHTMLToContentBlocks is capping depth to 4, v2 doesn't cap the depth.
DraftEditorContents-core component didn't handle cases of depth bigger then 4.
Similar to the current UI behavior, depth bigger then 4 will be shown as the same depth of 4.

Reviewed By: flarnie

Differential Revision: D7816688

fbshipit-source-id: 8989f0c5fb03bfcffc1e50575e35986d2491c3c2",False
d24b80217beb76d4fa37e45835415a5ca7cb5a6f,2018-05-02 22:51:13,Noam Elboim,"Finish modernizing convertFromHTMLToContentBlocks - upgrade draft-js internals

Summary: Upgrade example and Draft.js entry file to use convertFromHTMLToContentBlocks v2 with a GK

Reviewed By: flarnie

Differential Revision: D7823689

fbshipit-source-id: ae55b232e3b40c9cd00445d7e1ca626783a4a34a",False
49bdd85b80de5d8b132e5d4dd94db970c2ba46d2,2018-04-30 23:37:30,Noam Elboim,"Finish modernizing convertFromHTMLToContentBlocks - nesting bug fix

Summary:
Adding nesting depth to ul/ol nodes.
Changed default depth to -1 (similar to the logic in convertFromHTMLToContentBlocks v1), so the first level of list will be 0 and not 1.

Reviewed By: flarnie

Differential Revision: D7796997

fbshipit-source-id: 47e7f12bc21263eb8480b96b9e9a04e8eb9c934f",False
8de2db9e9e99dea7f4db69f3d8e542df7e60cdda,2018-04-29 06:51:02,Nivedita Chopra,"Change remaining vars to let/const

Summary: `var` was triggering my OCD while reading these files, so went through and fixed all remaining ones in Draft.js, also added Prettier to a couple of files that raised lint errors.

Reviewed By: flarnie

Differential Revision: D7803975

fbshipit-source-id: 2642f3801c096ef5e8a3952d7b13c672f68b15b6",False
3e9ff8ebd33f8a447e00cde3485b09c294710fd1,2018-04-27 22:06:02,Rubén Norte,"Fixed license, Flow and lint issues in draft-js

Summary: Apply the proper license and fix Flow and lint.

Reviewed By: mjesun

Differential Revision: D7790038

fbshipit-source-id: b3dd8b582c1311c926e92122fb17766e616b4100",False
ee2e9c828cf33270597965cf8f91cddaaf432935,2018-04-27 19:51:01,Rubén Norte,"Removed @providesModule tags and dependencies from draft-js

Summary: Removed providesModule from all files and configured Jest to work with global module names without the providesModule tag.

Reviewed By: mjesun

Differential Revision: D7788813

fbshipit-source-id: 89a7f3dfc10fae63c74711eab80a2c840806fb67",False
7fddfcdf8f78c4a239651d3e76e0c21bdbe72b90,2018-04-27 00:20:27,Flarnie Marchan,"Add docs about DraftDecoratorComponentProps

Summary: Just so we don't forget, since this new type is really useful and should be documented.

Reviewed By: catchingash

Differential Revision: D7774659

fbshipit-source-id: fe912787035d20d801eae74bf662209955b51d3d",False
7e1a107c57e6d23742d2c7814fb4d731ee57c4a6,2018-04-26 20:21:55,Flarnie Marchan,"Actually for real fix the flow type of decorator props

Summary:
The 'entityKey' could always have been null/undefined, and it's time that the
flow type reflects that. Our code should handle the case, though unexpected,
when it could be undefined.

A previous diff[1] was submitted but somehow the changes were not all commited.
This finishes the job, updating decorator components in our product code and the
type definition in Draft.js.

[1]: https://our.intern.facebook.com/intern/diff/D7659273/

Reviewed By: sophiebits

Differential Revision: D7710224

fbshipit-source-id: 7c673a565f79e45bced91db5b406974f9813327d",False
05b2b4c83c39163697dccf7a3fa28fe04eb8e008,2018-04-17 21:50:38,Ashley Watkins,"Add @providesModule back to draft-js modules

Summary: While working on T28259397, I removed the providesModule labels that were causing linting errors on my diff. However, that breaks Draft-js Travis builds: https://travis-ci.org/facebook/draft-js/jobs/367227905

Reviewed By: flarnie

Differential Revision: D7639720

fbshipit-source-id: 6a5b35ceeef0aa37317770ba141a9d42c7aac9e3",False
8000486ed6890d1f69100379d954a62ac8a4eb08,2018-04-16 21:20:45,Ashley Watkins,"Add common Flow type for decorator components

Summary:
While working on T27852583, I came across some files missing flow and format, and had some difficultly because of T28161651 (we don't have docs about what props are passed to decorator components) and we don't have Flow typing.

In most situations, `DraftEditorBlock` supplies the props to the decorator components: https://github.com/facebook/draft-js/blob/master/src/component/contents/DraftEditorBlock.react.js#L201-L213

Note: It is possible for a Custom Block Component to be provided: https://draftjs.org/docs/advanced-topics-block-components.html#content

If we have a common Flow type declaring what props are expected, then we can ensure consistency if/when these props change.

Reviewed By: flarnie

Differential Revision: D7603743

fbshipit-source-id: a7f6ef71d9ae9864fa1d6893c168b585cd71674f",False
4c4465f6c05b6dbb9eb769f98e659f917bbdc0f6,2018-04-06 23:05:31,Rubén Norte,"Add @providesModule back to draft-js modules

Summary: Added providesModule back to draft-js modules to unbreak the build.

Reviewed By: arcanis

Differential Revision: D7535532

fbshipit-source-id: 2d87637b97c99c40856c022bbdb3f18cd42bdf59",False
293f262c4780f4ff3ec23a51d69b15fa56437b57,2018-04-06 21:50:33,Rubén Norte,"Removed providesModule tag from non-generated files in html/shared directories (1/1)

Summary: Codemod to remove all providesModule tags from non-generated files

Differential Revision: D7457949

fbshipit-source-id: 9185f61c8ec1decc65ee7e40370584b6734246d4",False
e9540910e0e0168e5fdb3ce5b9e42168b301bd91,2018-03-27 23:20:43,Flarnie Marchan,"2/n Remove last vestiges of cWU

Summary: We have been testing this change for the last few weeks, now time to remove the flag.

Reviewed By: bvaughn

Differential Revision: D7415031

fbshipit-source-id: 2c8d57d6645873a90a278a2f3fe838cf913b0a25",False
0f6199df041bc25ac0bd55db2c10dd557789129c,2018-03-27 23:20:43,Flarnie Marchan,"1/n Move 'blockSelect' flag out of cWU

Summary: We have been slowly rolling out this change, and no significant new bugs have coincided with the roll-out. Let's remove the flag, so 100% of folks get this change. :)

Reviewed By: bvaughn

Differential Revision: D7415022

fbshipit-source-id: 831905c8caec5f34c54134d761644accbff03951",False
1d7750044099b18ba5e64b011befbb0a5a0689e0,2018-03-26 22:50:32,Bob Ippolito,"Workaround for BlockNode variance issue caused by flow transform (#1621)

Summary:
**Summary**

This should fix #1621 (it does in our project).

This manually transforms the BlockNode interface to use properties like the build step will do, but it adds covariant property annotations to match the expectation that classes have read-only methods. A better solution would be to fix the transform itself to do the right thing with interface methods, but this should be equivalent and is easier (for me) to do.

**Test Plan**

Confirm that the output lib/BlockNode.js.flow includes the covariant property annotations (`+`) before each of the properties that were previously methods. The automated test infrastructure only runs over src so it's harder to verify in travis as-is.
Closes https://github.com/facebook/draft-js/pull/1683

Differential Revision: D7399839

fbshipit-source-id: 16fb390789f2ab7cff3781d854c6d9af900de906",False
6eec8f978767103006b3ba9b6bf94649c017d8b1,2018-03-22 07:35:16,mitermayer,"Revert ""rename-unsafe-lifecycles""

Summary:
This reverts commit 8b3e8c95f197453c8806175a59403c607c4f498d.

cc bvaughn flarnie
Closes https://github.com/facebook/draft-js/pull/1705

Differential Revision: D7361922

fbshipit-source-id: c1d1acd884996c4ac1f50c13c0001815dc057088",False
a99f51eb33dc7c529f21b87d6cc7394b073f9388,2018-03-16 11:35:36,Sam Goldman,"Upgrade to Flow v0.68.0

Summary:
bypass-lint
ignore-signed-source

Reviewed By: nmote

Differential Revision: D7295893

fbshipit-source-id: 73879269f64034140bcfcec869385256dc7b78d5",False
102701c5dad77dfdfed9b7ed4ec68983dc10bfbb,2018-03-16 03:20:45,il kwon Sim,"Add list block onTab test

Summary:
**Summary**
This PR adds a unit test for `onTab`(#1674) on list block(ordered-list-item, unordered-list-item).
Closes https://github.com/facebook/draft-js/pull/1694

Differential Revision: D7294623

fbshipit-source-id: b0a103e402b03484ff929f9b5d6d7500ca23c116",False
22f9c522d3cab1aab2ea3df863c04f144d394e99,2018-03-14 08:50:41,Miorel Palii,"Strict-ify files that can be strict-ified with no additional changes

Summary: Diff auto-generated using Perl.

Reviewed By: Daniel15

Differential Revision: D7146936

fbshipit-source-id: c39ed21447ecf8df1862536633adcdd861ebe885",False
b6ae8873bb89858f553405cfd9c592976c9bb542,2018-03-14 02:50:23,mitermayer,"Integrating experiments on playground

Summary:
Integrating experiments on playground

- Allowing playground to load experiments
Closes https://github.com/facebook/draft-js/pull/1687

Differential Revision: D7259337

fbshipit-source-id: 2200c55d31f4fc8a52c2ecb72b26365cc70034f6",False
28cb4a3c79e45cedfab140aab147002598bf9de2,2018-03-13 02:50:42,Flarnie Marchan,"Add clarifying comments to 'getRemovalRange'

Summary:
I found some of this code confusing and added comments. Will probably
add more comments while looking at this part of the code.

For now pushing this before I lose track of things. Not in any hurry to merge it.
Closes https://github.com/facebook/draft-js/pull/1103

Reviewed By: mitermayer

Differential Revision: D7137918

Pulled By: mitermayer

fbshipit-source-id: 350786c4817e122efbce146f6e6ccc26ed12ae0f",False
8b3e8c95f197453c8806175a59403c607c4f498d,2018-03-13 01:50:11,Brian Vaughn,"rename-unsafe-lifecycles

Summary:
Ran the [rename-unsafe-lifecycles](https://github.com/reactjs/react-codemod/blob/master/transforms/rename-unsafe-lifecycles.js) codemod. For background information on this codemod see [RFC #6](https://github.com/reactjs/rfcs/blob/master/text/0006-static-lifecycle-methods.md) and this [draft ReactJS.org blog post](https://deploy-preview-596--reactjs.netlify.com/blog/2018/03/15/update-on-async-rendering.html).

bypass-lint
drop-conflicts
allow_many_files

Reviewed By: flarnie

Differential Revision: D7220433

fbshipit-source-id: b0d7572865c002a2be9347dfe1ef7de15d76e800",False
732b69df4d51efde1c8ba98f685f7be89f89f4fc,2018-03-12 22:19:44,Nicolas Champsavoir,"Refactor `convertFromHTMLtoContentBlocks`

Summary: One of the utility helper methods commonly used to manage state with Draft.js is the `convertFromHTMLtoContentBlocks` method, which converts an HTML string into a data structure used by Draft.js for tracking state. This is a helpful utility, but it was written in an overly complex way. This commits adds a new simpler implementation of `convertFromHTMLToContentBlocks`.

Reviewed By: flarnie

Differential Revision: D7158000

fbshipit-source-id: 3424cdeb03663dc6c5a194da3d317c6ab97507dc",False
6ef6c667656e140ca32a6f80057aa2b69b86620b,2018-03-09 23:19:51,Aditya Bhardwaj,"Fix typo

Summary:
*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

[...]

**Test Plan**

[...]
Closes https://github.com/facebook/draft-js/pull/1678

Differential Revision: D7214596

fbshipit-source-id: 3224ed09c2d8992d41ac199a6e2f1320462df59a",False
227d125cb19d5fd7a8a583a0624eb0835992f2d7,2018-03-07 08:22:02,mitermayer,"Adding Rich Editor to the playground

Summary:
This PR brings Rich editor to the playground

- Integrated Rich Editor on the playground
- Adding some basic styling

![draft-playground](https://user-images.githubusercontent.com/1042131/37007830-28ccc696-2094-11e8-8ee8-23ba18f333c5.png)
Closes https://github.com/facebook/draft-js/pull/1680

Differential Revision: D7174440

fbshipit-source-id: 5e0a76200c5499f45602b6b70157ad2f74b34950",False
73e5a9c3b57116a5a01d26016964ad3ba8fe0e66,2018-03-07 04:50:37,Eric Biewener,"Allow indentation beyond one level deeper than block above.

Summary:
**Summary**

Solves https://github.com/facebook/draft-js/issues/270. Removes restriction on indenting beyond one level deeper than the block above. Also allows indenting the very first item in a list. And all I had to do was delete code!

![image](https://cloud.githubusercontent.com/assets/253298/19991316/8dfb376e-a1f1-11e6-8e93-b8b49c30010b.png)

**Test Plan**

1. Try indenting the first item in a list.
2. Try indenting a list item more than one level deeper than the item above it.
Closes https://github.com/facebook/draft-js/pull/762

Differential Revision: D7137964

fbshipit-source-id: 597732b363537e34a0f466c3188f334b3fa30a9e",False
8eea2c281bf14984700158c553ffdda81513c73f,2018-03-06 01:36:39,mitermayer,"Enabling a GK manager for the plaground

Summary:
This enables on the playground for us to pass `gk_enable=foo,bar,foobar` or `gk_disable=foo,bar,foobar`, on the URI,

Example:

```
http://localhost:3000/?gk_enable=foo&gk_disable=bar,foobar
```

***

TLDR:

- Updating our Gkx stub to treat undefined gks on the stub object as falsy
- This will allow us to update GK flags while interacting with the playground.
Closes https://github.com/facebook/draft-js/pull/1677

Differential Revision: D7155154

fbshipit-source-id: 99836da46aafcf0cd30d4fe613633e897f59a079",False
7495adf0579881058ebda23145df95a13846c1aa,2018-03-03 01:50:21,mitermayer,"Making gkx overwrittable

Summary:
**Context:**

We currently have feature flags within our code base that can only be end-to-end tested within our internal environment.

This PR enable us to overwrite feature flag outside our internal environment
Closes https://github.com/facebook/draft-js/pull/1673

Reviewed By: flarnie

Differential Revision: D7138095

Pulled By: flarnie

fbshipit-source-id: 1b9954cd5c2a16d7c9e4ab4cdb0efceb6e67517a",False
04c667c941e9ba642108a44e91e460eabd3d981b,2018-03-02 19:31:59,Marcelo Jorge Vieira,"Website: Fixed code highlight

Summary:
Before:

![screenshot from 2018-02-24 20-40-31](https://user-images.githubusercontent.com/665903/36636318-3ddc33e8-19a3-11e8-85e6-a2743fdb3fae.png)

After:

![screenshot from 2018-02-24 20-40-42](https://user-images.githubusercontent.com/665903/36636320-3fd2d9c2-19a3-11e8-8b45-a54458f5761d.png)
Closes https://github.com/facebook/draft-js/pull/1664

Differential Revision: D7111376

fbshipit-source-id: cd325aed60fe94fc2ef1bc51627afc6b1932c878",False
e57126822b23446b6d491053cf01806852bdc7f2,2018-03-02 19:31:57,Flarnie Marchan,"2/n Do update 'blockSelectEvents' flag, during render

Summary:
We found via logging that this flag actually is being used in some cases - so we need to keep setting it.
Seems like the closest we can get to the current timing is to set it in a child
component which mounts when a successful 'render' of the parent DraftEditor
finishes. This is an amazing hack that sophiebits thought of to deal with the
other flag we were setting in cWU.

logs -
https://our.intern.facebook.com/intern/scuba/query/?dataset=draft_js_events&pool=uber&view=Table&drillstate=%7B%22sampleCols%22%3A%5B%22time%22%2C%22weight%22%2C%22accountid%22%2C%22anonymized_dom%22%2C%22browser_full_version%22%2C%22browser_name%22%2C%22browser_os%22%2C%22event%22%2C%22extra_params%22%2C%22http_referrer%22%2C%22scribe_category_type%22%2C%22script_path%22%2C%22selection_state%22%2C%22userid%22%5D%2C%22derivedCols%22%3A%5B%5D%2C%22mappedCols%22%3A%5B%5D%2C%22enumCols%22%3A%5B%5D%2C%22return_remainder%22%3Afalse%2C%22should_pivot%22%3Afalse%2C%22is_timeseries%22%3Afalse%2C%22hideEmptyColumns%22%3Afalse%2C%22start%22%3A%22-1+week%22%2C%22samplingRatio%22%3A%221%22%2C%22compare%22%3A%22%22%2C%22hide_sample_cols%22%3Afalse%2C%22minBucketSamples%22%3A%22%22%2C%22dimensions%22%3A%5B%5D%2C%22cellOverlay%22%3A%22None%22%2C%22metric%22%3A%22avg%22%2C%22top%22%3A%22200%22%2C%22timezone%22%3A%22America%2FLos_Angeles%22%2C%22end%22%3A%22now%22%2C%22cols%22%3A%5B%22accountid%22%2C%22userid%22%5D%2C%22aggregateList%22%3A%5B%5D%2C%22param_dimensions%22%3A%5B%5D%2C%22modifiers%22%3A%5B%5D%2C%22order%22%3A%22weight%22%2C%22order_desc%22%3Atrue%2C%22filterMode%22%3A%22DEFAULT%22%2C%22constraints%22%3A%5B%5B%7B%22column%22%3A%22event%22%2C%22op%22%3A%22eq%22%2C%22value%22%3A%5B%22%5B%5C%22blocked_selection_event%5C%22%5D%22%5D%7D%5D%5D%2C%22c_constraints%22%3A%5B%5B%5D%5D%2C%22b_constraints%22%3A%5B%5B%5D%5D%7D
the code - https://github.com/facebook/draft-js/blob/a6317e60b06519d3c00a2c0621701f3da0837a88/src/component/handlers/edit/editOnSelect.js#L30-L40

Depends on D7116729

Reviewed By: sophiebits

Differential Revision: D7116762

fbshipit-source-id: d5707a52c684c8ceb84624848c4c0d139f6232b2",False
4241f43332b6a6ab0878c0c756c82747ab366c8b,2018-03-02 19:31:51,Flarnie Marchan,"1/n remove GK on flushSync

Summary:
This has been running in production for some time and causes no problems, in
sync or async. Let's remove the GK check and make it the default behavior where
supported.

Reviewed By: sophiebits

Differential Revision: D7116729

fbshipit-source-id: f590508ea50de9639d821e1f2c8556e20c8ac54f",False
7eb2a50427b704bbd73b5e878d79eb42656f92ff,2018-02-28 06:35:25,mitermayer,"Playground - Making sure blockMap should always visible by default

Summary:
Will be iterating a bit on the playground submitting a series of small PR's

- Making sure that blockMap node is always open on the preview pane since
it's most likely one of the first debugging things we will be looking out for
- running prettier on the app.js file
Closes https://github.com/facebook/draft-js/pull/1665

Differential Revision: D7094842

fbshipit-source-id: 8666a185399135a38d4bed315bfff290f718cdf7",False
5ffce3d5b8a48a115b303498a4c29dc6ed9a8884,2018-02-28 06:35:25,Alan,"Bundle size stats

Summary:
By naming bundle size stats with the bundle name instead of the package version:
  - `yarn build` will produce stats for both the development bundle
    (Draft.js.json) and the production bundle (Draft.min.js.json) which we can
    track separately. The minified bundle is good for understanding what file
    size we will be advertising (albeit pre-gzip/brotli) while the development version
    is useful for seeing a 1:1 mapping between changes in code and bundle size.
  - The size stats will get overwritten everytime somebody builds and checks in,
    but that is desirable. Instead of keeping the entire history of the bundle
    size always checked-in (and possibly not in sync with the actual versions),
    git will keep track of the bundle size over time. Whenever we release, the
    size of the stats file for that release is whatever is in Draft.min.js.json
    at the time of release.

Here are the separate bundles (as visualized by
https://chrisbateman.github.io/webpack-visualizer/):

Development: https://files.terriblefish.com/chrome_2018-02-16_12-11-22.png
Production: https://files.terriblefish.com/chrome_2018-02-16_12-12-01.png

`yarn test`, `yarn run lint`, and `yarn run flow` all pass.
Closes https://github.com/facebook/draft-js/pull/1654

Reviewed By: flarnie

Differential Revision: D7073462

Pulled By: flarnie

fbshipit-source-id: 64cbad2dcaf93641ff932a63aaa47e59d86c9df7",False
6a1e2b00d04879e132792e7209c3f0299fc4d075,2018-02-27 23:05:20,Sophie Alpert,"Clear block type when pressing backspace

Summary:
This is closer to how most editors work.
Closes https://github.com/facebook/draft-js/pull/1659

Reviewed By: sophiebits

Differential Revision: D7073440

Pulled By: sophiebits

fbshipit-source-id: 3f6ab214282878dd7dccf7709fc261ffe350f485",False
1ef4044d5c0612fc9d81fbb8a7a40f7a8786b386,2018-02-27 03:19:51,Flarnie Marchan,"Update biweekly sync meeting notes from February 2018

Summary:
(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧

Maybe some day we will support mobile web.
Closes https://github.com/facebook/draft-js/pull/1663

Differential Revision: D7086767

fbshipit-source-id: 63b4a1c5bc0fa4f21fbd5aa850039db37587a270",False
4de1345d5ea1a373e580d20e976e3875ac3c2f35,2018-02-27 00:37:45,Thibaud Colas,"Move uglifyjs-webpack-plugin to devDependencies

Summary:
**Summary**

This dependency got introduced in a separate commit (f8ca29d1a7fa5a8bb89cb9be9a66d12732a0bfa7) from the others in #1644. I imagine this is a mistake since it only provides dev-time tooling.

**Test Plan**

For development, we can try a fresh install of the project:

1. `rm -rf node_modules`
2. `yarn install`. This runs `npm run build` via the `prepublish` script, so if it works it's good to go.

I don't think dependencies and devDependencies are processed any differently in a development environment, so not sure this check is even necessary.

For the published package:

1. `mkdir test`
2. `npm init -y`
3. `npm install git+https://github.com/thibaudcolas/draft-js.git#patch-2`
4. `npm ls --depth=1`

The `npm ls` result should be:

```
├─┬ draft-js@0.10.5 (git+https://github.com/thibaudcolas/draft-js.git#cb06920d0f3dea77692680dddba6ec475663c7b2)
│ ├── fbjs@0.8.16
│ ├── immutable@3.7.6
│ └── object-assign@4.1.1
├── UNMET PEER DEPENDENCY react@^0.14.0 || ^15.0.0-rc || ^16.0.0-rc || ^16.0.0
└── UNMET PEER DEPENDENCY react-dom@^0.14.0 || ^15.0.0-rc || ^16.0.0-rc || ^16.0.0
```

Note `uglifyjs-webpack-plugin` is absent, whereas it would have been there with `npm install git+https://github.com/thibaudcolas/draft-js.git#master`.
Closes https://github.com/facebook/draft-js/pull/1653

Differential Revision: D7073476

fbshipit-source-id: f69e31c2ca252062d2d66080055fd08b88c5a275",False
f4bc3a79007159af81c1088c36c6385a4bb07842,2018-02-26 23:50:17,mitermayer,"Making a more sane .gitignore

Summary:
Cleaning up .gitignore \0/

Note: deliberately excluded the ignore for yarn.lock as it makes more sense to be able to see the differences from HEAD and allow us to potentially upgrade them if necessary
Closes https://github.com/facebook/draft-js/pull/1666

Reviewed By: flarnie

Differential Revision: D7085339

Pulled By: flarnie

fbshipit-source-id: 1699373d5b3d64aa3954b0ed7b21e8aa090e3268",False
67f3586143ee9a804ad950cb66c18feefe072986,2018-02-26 22:19:43,Ken Hibino,"Examples cleanup

Summary:
**Cleanup Examples code**
I linted code in the  `/examples` folder with ESLint config that ships with `create-react-app` and I found a few warnings.

Changes made:
- Removed unused variables, imports
- Refactored switch statement to a simple if statement
- Removed unnecessary escape in Regex

Please let me know if you want me to squash commits or make changes 😄
Closes https://github.com/facebook/draft-js/pull/1649

Differential Revision: D7085257

fbshipit-source-id: 3292462da3926377537e840dc45ca206a41a8a1b",False
084bdb66473dc1bfbefe375cf6cd739742afbc42,2018-02-24 01:50:31,Brian Ng,"Ensure selection collapses if user tries to replace with matching text

Summary:
**Summary**

This PR ensures that the selection is always collapsed for the cases where a user replaces the current selection with matching text.

I admittedly didn't really dig into the original issue when fixing the previous crash :)

**Test Plan**

Small repro:

1. Type in ""abc""
1. Select ""c"" from right-to-left
1. Type ""c""
1. Select ""c"" from left-to-right
1. Type ""c""

Thanks to JLarky for bringing this to my intention!
Closes https://github.com/facebook/draft-js/pull/1661

Differential Revision: D7055502

fbshipit-source-id: ee4cf80d292ee715e40c017e4c6bd18f806b0e24",False
04c2b9c038cc4086f06bfb734d4cf8e88b4db5d2,2018-02-17 05:34:55,Sophie Alpert,"Move _latestEditorState assignment back to commit phase

Summary: Follow-up to D6994261. I believe this is more correct even though it is kind of a hacky approach.

Reviewed By: flarnie

Differential Revision: D7014753

fbshipit-source-id: 6107352ddbe5a90fa3235aae513a3c5b17574c55",False
584d8492c16ed3092d8d0e21e9efa4b9cc3109c5,2018-02-17 05:20:57,Thibaud Colas,"Remove Node 6 from engines list in package.json

Summary:
**Summary**

Fixes #1650.

Travis is using Node 8 since 247a632ab6420e7809a8f7cf7dd2b31b495bb4c7, and Prettier is already configured in a way that's not Node-6 compatible:

https://github.com/facebook/draft-js/blob/a6317e60b06519d3c00a2c0621701f3da0837a88/prettier.config.js#L3

Node 8 is the LTS release line since late october 2017 so I think it's fair to remove support for Node 6.

NB: I see `devEngines` also states support for npm 2 and 3. Node 8 ships with npm 5 by default, so I imagine those 2 versions could be removed as well. Edit: Ah actually I see draft-js is at least partially using yarn since #1568 / #1570.

**Test plan**

No tests. This is only removing support, it doesn't affect supported versions.
Closes https://github.com/facebook/draft-js/pull/1652

Differential Revision: D7013709

fbshipit-source-id: bdb7e105352be2e8f205c36f516b1e6c4cedb591",False
6cc2d857082ec62ecf67bf6bf51cd176fec95548,2018-02-17 04:20:20,Michael Baldwin,"added favicon to website

Summary:
**Summary**

- flarnie kedromelon finishes up #965 by adding the favicon to the website
- thanks to kedromelon for the great favicon! 🎉

<img width=""681"" alt=""screen shot 2017-11-22 at 11 58 00"" src=""https://user-images.githubusercontent.com/10538297/33140139-1c883108-cf7d-11e7-9ee6-da097eb32e29.png"">

<img width=""660"" alt=""screen shot 2017-11-22 at 11 57 46"" src=""https://user-images.githubusercontent.com/10538297/33140149-25071ccc-cf7d-11e7-8c49-043645f9294c.png"">

**Test Plan**

- not applicable
Closes https://github.com/facebook/draft-js/pull/1526

Reviewed By: flarnie

Differential Revision: D6976891

Pulled By: flarnie

fbshipit-source-id: 73a544ee6860f203361089e741007b93e8ba651e",False
90a8f22557a331e7301662d01b0e868290e13c31,2018-02-17 01:21:00,Flarnie Marchan,"Update 'latestEditorState' in render too

Summary:
**tldr;** Handlers can get called after cWU and before cDU, and they use the
cached 'latestEditorState'. For them to get the fresh version of the state,
we need to update 'latestEditorState' in 'render' because that happens before
the handlers get called.

**The whole story;**
We are trying to remove cWU from `DraftEditor.react.js`. One thing which
currently happens there is that `latestEditorState` gets set to the
nextProps.editorState, so whatever is passed in by the parent. For more context
on the initial attempt at changing this, see
https://our.intern.facebook.com/intern/diff/D6873303/

This change introduced one bug that manifested in various ways - see T26034821
and T26020049. I'll focus on T26020049, which broke
`<AdsBulkTokenizedTextInputWithFieldsSelector>`.

`<AdsBulkTok...FieldsSelection>` has a button for adding a new token, and when
you hit that button it passes `<DraftEditor>` an updated editorState as a prop.
This triggers render #1, and during that render we update the browser
selection, which triggers `focus` and `blur` events. These each trigger another
render of `<DraftEditor>`; renders #2 and #3. Here is how it looks on a
timeline:
```
render #1
+
|
| cWU -> latestEditorState = FRESH_STATE
|
| render -> this.props.editorState = FRESH_STATE
| +
| |
| +--> triggers 'focus' event, calling 'handleFocus' with latestEditorState
|                   +
|                   |
+>cDU fires         | the 'handleFocus' call schedules render #2
                    | with latestEditorState, which is FRESH_STATE
                    |
render #2  <--------+
+
|
| cWU -> latestEditorState = FRESH_STATE
|
| render -> this.props.editorState = FRESH_STATE
|
+>cDU fires
```
When we move the update of latestEditorState to cDM, things go awry like this;
```
render #1
+
|
| cWU -> Nothing ... latestEditorState = STALE_STATE :(
|
| render -> this.props.editorState = FRESH_STATE
| +
| |
| +--> triggers 'focus' event, calling 'handleFocus' with latestEditorState
|                                                +
|                                                |
+>cDU -> latestEditorState = FRESH_STATE         | the 'handleFocus' call schedules render #2
                                                 | with latestEditorState, which is STALE_STATE :(
                                                 |
render #2 <--------------------------------------+
+
|
| cWU -> nothing updates
|
| render -> this.props.editorState = STALE_STATE :(  because this was passed in above
|
+>cDU fires and resets latestEditorState = STALE_STATE :(
```

So we can fix things by updating latestEditorState inside the `render` method,
like so;
```
render #1
+
|
| cWU -> Nothing ... latestEditorState = STALE_STATE :(
|
| render -> this.props.editorState = FRESH_STATE
| +         *and* set latestEditorState = FRESH_STATE
  |
| |
| +--> triggers 'focus' event, calling 'handleFocus' with latestEditorState
|                                                +
|                                                |
+>cDU -> latestEditorState = FRESH_STATE         | the 'handleFocus' call schedules render #2
                                                 | with latestEditorState, which is FRESH_STATE
                                                 |
render #2 <--------------------------------------+
+
|
| cWU -> nothing updates
|
| render -> this.props.editorState = FRESH_STATE which was passed in above
|
+>cDU fires and resets latestEditorState = FRESH_STATE
```

One possible issue would be if `render` fired and then was never completed, in
async. mode, but since Draft is intended to always be run in sync. mode I'm not
worried about that.

Reviewed By: mitermayer

Differential Revision: D6994261

fbshipit-source-id: 80986b853a57f64aa5aafbe667b4d94171d5271c",False
a6317e60b06519d3c00a2c0621701f3da0837a88,2018-02-14 02:35:43,Flarnie Marchan,"Widen logging and add stack trace for IE selection bug

Summary:
We are hoping to remove this flag that was meant to fix an IE selection bug. It
blocks selection events from being handled while React is rendering - the thing
is, this has never been a problem that we can see.

We are logging to see if real users actually hit this bug and if the flag
prevents a bad state in that case.

If we find that the flag is never hit, then it will soon be removed, unlocking
removal of a deprecated lifecycle method.

Reviewed By: sophiebits

Differential Revision: D6971850

fbshipit-source-id: 8874b21161de3b3f0f568baca2a8c0278b01fa54",False
e65a8e61d6151ac4e0db8ac8a8635844a5fcdef7,2018-02-13 22:05:16,cbeninati,"Match block and inline examples for consistency.

Summary:
**Summary**

A simple update to keep the examples consistent.
It could have gone either way, so I updated the second example to match the first.

**Test Plan**
N/A
Closes https://github.com/facebook/draft-js/pull/1648

Differential Revision: D6976848

fbshipit-source-id: c6e4047d9f41b8776a1c7f50457495cfb0ee20ea",False
0a1f981a42ba665471bf35e3955560988de24c78,2018-02-10 01:35:14,Alan Norbauer,"Bundle size stats + Misc changes

Summary:
**Summary**

Misc changes that:
1. Make the dev environment work on Windows and Node v9.
1. Upgrade Webpack and UglifyJS.
1. Build now outputs build stats to the `meta/bundle-size-stats directory/` dir.
    1. The build stats are named the current package version, e.g. the current one is `version-0.10.5.json`.
    1. An example of this file can be seen here: https://files.terriblefish.com/version-0.10.5.json
    1. This json file can be visualized in any of the various tools online, e.g. [the official tool](https://webpack.github.io/analyse) which is great for visualizing module dependencies and [this one from Chris Bateman](http://chrisbateman.github.io/webpack-visualizer/) that makes visualizing file sizes really nice.

**Test Plan**

`npm test`, `npm run lint`, and `npm run flow` all pass

**Misc**
* I don't think any of these changes need tests
* No API changes
Closes https://github.com/facebook/draft-js/pull/1644

Reviewed By: flarnie

Differential Revision: D6950926

Pulled By: flarnie

fbshipit-source-id: 47de3b030087af010a19694caeca3de13d16a099",False
3a3d34bdd0f7772f666878c46b922da48d8ed067,2018-02-09 23:34:52,Matthew Mans,"expose start/end positions of a decorated component within a contentBlock

Summary: In some cases, it's valuable to expose the current position of a decorated component within its content block for styling purposes. (Example: Apply certain styling to a decorated component if a certain entitiy is directly next to that component).

Reviewed By: flarnie

Differential Revision: D6712533

fbshipit-source-id: ea25ae65fafba5283a344a091ac2346fcd4e9bb3",False
900ef767ca4d89198eb7e8da0e9deda337e96995,2018-02-08 06:05:30,Guilherme Miranda,"Fixing tex example

Summary:
**Summary**

Fixing issue #1408
Closes https://github.com/facebook/draft-js/pull/1504

Differential Revision: D6924656

fbshipit-source-id: 6f12a01c1bed709cfb7da601b1dbf404d5b038a3",False
788595984da7c1e00d1071ea82b063ff87140be4,2018-02-05 22:21:26,Flarnie Marchan,"Remove 'componentWillUpdate' under GK

Summary:
The last thing we do inside 'componentWillUpdate' in DraftEditor is update the
'_latestEditorState'.

This was introduced in https://github.com/facebook/draft-js/pull/666 and that
PR has a great explanation in the comments.

**BUT** when manually testing this, the bug with dead key deletion and korean
IME deletion not working was still happening, even with the current state of
things. So that was interesting. It doesn't seem to fix the thing we originally
intended, unless I'm missing something.

In a later change (https://our.intern.facebook.com/intern/diff/D4778712/)
passes latestEditorState to handlers, so that they can use the latest editor
state instead of stale editor state. This fixed many bugs in our own uses of
Draft.js.

And since there are many untested IME cases, it could be that some situations
are still improved by storing and tracking the '_latestEditorState'.

We already set '_latestEditorState' inside 'update' and that is always called
before 'componentWillUpdate'. My first approach is to just rely on that and
remove the updating in 'componentWillUpdate'.

Updating '_latestEditorState' in 'componentWillUpdate' does potentially give
us important info though; if the 'onChange' handler mutated the editorState
then we will need to use that, and we get it in 'componentWillUpdate'.

If we want to maintain this, then I propose the following;
- Move '_latestEditorState' into state in 'DraftEditor' and create a public
  getter method to access it.
- Update it in the new static method 'getDerivedStateFromProps' and then use
  the polyfill wrapper to make Draft.js backwards compatible.
I'd rather skip that if it turns out we don't rely on '_latestEditorState'
being updated after 'onChange' is called. With so many uses and so few tests,
the only way to know is to try it. :)

Follow-up action items:
- Add a unit test for latestEditorState being used and passed to handlers.
- Open the GK to 70% employees and let that sit for a couple of days, to verify
  that this doesn't cause major problems. Continue roll-out and remove GK.
- Add inline comments explaining why we track and use '_latestEditorState'.

Depends on D6866079

Reviewed By: sophiebits

Differential Revision: D6873303

fbshipit-source-id: 5df00598ea20d826f96d70eddcfe7043cf18a18b",False
d1448831223d7b742b8461b73059ee58daf079b6,2018-02-05 22:21:21,Flarnie Marchan,"try disabling 'blockSelectEvents' flag

Summary:
In the past Draft.js set a 'blockSelectEvents' flag on 'componentWillUpdate'
and unset it in 'componentDidUpdate'.

The reason for this, according to comments in the code, was that IE will fire
a 'selectionChange' event when we programmatically change the selection,
meaning it would trigger a new select event while we are in the middle of
updating.

**Edit:**
We found that the 'selection.addRange' was what triggered the stray `selectionchange` event in IE, for the record.[1] Thanks sophiebits for the tip about that.

When manually testing, I saw no bugs or inconsistencies introduced when the extra 'selectionchange' event fired in IE. The event would go into React, and yet it was never logged as triggering a handler in Draft.js.

So either that `selectionchange` event was not one that Draft.js. listened to, or React ignores/defers it because it's in the middle of a commit.

This diff does two things:
- Add logging to verify if we ever actually use the `blockSelectEvents` flag in practice. Is it actually blocking anything??? And if not, as I suspect, then;
- We can just remove it. This also removes it under a GK, so we can test on 50% employees first and see if they experience any bugs.

Lastly - I do want to add tests for this. It is error-prone and time consuming to set up and repeately do manual testing. Going to put together an outline of what I think the test should look like in a follow-up diff.

 ---
[1]: Here are the logs I recorded, for posterity
```
// inside of DraftEditor#focus
calling forceSelection
calling udpate with new editor state and new selection
componentWillUpdate fired!
This is where blockSelectEvents would be set to true~~~
a leaf is about to call setDraftEditorSelection
removing all ranges from the selection
calling range.setStart
**calling selection.addRange**
**React got an event of type topSelectionChange**
**window got an event of 'selectionchange'**
componentDidUpdate fired
This is where blockSelectEvents would be set to false~~~
React got an event of type topBlur
React got an event of type topFocus
Draft got an event of onFocus
Draft returned early because currentSelection already matches the updated selection
```

Reviewed By: sophiebits

Differential Revision: D6866079

fbshipit-source-id: 01034c6404df892224f5c18a45cba744a64d6e38",False
558352c81f32abf29d073038b5bf4a2dc8f69189,2018-02-03 03:20:45,Michael Chen,"Update site footer from 2017 -> 2018

Summary:
**Summary**

Update site footer from 2017 -> 2018
Closes https://github.com/facebook/draft-js/pull/1592

Differential Revision: D6885937

fbshipit-source-id: d4077b49b363ace6ac89d57155ff909a25c49eef",False
a8940302d1d07c1fa0af411368be901b380b22ad,2018-02-03 00:05:07,Steven Luscher,"Make the Flow type of `CompositeDraftDecorator's` constructor more strict

Summary: The input array of decorators gets cloned in the constructor to prevent mutations of the original array from affecting the composite. Another way to communicate that the input array should not be mutated is with the `$ReadOnlyArray<...>` Flow type.

Reviewed By: kassens

Differential Revision: D6882262

fbshipit-source-id: 35bfb957a7d006d5554d6ba11ba7d095800d40b0",False
70178257f60c2bdb79b1b208cf8b7bbce09ab15e,2018-02-02 23:49:55,Flarnie Marchan,"Update weekly meeting notes from Oct. 2017 - Jan. 2018

Summary:
Still going~ 🚂
Closes https://github.com/facebook/draft-js/pull/1634

Differential Revision: D6831211

fbshipit-source-id: 5f1a02f55c4db003ff1d4842a0040d05aedfd478",False
dc5ca7f031ceecbfbc7cfc04c26a424ba9e0072a,2018-02-02 03:35:15,Steven Luscher,"Deprecated the coarse `onArrowUp` et al key handler props on `DraftEditor.react` to make it possible to produce editor commands from these keys

Summary:
Previously, it was impossible to do this:

```
function mapKeysToEditorCommands(e) {
  if (mentionsAutocompleteIsOpen) {
    switch (e.keyCode) {
      case Keys.UP:
        return 'MentionsAutocomplete/select-previous';
      case Keys.DOWN:
        return 'MentionsAutocomplete/select-next';
    }
  }
  return getDefaultKeyBinding(e);
}

<DraftEditor
  keyBindingFn={mapKeysToEditorCommands}
  ...
/>
```

…because we didn't give TAB, ESCAPE, LEFT, UP, RIGHT, or DOWN a chance to produce a command name.

This pull request:

1. deprecates the prop-based key handlers (`onUpArrow` et al.) and encourages people to move their custom key logic into a `keyBindingFn`, and
2. lets the named keypresses fall through to the `keyBindingFn` whenever a prop-based key handler isn't supplied.
3. Updates the homepage and the rich text example.

![tabs](https://user-images.githubusercontent.com/13243/35651838-f129bf4a-0695-11e8-971b-38dbae48fd23.gif)
Closes https://github.com/facebook/draft-js/pull/1637

Differential Revision: D6864155

fbshipit-source-id: 23efb4caac25b1bc867350a1212f142b5b3ce7ab",False
cda13cb8ff9c896cdb9ff832d1edeaa470d3b871,2018-02-01 01:49:56,Andrew Clark,"Wrap Draft handlers in flushControlled instead of flushSync

Summary:
In D6727557, we tried wrapping all Draft event handlers in `ReactDOM.flushSync`. The purpose was to ensure that updates scheduled inside event handlers would flush before React yields back to the browser. (This is only relevant to async mode, since in sync mode everything is sync by default.)

The problem was that `flushSync` contains an invariant that throws if it is called inside a lifecycle method, to protect against reentrant React renders, which we intentionally do not support. What's nice about this invariant is that it guarantees all the work is flushed by the time the function returns. Usually this is fine, because event handlers are at the top of the stack. But there are cases where an event is dispatched from inside a lifecycle, like `el.focus`.

The fix is to switch to a new lifecycle method, `unstable_flushControlled`. This is similar to `flushSync`, but it will not throw if called inside a lifecycle; instead, the work will be deferred and flushed at the end of the current batch. This still satisfies Draft's requirement that the work is flushed before React yields to the browser.

`flushSync` is still the preferred API for most cases, but what we've learned from this is that it's only safe if you can be sure it's not nested inside other React work. E.g. calling it from inside a `requestAnimationFrame` callback is perfectly safe because you know you're at the top of the stack. If there's any indirection, especially related to DOM events, you likely want `flushControlled` instead.

Reviewed By: sophiebits

Differential Revision: D6861819

fbshipit-source-id: f5d4346fdff634ddaba5955db08c0c5a1b41cd0e",False
35b3605f1b7a6714be0159f2b111eadc854963ac,2018-01-31 00:05:22,Thomas Broadley,"Fix typo

Summary:
PR created using https://github.com/tbroadley/github-spellcheck-cli.
Closes https://github.com/facebook/draft-js/pull/1579

Differential Revision: D6841639

fbshipit-source-id: 698bd83cf7d8652b35c7229dbaf8ed614a81a71e",False
18fdffb63a050c693f71d0f2b5ce88260158cc05,2018-01-30 23:50:38,Julian Krispel-Samsel,"Add draft js playground

Summary:
**Summary**

Must haves:
- [x] add an playground to `examples`
- [x] integrate draft js editor
- [x] Button to update draft js editor from codemirror content
- [x] Button to import draft js contentState into codemirror
- [x] display current contentState
- [ ] integrate basic rich text editing into draft editor
- [ ] integrate codemirror for html and json editing
- [ ] use url query parameters to toggle feature flags

Nice to haves:
- [x] resizable panels
- [ ] use visualisation tool for displaying any json structures (like contentState)
- [ ] add option for viewing other parts of editorState other than contentState, like selection, undoStack, etc
- [ ] style nicely
- [ ] use localstorage to remember last configuration?
Closes https://github.com/facebook/draft-js/pull/1572

Reviewed By: flarnie

Differential Revision: D6832449

Pulled By: flarnie

fbshipit-source-id: e57ac6ba7f06f01aa37263276365ba9f0868b2ac",False
27a5f106e3071c6f811590aa1296669aebf18e29,2018-01-30 04:49:51,Sai Kishore Komanduri,"Update docs/APIReference-Editor.md

Summary: Closes https://github.com/facebook/draft-js/pull/1635

Differential Revision: D6835150

fbshipit-source-id: 346b9317b2c08c839e0e88188e4f8fd3056842f8",False
342a51a6b943961561cca1cbace8e268b4fe329c,2018-01-29 08:19:40,mitermayer,"Bumping internal flow version

Summary:
This is first step In order to investigate issues reported by https://github.com/facebook/draft-js/issues/1621, this PR will bump our internal flow dep to latest released version.
Closes https://github.com/facebook/draft-js/pull/1628

Differential Revision: D6832198

fbshipit-source-id: e2a6c34f766e007a3a75a8f55e71921d6ffb1767",False
4c12eadb63c9e89a1db0688da6ba5f1f0a955406,2018-01-27 00:35:39,mitermayer,"Fixing master

Summary:
This PR fixes the flow broken build in master
Closes https://github.com/facebook/draft-js/pull/1631

Differential Revision: D6820135

fbshipit-source-id: 7c393f66f16d6d80065974c3cf7108e2ee9c4a7f",False
07eb9c4e2e2771d284c3c8f0c0d78d6b488619fd,2018-01-26 06:50:31,Sophie Alpert,"Switch from DraftFeatureFlags to gkx()

Reviewed By: flarnie

Differential Revision: D6811498

fbshipit-source-id: f2a9128ea161c9a68d2d7e55ad23d1d5a3823069",False
26040e57226201af2f7e295224a9d937428a5e3a,2018-01-25 05:35:23,Flarnie Marchan,"Add 'flushSync' to Draft.js for *only* GK folks

Summary:
We did this in https://our.intern.facebook.com/intern/diff/D6727557/ and then it
was reverted due to bugs like
https://our.intern.facebook.com/intern/tasks/?t=25244286
... But we still want to do this! Let's enable under a GK so we can dogfood and
possibly identify repro steps.

Context from original version of this diff -
We have seen various issues with Draft and other controlled text inputs when
React is in ""async mode"", such that updates are rendered asynchronously.
For more context and repro steps, see https://github.com/facebook/draft-js/issues/1577

I also added the logic to the plain text editor test page for manual testing, until we write unit tests for this.

Reviewed By: acdlite

Differential Revision: D6802653

fbshipit-source-id: 9f6952e9cb77cf79f9650d167075b1c337e3d35f",False
f6fbf1c83b348a8185fb33735d3ebbd505488fa7,2018-01-23 22:05:03,Thomas Nardone,"Fix Linux keyboard shortcuts

Summary: Removing the concept of ""isWindows"", as that seemed to land Linux into a forgotten bucket.  IMO the shortcuts should simply be split between Mac and PC.

Reviewed By: sophiebits

Differential Revision: D6777189

fbshipit-source-id: 9c596c4c544298f0ac46470988ed2992698e0dca",False
93bc209c8b7524fdbf2025487ac7b6094220e0c3,2018-01-23 02:50:08,Flarnie Marchan,"fix typo in changelog

Summary:
Thanks to existentialism for catching this in code review :)
Closes https://github.com/facebook/draft-js/pull/1620

Differential Revision: D6772963

fbshipit-source-id: d251cc1fb87d7a87cf46fadd4556487911a5dacc",False
126ce9938826848eefc49191e40630cdb83c9b39,2018-01-21 03:35:44,Flarnie Marchan,"0.10.5

Summary:
It's time for a release~! 👐✨�
Closes https://github.com/facebook/draft-js/pull/1619

Differential Revision: D6768509

fbshipit-source-id: 7543cee5b746611cfefb89dfeb175e5b2f90fcb0",False
53ebc863250e01deb42cf2be3f65df2ad8098ffd,2018-01-20 03:50:27,mitermayer,"Updating yarn.lock dependencies

Summary:
Updating yarn.lock dependencies and making sure prettier version matches the one we use internally
Closes https://github.com/facebook/draft-js/pull/1617

Reviewed By: flarnie

Differential Revision: D6762796

Pulled By: flarnie

fbshipit-source-id: a373572cee66a1041f057aa71da1c32e4101246b",False
63d883580a57dac72ef0c9c6eb7c8bcd7228293e,2018-01-17 20:35:21,Flarnie Marchan,"Revert D6727557: [Async React + Draft.js] Wrap Draft updates in flushSync

Summary:
This reverts commit r3576306

bypass-lint

An infra SEV is better than not reverting this diff.
If you copy this password, see you in SEV Review!
cause_a_sev_many_files

Differential Revision: D6727557

fbshipit-source-id: eab5182eb619fc4df39a815f319a6c9ad62c6ed8",False
760caaf8b3bbe57a12410ce2498e9d23783e223f,2018-01-17 02:35:38,Flarnie Marchan,"Wrap Draft updates in flushSync

Summary:
We have seen various issues with Draft and other controlled text inputs when
React is in ""async mode"", such that updates are rendered asynchronously.

For more context and repro steps, see https://github.com/facebook/draft-js/issues/1577

Reviewed By: sophiebits, sebmarkbage

Differential Revision: D6727557

fbshipit-source-id: f0d04e290c11d4123eacdf83b0a645a18bb5afc2",False
3890b5c2f4f85e3ef536ad2366118e04ff7d283d,2018-01-13 23:19:53,Gordon Dent,"Fix convertHTMLToContentBlocks test

Summary: The snapshot test is failing because the test was written assuming the classname generated by cx would follow the same format as on Github. I've relied upon cx within the test so that we test behavior based upon how cx outputs a css selector.

Reviewed By: sophiebits

Differential Revision: D6718015

fbshipit-source-id: a8efbaaa2919ceaf77156dc8bd439404b5070a4d",False
14d9f527c172e64357c8154853797d2e19a46005,2018-01-11 23:20:26,Gordon Dent,"Preserve list indentation from one DraftEditor to another on paste

Summary:
**Summary**

When pasting from one editor to another we lose list indentation.  By inspecting the classList of each list item contained in HTML pasted we can preserve this state.

**Test Plan**
I validated behavior manually:

- Rebuild
- Open two tabs to rich text example
- In one create indented list
- Select all
- Paste into other
- Styling is preserved

I also added some snapshot testing for regression testing.
Closes https://github.com/facebook/draft-js/pull/1605

Reviewed By: flarnie

Differential Revision: D6702583

Pulled By: flarnie

fbshipit-source-id: 071cecc786e2aaef11af9bd21cc03f9b2544a2b4",False
7eb6a1abe284343b3646354246fa19d3ee12bedb,2018-01-10 20:35:04,Brian Ng,"Fix updating editor when editing selected text

Summary:
Fixes #1509.

Ref: https://github.com/facebook/draft-js/pull/719
Closes https://github.com/facebook/draft-js/pull/1512

Differential Revision: D6673593

fbshipit-source-id: fb5ab4c41de7958139deb125e5e8e79c76b53ec3",False
a6af3e15120e74c8797c5670f5bb63cb45c49a32,2018-01-10 00:20:06,Suraj Karnati,"Adding aria-describedby attribute the draft editor

Summary:
We have a ariaDescribedBy prop in DraftEditorProps.js but it is not set in DraftEditor.
Currently the aria-describedby attribute is set based on if there is a placeholder and is set to the placeholderId.
https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute

issue on github which also has suggested the fix: https://github.com/facebook/draft-js/issues/1214

Reviewed By: jessebeach, flarnie

Differential Revision: D6154932

fbshipit-source-id: d828ca5f73921c5d303820c5aed5b39eda08ccd1",False
3689a93c85786b6a3fb8a3434e9c700661a8ba02,2018-01-09 09:05:10,mitermayer,"Exploration - Feature tree / adding internal support for tree data structures

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for tree data structures**

This PR includes the missing parts for adding support for internal tree data structure by providing:

* last transaction insertFragmentIntoContentState.js
* last modifier AtomicBlockUtils
* fixing a bug on the randomizeBlockMapKeys to handle orphanated fragments

This is the last PR of the series to add support for internal tree data structures, from here we should then either update `RichTextEditorUtil` to have some `tree` awareness and having some controls for creating nesting content or create a new `NestedRichTextEditorUtil` that can be used for that. Ideally that work would also come with a `demo` example page

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1593

Differential Revision: D6679776

fbshipit-source-id: ad25593a7dd01552848a9ae2cdc7d34491b8130e",False
0059dd46f4d23af7d9803316aa93d8deddb5e8ae,2018-01-09 06:05:20,Frank Thompson,"make encodeRawBlocks support non-contiguous entities

Summary: `encodeRawBlocks` was improperly incrementing `entityStorageKey` when processing non-contiguous entities. This caused all entities after the non-contiguous one to have incorrect keys.

Reviewed By: sophiebits

Differential Revision: D6667822

fbshipit-source-id: 6222ea844893ab75aad8171224d01ad893ecf44f",False
232791a4e92d94a52c869f853f9869367bdabdac,2018-01-06 05:50:09,Frank Thompson,"fix getWhitespaceChunk

Summary:
This fixes `getWhitespaceChunk` to properly add the appropriate entity (if present). It seems that this was broken in [[ https://github.com/facebook/draft-js/pull/1518 | #1518 ]] (D6372235). The problem is that the `map` in
  new Array(1).map(none => (inEntity ? inEntity : none))
doesn't actually do anything since the array has no entries. To fix this, I'm just reverting the code to how it was previously.

Reviewed By: sophiebits

Differential Revision: D6669010

fbshipit-source-id: 17a430e36f75b48e7231619955dff73508f3fc2f",False
80d0f7ed5cc0c8e0505a9b5c0157574807aa04a0,2018-01-06 04:20:30,Anthony Guimard,"Issue 1568 npm to yarn

Summary:
**Summary**

Add a yarn.lock file at the root of the project.
Replace NPM with Yarn in travis.yml file.

**Test Plan**

Ensure that travis run without errors.
All current npm scripts has been manually tested (prepublish, pretest, build, dev, postbuild, lint, format, flow, test, test-ci), there are many lint warning on test files (see attached screenshots).

<img width=""886"" alt=""lint-error"" src=""https://user-images.githubusercontent.com/1331358/33870374-7e061cca-dedb-11e7-8d16-baad0cb9f434.png"">

- [x] get yarn set up for yourself
- [x] `cd draft-js && rm -rf node_modules && yarn install`
- [x] verify that builds, lint, tests, etc. are passing
- [x] commit the resulting `yarn.lock` file that gets added to the root of the repo
- [x] update `.travis.yml` to use `yarn` instead of `npm` for all commands. Note that the `yarn` commands may vary a bit from the npm CLI commands.
Closes https://github.com/facebook/draft-js/pull/1570

Differential Revision: D6667926

fbshipit-source-id: 20a1134352f7cfdb4257b6f9092f4143158d761f",False
9571a88d26bd56669846f5e8549f407d3ea80d15,2017-12-16 09:35:52,mitermayer,"Re-enabling linting errors as part of the build

Summary:
This PR makes linting part of the CI build once again. While we were out of sync with our internal Prettier version we had to downgrade linting as warnings, this brings prettier linting back to error.
Closes https://github.com/facebook/draft-js/pull/1580

Differential Revision: D6586923

fbshipit-source-id: d9cbeceb7700a67b30c44f6142c35e5d2d490cda",False
bbbbd14c73b97a5ba7d90aba868c8b5ee8cb6723,2017-12-16 08:35:14,mitermayer,"Adding shims for jest

Summary:
This PR is meant to address this warnings that we get when running jest

```
   console.error node_modules/fbjs/lib/warning.js:33
      Warning: React depends on requestAnimationFrame. Make sure that you load a polyfill in older browsers. http://fb.me/react-polyfills
```

Jest is including the polyfill as part of (21.3.0), so we should be able to clean this up later
Closes https://github.com/facebook/draft-js/pull/1581

Differential Revision: D6586269

fbshipit-source-id: 7fae0ff2e1058851c9e242bb4f3911c222510c98",False
247a632ab6420e7809a8f7cf7dd2b31b495bb4c7,2017-12-16 02:20:20,mitermayer,"Pinning prettier to 1.9.1 and fixing travis segfault

Summary:
- Testing to see if we still get segfaults
Closes https://github.com/facebook/draft-js/pull/1575

Differential Revision: D6581397

fbshipit-source-id: 8c808550284ec292c9e327247e6c2f0c5ee58f2e",False
f70550c69bf6129e76cce076f28471749b64b007,2017-12-15 15:36:21,mitermayer,"Exploration - Feature tree / Adding support for removing tree nodes ranges from content state

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for removing content state**

This PR adds support for removing range transactions for ContentBlockNodes

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1547

Differential Revision: D6555163

fbshipit-source-id: 7a2197541da062dbf8cd5c6974c4ecd1140e8e01",False
327d9ed8adc56118ca27209e695908afd89ca2d0,2017-12-13 15:34:45,mitermayer,"Exploration - Feature tree / Adding support for splitting transactions

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for splitting transactions**

This PR adds support for tree block nodes splitting transactions

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1548

Differential Revision: D6554958

fbshipit-source-id: 7d8e13a4f3494c81dfead78ba57a54ec82d6c06f",False
d630b84728568d42482bc0d8a0da06dee9adfd64,2017-12-12 03:34:42,Flarnie Marchan,"Restrict 'prettier' version to unbreak CI

Summary:
**what is the change?:**
We have verified that upgrading to Prettier v1.9.0 or v1.9.1 both cause
a Segmentation Fault when running `eslint`. This happens in CI, and I
was able to verify it locally.

**why make this change?:**
We want to use Prettier in CI and not get segmentation faults.

**test plan:**
Locally I did -
`rm -rf node_modules && yarn install && yarn lint` and got no segfault.
Pushing this to github and waiting for CI to pass will further verify.

**issue:**
fixes issue #1562
Closes https://github.com/facebook/draft-js/pull/1567

Differential Revision: D6534157

fbshipit-source-id: 6c3016a7d1fc69151ee34ce73355c3163cc518b8",False
e127090a2c23ea4de3e7396fa310a3ecc8c735ce,2017-12-07 22:51:16,Garo Taft,"Revert D6508625 to unbreak push blocking tests.

Summary: This thing broke many push blocking tests.  Revert it.

Differential Revision: D6509493

fbshipit-source-id: 313f71e323fe8a5ed94f08c1f3c28ebf0bb3e458",False
161da62aa25555ce66f150ce1e7953ce00a8e83a,2017-12-07 21:50:35,Miguel Jimenez Esun,"Update Jest to 21.3.0-beta.13

Summary: This diff updates Jest to the latest version, and fixes some tests that are breaking. Notably tests overriding the `value` property of an `<input type=""file"" />`, and tests related to `<a>` URL parsing. I also removed a test that was testing a non-existing file (https://our.intern.facebook.com/intern/testinfra/testdetail/113778710).

Reviewed By: cpojer

Differential Revision: D6508625

fbshipit-source-id: 7f164d8e808c75456123fc64b80a2546ad7d8321",False
8c3dd86bd1cd7c5fc0201912404312324c150b57,2017-12-01 15:35:28,mitermayer,"Exploration - Feature tree / Adding support for text into tree nodes

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for text into tree nodes**

This PR adds support for converting pasted text into tree block nodes

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1541

Differential Revision: D6457757

fbshipit-source-id: 527e54929a3e8f4c68141fd3bd260066fed14977",False
26b6e422a94a1015c86409b8f512f0bc0dd2bf92,2017-12-01 13:49:40,mitermayer,"Exploration - Feature tree / Adding support for moving tree blocks

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for moving tree blocks**

This PR adds support for moving tree blocks via the moveBlockInContentState transaction.

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1540

Differential Revision: D6456754

fbshipit-source-id: c802b0069f11f9e6b10734f4465f19edf828522e",False
ab00a2df7477e44d79a7f4d63941bf969f0a241a,2017-12-01 05:49:39,mitermayer,"Exploration - Feature tree / Adding support for getting transaction fragments

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for getting transaction fragments**

This PR adds support for getting tree based fragments from the content state transaction

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1536

Differential Revision: D6448624

fbshipit-source-id: 17c321cc7f2eaed227de8e17e717aa2f91b3e571",False
b89f98aee4a1cfa0efcd87df21dcbbba756912ec,2017-12-01 05:49:39,mitermayer,"Exploration - Feature tree / Wiring up tree adapter on the raw

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Wiring up tree adapter on the raw**

Making sure when the darkfeature flag is enabled/disabled we can handle both data formats to guarantee some degree of migration/backwards compatibility

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1532

Differential Revision: D6448468

fbshipit-source-id: 494bb1412e2366730c23b6a5cc5521d0199939a5",False
0c80d7dc630798822f2712560d8766510b879fb6,2017-11-30 22:49:32,mitermayer,"Exploration - Feature tree / Adding support for container text nodes

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for container text nodes**

This PR will add support for handling container text nodes that precedes real block nodes.

example:

```html
<blockquote>
   some text
   <h1>header block</h1>
</blockquote>
```

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1533

Differential Revision: D6442010

fbshipit-source-id: 70e829ccebf9b503877f201f34e6b1e03593e777",False
5ca8e5cdc0a5fb402e5e2132c8b6c3f0dd762329,2017-11-30 06:50:07,mitermayer,"Bugfix - Making sure empty spaces leading prior to ul/ol are not

Summary:
**Converting HTML that had ol/ul with spaces prior to first list item would create extra unstyled blocks**

Before if we tried to convert:

```html
<ul>
   <li>a</li>
</ul>
```

we would get 2 content blocks, with a unstyled one for the UL.

note that the same without leading spaces was converting fine:

```html
<ul><li>a</li></ul>
```

**Test Plan**

Added unit tests and updated old snapshots
Closes https://github.com/facebook/draft-js/pull/1531

Differential Revision: D6439164

fbshipit-source-id: cb9837829b9db66fc2552540d9a06c136292c3fd",False
7e1749437f69d8a17ad01783ca978d011edba380,2017-11-30 05:04:57,mitermayer,"Exploration - Feature tree / Adding support for nested block selection

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding support for nested block selection**

This PR adds support for dealing with nested blocks selections and also add some tests to make sure we cover all the previous use cases when dealing with nested blocks.

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1529

Differential Revision: D6439187

fbshipit-source-id: 520e50f806eb68018c317cb40d296ca2c9c3a0bd",False
c15013cc39211996636dd6857bd98b064538d0ae,2017-11-29 22:20:27,Sophie Alpert,"Fix text node key logic in async mode

Summary: Previously if componentWillUpdate runs twice (negating its effect), then typing ""hi"", Cmd-A, ""hello"" would end you up with a mash of text instead of ""hello"". This diff changes it to only flip the flag once per commit which should be the relevant time. This way each time it renders (and sCU returns true), we do successfully recreate the DOM.

Reviewed By: flarnie

Differential Revision: D6431545

fbshipit-source-id: 9400e24bc1ffddf2946cbfea5cb6fb1d8fbe4a5c",False
f50c4ca9a5881763eb3028ecacf8fd56f430bc3f,2017-11-23 19:05:04,Miguel Jimenez Esun,"Re-format affected package.jsons

Summary: Automated re-formatting of affected `package.json` files when updating `jest`.

Reviewed By: cpojer

Differential Revision: D6404886

fbshipit-source-id: 7c977ac3ab4b48120c3e6e873f240d0699f51894",False
a9eedb388af1b8c8e373e688eeb85bb8d210f98c,2017-11-23 04:05:09,mitermayer,"Exploration - Feature tree / Adding regression tests

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Adding regression tests**

This PR adds regression tests to make sure we do not enable experimental features unless the dark feature flag is enabled

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1527

Differential Revision: D6399454

fbshipit-source-id: 60c020eaf57c73de9ee5bf7596581fb25678f009",False
cf21a6b7553faa23b2568222cd36e1a2cd668194,2017-11-22 04:19:32,mitermayer,"Exploration - Feature tree / Fixing shouldComponentUpdate lifcycle for ContentBlockNode

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Fixing component lifcycle for ContentBlockNode**

`block.getChildKeys` is not a property it is meant to be a function call
***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1525

Differential Revision: D6389650

fbshipit-source-id: d9923b2042beed997cd63f83c7beb4853496be87",False
e48c56bf3f0b7ce5235c9dc653797c273e49a3fe,2017-11-22 04:04:33,Flarnie Marchan,"Quick fix for HTML conversion regression

Summary: Some recent changes introduced this bug, this is a quick fix.

Reviewed By: mitermayer

Differential Revision: D6389556

fbshipit-source-id: 65b0b4c82a14ddfb626e3c81589fe04ba350ba04",False
ab03fdda5fb6fe3c189176979fef8c3e16eb39a5,2017-11-21 22:49:53,Mitermayer Reis,"Exploration - Feature tree / Integrating GK flag

Summary:
This PR is part of a series of PR's that will be exploring tree data block support in Draft.

Integrating GK flag

This PR adds support for the feature flag where we will use to conditionally load the DraftEditorContents-core.react.js or DraftEditorContentsExperimental.react.js.

Will import this and have the review done internally since it will require some internal wiring for it to work

Note:
This is unstable and not part of the public API and should not be used by
production systems.

Reviewed By: flarnie

Differential Revision: D6383180

fbshipit-source-id: fec9cd2962b881c74a69569654fbf7e5b2f5fb61",False
ff54f1918484346a21b938eefabb2c2d570e0e4f,2017-11-21 09:37:23,mitermayer,"Exploration - Feature tree / Wiring up paste processor

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Wiring up paste processor**

This wires up the paste processor to make sure it pass the tree flag along. We will revisit this approach on a follow up diff where we will change the flag to actually be a GK feature flag instead of function feature argument

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1523

Differential Revision: D6382429

fbshipit-source-id: 950fc0a87b7e61f83bd134a2811947a2063396a4",False
dabfc0009f896123fbd9f8851e83c94c94993862,2017-11-21 01:35:04,mitermayer,"Exploration - Feature tree / Tree adapter transformer

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Tree adapter to transformer**

This creates a raw tree data adapter to transform back and forth between raw tree and draft raw data

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1521

Differential Revision: D6375517

fbshipit-source-id: 548fddb1b56e066b7550d42971b7189ba38feda2",False
c38b028513214416d66a3fdf191745dfde04ed2b,2017-11-21 01:06:25,Gaurav Vaish,"Updated CSS for DraftEditorPlaceholder to support multiline placeholder

Summary: Updated CSS to show a line break in case the placeholder text contains a newline.

Reviewed By: sophiebits

Differential Revision: D6361301

fbshipit-source-id: 8db9baeac60321835b23cda392555e1bf03bdfd0",False
d16833b3dae77ccf13e3af7f5e42c8131b0d1d2c,2017-11-20 13:51:50,Ian Jones,"Draft.js - Stop links after pasting at end of block

Summary: Currently in Draft when you paste a linkt the link continues and you have to manually unset it.

Reviewed By: sophiebits

Differential Revision: D5273910

fbshipit-source-id: 7fcda63f542a538692d016eb49395bb27fad73c9",False
19fb3e77898232ca46c9b15ed8dd16aecfaa6a3a,2017-11-20 13:35:41,mitermayer,"Exploration - Feature tree / Convert from html tree data support

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Convert from html tree data support**

This PR adds support for converting from HTML to tree data, as a follow up we will then hook the paste processor with this too

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1518

Differential Revision: D6372235

fbshipit-source-id: fdfe81efcb81e31aa4bb61f5cfe7b21bf11317a4",False
2acb8945cee1734c0f12cad2c1a0dfa67a3789bc,2017-11-18 13:04:32,Brandon Johnson,"Mark props that have defaults as required

Summary:
Fixes facebook/draft-js#1514

**Summary**

According to the [Flow documentation](https://flow.org/en/docs/react/components/#toc-using-default-props), when using default props, the prop should be marked as required, as ""Flow will make sure that [the prop] is optional if you have a default prop for [it].""

This fixes Flow errors that would occur when using Draft.js in a project with Flow. Flow would complain that `blockRendererFn` and `blockStyleFn` could potentially be `undefined` when passed to `DraftEditorContents`, even though these two properties have default values, so they will never be undefined.

This commit also upgrades Flow to 0.59.0, since there weren't any additional Flow errors between the version of Flow that was being used (0.53.1) and the latest version of Flow (0.59.0).

**Test Plan**

 * Flow check passes
 * A sample project, such as https://github.com/bjohn465/draft-and-flow-errors, does not produce Flow errors when using Draft.js
Closes https://github.com/facebook/draft-js/pull/1520

Differential Revision: D6366083

fbshipit-source-id: 142ba22cab5d87ccbb65d6090a9634317b9e2dfa",False
a33fbcdc98832a6d12e30e1491a772c5a35aaaa9,2017-11-18 06:36:45,jackyho112,"Add ariaLabelledBy prop

Summary:
**Summary**

Fixes https://github.com/facebook/draft-js/issues/1213 for more accessibility support. Small change but let me know if I missed anything. 😄
Closes https://github.com/facebook/draft-js/pull/1519

Differential Revision: D6359438

fbshipit-source-id: 838844ce7804370d255d3a627154b5dbdde4e54b",False
33e7b5202e1813bd5b1f0c751cf694242b61ced2,2017-11-18 06:36:40,cdriscol,"Fix examples after React 16 bump

Summary:
Fixes https://github.com/facebook/draft-js/issues/1516
Closes https://github.com/facebook/draft-js/pull/1517

Differential Revision: D6364497

fbshipit-source-id: d482a2d6a8e6a141a6c6128a08eb39f4b1486c2b",False
925789a0e586baeb21c565a25af7c228bb8376fb,2017-11-17 00:05:20,Flarnie Marchan,"Add CODE_OF_CONDUCT.md

Summary:
**what is the change?:**
Adding a document linking to the Facebook Open Source Code of Conduct,
for visibility and to meet Github community standards.

**why make this change?:**
Facebook Open Source provides a Code of Conduct statement for all
projects to follow.

Draft.js already links to this Code of Conduct in the Contributing
guide, which is great!

Exposing the COC via a separate markdown file is a standard being
promoted by Github via the Community Profile in order to meet their Open
Source Guide's recommended community standards.

As you can see, adding this file will complete [Draft's Community Profile](https://github.com/facebook/draft-js/community)
checklist and increase the visibility of our COC.

**test plan:**
Viewing it on my branch -
<img width=""1321"" alt=""screen shot 2017-11-10 at 11 09 23 am"" src=""https://user-images.githubusercontent.com/1114467/32655945-c43cda22-c607-11e7-9cd2-10c0073a56b0.png"">

**issue:**
internal task t23481323
Closes https://github.com/facebook/draft-js/pull/1502

Differential Revision: D6297508

fbshipit-source-id: 27803bb3dfbf09bdf58ac2106ee90ede45fad7f9",False
aa770b5a7db4cd7db51b613615801cf33b673be4,2017-11-16 23:50:12,mitermayer,"Fixing FlowFixme errors

Summary:
This PR removes the $FlowFixMe and fixes the flow errors as well as minor things uncovered by the flow parser.
Closes https://github.com/facebook/draft-js/pull/1467

Reviewed By: flarnie

Differential Revision: D6206942

Pulled By: flarnie

fbshipit-source-id: 483d994e35f501ceb297d63f5364ba28851c2cc8",False
553161761903bed7fad971d73e1fe04bb0ff360e,2017-11-16 22:20:16,Flarnie Marchan,"Quick fix for safari 'node not found' bug

Summary:
This is a quick fix, but we will do a follow-up diff to add more precautions
and fix any other misnamed refs. Want to push this asap to fix the bug.

In a previous diff[1] we changed the syntax for getting the reference to the
editor node, but this spot was not updated.
[1]: https://our.intern.facebook.com/intern/diff/D5964582/

This introduced a bug where clicking a link caused the focus to move but the
selection state was not cleared, and this is a known issue in Safari in
particular. In the past we had a work-around in Draft, but the work-around was
no longer working due to the misnamed ref.

PS Thanks to @[578934877:sophiebits] for pairing with me and realizing the root cause of the bug. :)

Reviewed By: sophiebits

Differential Revision: D6344247

fbshipit-source-id: fb0c3f2a7264fc68319536d6c18c30a27053c0aa",False
c1150a729080d04014551d1c78292cb05da7cf1b,2017-11-16 08:19:36,mitermayer,"Exploration - Feature tree / Rendering tree data format

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Rendering tree data format**

This PR adds support for react components to render the tree data structure

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1508

Differential Revision: D6341091

fbshipit-source-id: e285bb04ca51eb55b75c6912a2f5d283a4145d2d",False
5634524ef5f2a72658e071afec6a12ac16b4af3c,2017-11-16 06:49:55,Matthew Mans,"Trigger handleBeforeInput on IME input completion

Summary: Currently, `handleBeforeInput` will not trigger on an IME input. This diff causes `handleBeforeInput` to trigger when a composition completes (Example: Adding japanese text using IME). For now, this feature is being gated behind a flag until we are sure that this is the bahaviour that we want.

Reviewed By: sophiebits

Differential Revision: D6338335

fbshipit-source-id: 86f1ea829c5f26dee426df229e38d49beff1c7a3",False
5a965e66e6f0d8521a2853fb981197854656d7f8,2017-11-15 23:51:09,Sujan Abraham,"Support React 16

Summary:
**Summary**

Support React 16 [https://github.com/facebook/draft-js/issues/1411]

- [x] Add 16.0.0 support for  in devDependencies for `react, react-dom, react-test-renderer`
- [x] Upgrade Enzyme to 3.x
- [x] Fix failing specs due to unavailable `reactComponentExpect`

**Test Plan**
 Used `npm run test-ci` to ensure all the linting, tests and flow passes
Closes https://github.com/facebook/draft-js/pull/1464

Differential Revision: D6333830

fbshipit-source-id: e63d39b48454125bb75d321f8419aff49cfce9ba",False
2da3dcb1c4c106d1b2a0f07b3d0275b8d724e777,2017-11-14 21:50:16,mitermayer,"Refactoring our test suite and introducing jest snapshots

Summary:
This PR aim on refactoring our existing tests and moving towards jest snapshot testing.

Snapshot testing will not only allow us to move faster but also reduce the barrier for contributors to be able to contribute to draft.

tldr:

- moved to jest snapshots
- refactored tests to remove duplication
- removed nested describes in favor of plain 'test' to increase readability

***

I suggest we review this internally in phabricator as it may be tricky to do that on github. Also once this is merged should be pretty easy to update tests or add some new ones.
Closes https://github.com/facebook/draft-js/pull/1490

Reviewed By: flarnie

Differential Revision: D6292507

Pulled By: flarnie

fbshipit-source-id: 915089257fad8aa5e022659f47c60d2ec5ac6c12",False
93df36d1cd2799bc4527183ebffd089c4d659af8,2017-11-14 08:05:18,mitermayer,"Exploration - Feature tree / converting from raw to tree Node

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**converting from raw tree Node**

Making sure we can handle tree nodes and build a linked draft content state

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1501

Differential Revision: D6319768

fbshipit-source-id: 566fe12aa2b8c0424d425e8c91b4560ad1dcd8e1",False
81ea8e329669913e0a8491f789ac9cafde32d0b6,2017-11-10 06:49:46,mitermayer,"Docs - Fixing typo on Advanced-Topics-Custom-Block-Render

Summary:
Fixing typo on docs
Closes https://github.com/facebook/draft-js/pull/1499

Differential Revision: D6292213

fbshipit-source-id: 2be1718524c8014ccd4bb227547cd382bd9744c4",False
f169ec43721f45969df737a7fab72b59df378082,2017-11-09 05:21:23,Addison Keizer,"Add annotation on open sourced file

Differential Revision: D6251552

fbshipit-source-id: 1f3dea29df18a91d57055ca1973ae5e5a5ebf81b",False
68ec1319476317f8e86e8cdebd853511599ba7b6,2017-11-08 11:50:19,mitermayer,"While prettier is still outdated internally we should downgrade linting to warning

Summary:
We have been getting some builds failing due to incompatible prettier versions, to avoid this we will downgrade prettier linting from error to warning. Once we have prettier internal version being bumped we will then use a `yarn.lock` to lock the prettier version on draft.js to match the internal and bump again the linting rules to `error`
Closes https://github.com/facebook/draft-js/pull/1495

Differential Revision: D6267016

fbshipit-source-id: 0328bae9e452ba0a93bd2b0fef21517d33cce024",False
13c20c7fd3008ed5856beefb0030d1af2f8141c1,2017-11-08 08:35:18,mitermayer,"Exploration - Feature tree / Serializing Draft state to tree data structure

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Serializing Draft state to tree data structure**

This PR will make sure that we can serialize existing draft state into a tree data block structure for ContentBlockNode and flat data structure for the existing ContentBlock

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1494

Differential Revision: D6267068

fbshipit-source-id: b120986d0caf49eda909a57fa21df42159508b64",False
3644e1042fbcc793ef73187c663020e12c8076be,2017-11-08 05:05:22,mitermayer,"Exploration - Feature tree / Wiring up BlockNode interface

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Wiring up BlockNode interface**

This PR will make sure that ContentBlock references are now referencing the BlockNode interface in order for us to be able to support both ContentBlock and ContentBlockNode operations

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1493

Differential Revision: D6260642

fbshipit-source-id: 09f0cb2631579cbe9e9ac6fbdc1121f1d42d6b4e",False
61a5b94dd4188e7aa84630870bf76c5c8f73d974,2017-11-08 01:50:33,Daniel Lo Nigro,"Link to Yarn package page in readme

Summary:
In the README, link to the Yarn package page rather than the npm one. The Yarn site has a nice package listing page.
Closes https://github.com/facebook/draft-js/pull/1476

Reviewed By: flarnie

Differential Revision: D6211416

Pulled By: flarnie

fbshipit-source-id: 2f645202964ad141500387bdaf7bb389447edbed",False
652afc1a073702c351ad5be107c3febdcfe9936e,2017-11-07 03:35:27,Flarnie Marchan,"Fix syntax nit for prettier in BlockType

Summary:
Just fixing a lint errors.
Closes https://github.com/facebook/draft-js/pull/1491

Differential Revision: D6246053

fbshipit-source-id: 452dc4058687fe2bc590773d1f76a3d129247352",False
1e3b4350cccb6d8e466e6ec7f359549bc21cc1da,2017-11-06 14:04:59,mitermayer,"Exploration - Feature tree / Setting up BlockNode interface

Summary:
This PR is part of a series of PR's that will be exploring **tree data block support** in Draft.

**Setting up BlockNode interface**

This PR will be laying down the foundations by creating a tree block compatible node.

In order to avoiding including conditional logic as much as possible to existing draft library while exploring we will use interfaces to guarantee that the new tree block structure is some what compatible with the existing ContentBlock

***

**Note:**
This is unstable and not part of the public API and should not be used by
production systems.
Closes https://github.com/facebook/draft-js/pull/1477

Differential Revision: D6245392

fbshipit-source-id: 1cdc9d8de09f5174f1834020a78ad013da51a9d7",False
548fd5d1b1c31b7b4c79cd70b101fae69d522b3f,2017-11-03 22:04:32,Hanzhi Zhang,"Break out of code block on enter on blank line

Summary: When a user hits an enter on blank line after a blank line, it the editor breaks out of the code block and get back to normal text

Differential Revision: D6173646

fbshipit-source-id: dd448770b39293a23c69c17fbaa55335e65c56d1",False
13da5439ee637cb8eff1c1652a87da374cca22d2,2017-11-03 12:34:44,Morgan Wigmanich,"dedupe explanation of mobile support in documentation

Summary:
Mobile support is mentioned twice in the 'Issues and Pitfalls' section of the documentation:
* first, in the section removed in the PR
* second, beginning line 114 on the same page
Closes https://github.com/facebook/draft-js/pull/1482

Differential Revision: D6229350

fbshipit-source-id: 4acbb74ccb6f9ad3269dc070e09d5c89b5df61b4",False
dbebb97279e36cd800303e665325d60e427f62c1,2017-11-03 11:35:04,Trevor Richardson,"Removed 'engineers' verbiage that was limiting.

Summary:
**Summary**
Removed verbiage specific to engineers as I don't think it added anything and could be taken as discriminatory.

**Test Plan**
n/a
Closes https://github.com/facebook/draft-js/pull/1481

Differential Revision: D6226021

fbshipit-source-id: e73920b8f8478f4c82875d5b7e577422063334f8",False
bab5c5ebfa08eb0e1ed55978fb111679183b0171,2017-11-03 01:04:59,Trevor Richardson,"Correct spelling in DraftEntityMutability docs

Summary:
**Summary**
Updated a small typo.

**Test Plan**
n/a
Closes https://github.com/facebook/draft-js/pull/1479

Reviewed By: flarnie

Differential Revision: D6212351

Pulled By: flarnie

fbshipit-source-id: 72681385e64e0602ca9919d304dd2f166ef9433f",False
3461269e0f22f07525a5acc574d40ebdbfe7cf3c,2017-11-03 01:04:56,mitermayer,"Fixing mixed up typing

Summary:
While amending diff in phabricator I got typing mixed up, this PR fixes it
Closes https://github.com/facebook/draft-js/pull/1485

Differential Revision: D6221529

fbshipit-source-id: 30087648e3ee784cedb89f2b59591c4384f52ff2",False
b0f00ffa58e9a56dd4c164b9c2b4fefbdf8b9e88,2017-11-02 11:20:12,mitermayer,"Making DraftBlockType less restrictive

Summary:
DraftBlockType needs to be less strict in order to allow user defined block types however we also want to retain a way to identify our core draft blocks.

fixes: https://github.com/facebook/draft-js/issues/1453
Closes https://github.com/facebook/draft-js/pull/1480

Differential Revision: D6215628

fbshipit-source-id: e4647bf2bafe9adb7788740ec64c1445e307e632",False
498fd8a9544fda6674ec6b79f08c6d15bbdfdcc5,2017-11-02 02:37:23,mitermayer,"Making CharacterList optional when creating ContentBlock

Summary:
Background:

Relying on the ContentBlock constructor for record creation means that the user would have to create a valid characterList matching the length of the text passed. It makes sense to simplify the API a bit by allowing the characterList to be optional.

This fixes: https://github.com/facebook/draft-js/issues/1455
Closes https://github.com/facebook/draft-js/pull/1472

Differential Revision: D6211343

fbshipit-source-id: a803e891833474b055aed57c14abb78e927ccf32",False
c832960631c7bc4b0708a2191935974818517d3d,2017-11-01 02:20:15,mitermayer,"Refactoring function binding to use arrow functions

Summary:
Run a codemod to remove function binding in favour of arrow functions
Closes https://github.com/facebook/draft-js/pull/1468

Reviewed By: flarnie

Differential Revision: D6195398

Pulled By: flarnie

fbshipit-source-id: 6c2411ee82b948f68fcf7da1047db95d4c84bffc",False
a928b8809f41d22c6718b3e7343e3918687b60c8,2017-10-31 22:50:25,mitermayer,"Removing rogue empty object

Summary:
- empty object `{}` was added via old codemod
Closes https://github.com/facebook/draft-js/pull/1466

Reviewed By: flarnie

Differential Revision: D6195403

Pulled By: flarnie

fbshipit-source-id: 28b96ccca0509c16f45597fc4489d1e6ea472060",False
70ef8802a3124714a2688f38b59c10a570ee632f,2017-10-31 22:20:20,mitermayer,"Removing double mock call

Summary:
- Removing double mock call that was added via old codemod
Closes https://github.com/facebook/draft-js/pull/1465

Reviewed By: flarnie

Differential Revision: D6195400

Pulled By: flarnie

fbshipit-source-id: 0db19d10e1adbb4d300641c08beffbbda4e9cb07",False
aca0861e6dd10e921a75aabac9ec0206ae61010a,2017-10-31 21:35:27,mitermayer,"Removing @typecheck pragma since now we use @flow

Summary:
Flow already provides the type checking that we need.

- Removing typechecks in favor or flow
Closes https://github.com/facebook/draft-js/pull/1462

Reviewed By: flarnie

Differential Revision: D6195407

Pulled By: flarnie

fbshipit-source-id: bcba4bfa2e2c5e446a347b7287916a5b06b6cf30",False
4fad2db4e97ded68af62eb9ceccc5a94039afbad,2017-10-31 20:20:07,Micha Reiser,"Document browser support in README.md

Summary:
**Summary**

Documents the browser support according to #1393
Closes https://github.com/facebook/draft-js/pull/1423

Differential Revision: D6190206

fbshipit-source-id: e646c67db67c5aa5a991fbf46db26d59b3ed16a2",False
94ba37386d3e2464d204168efab129961a6b3466,2017-10-31 10:49:35,mitermayer,"Bumping jest dependency

Summary:
Updating jest dependency

- Updating jest and its configuration
Closes https://github.com/facebook/draft-js/pull/1471

Reviewed By: flarnie

Differential Revision: D6188237

Pulled By: flarnie

fbshipit-source-id: 6a6766764fc6f37a842795df3b866e039a094a56",False
dc27624caaaede4dad9d182ff9918a5da8f83c99,2017-10-27 21:50:00,Gordon Dent,"Add list of supported types for ContentBlock for docs

Summary:
This addresses the issue raised in #1051. I've just added a list of the types towards the top of documentation for ContentBlock.
Closes https://github.com/facebook/draft-js/pull/1459

Reviewed By: mitermayer

Differential Revision: D6163067

Pulled By: mitermayer

fbshipit-source-id: 9b8cc9e6da5079b35f2d4ab3caf447048090f052",False
cd20b992d4b054d70f756c258e5e75e518995e12,2017-10-27 06:37:15,mitermayer,"Setting up prettier

Summary:
This PR enables prettier on draft.js codebase and adds a few more standard eslint rules.

- setting up prettier dependencies
- setting up format command from the `package.json` to enable `yarn run format` or `npm run format`
- setting up eslint configuration file with new rules and with prettier compatibility
- adding old examples to the formatting eslint exclusions (If we care about fixing the new linting rules for them we can do it in a new PR)

cc vjeux
Closes https://github.com/facebook/draft-js/pull/1458

Reviewed By: flarnie

Differential Revision: D6165327

Pulled By: flarnie

fbshipit-source-id: 0f4ad491be7f901e3c12baeecba7a51b73e24ef8",False
77920e777178ea0570317ea91ea8419920ddf304,2017-10-26 22:19:59,mitermayer,"This days it makes more sense to also have the ""dev"" task stated on the

Summary:
Its a common practice now for projects to have a devleopment run task, ours at the moment is living inside `gulp` adding a proxy to it on the `package.json` makes it easier to get started enabling:

`yarn run dev` or `npm run dev`
Closes https://github.com/facebook/draft-js/pull/1457

Reviewed By: flarnie

Differential Revision: D6160160

Pulled By: flarnie

fbshipit-source-id: 0a1cce273cb1d217a5d99f653d9e22dff4111b05",False
955ca09d6947242ffde2bc6702b08d97377f8deb,2017-10-26 06:05:20,Adam Thomann,"Convert string refs to callback refs

Summary:
**Summary**
Convert string refs to callback refs based on React team statements of likely future deprecation of string refs.  https://facebook.github.io/react/docs/more-about-refs.html#the-ref-string-attribute

**Test Plan**
No additional testing needed.
Closes https://github.com/facebook/draft-js/pull/614

Differential Revision: D5964582

fbshipit-source-id: 51415520344a6f50c7b6a7c5e7c168ce94fe12de",False
1ab3dca22250aa03447335848a2b9b178b2d3e40,2017-10-24 21:34:57,Flarnie Marchan,"0.10.4

Summary: Closes https://github.com/facebook/draft-js/pull/1449

Differential Revision: D6133346

fbshipit-source-id: ded420cbd4d7ce1bdb85425d6151814fc3d2f226",False
027f73d15741eeda15b76eea12c1bc0cfb56589b,2017-10-23 20:34:36,Julian Krispel-Samsel,"docs for autoComplete, autoCorrect and autoCapitalize

Summary:
**Summary**

Documentation for `autoComplete`, `autoCorrect` and `autoCapitalize`

Addresses #1036
Closes https://github.com/facebook/draft-js/pull/1269

Differential Revision: D6120015

fbshipit-source-id: 572c965ec02729bd8d7dd7060aa12230eeb67558",False
0c609d9d3671fdbbe2a290ed160a0537f846f08e,2017-10-22 00:21:09,Julian Krispel-Samsel,"Update docs - add keyBindingFn prop to list of editor props

Summary:
the `keyBindingFn` prop is missing from the list of Editor Props in the docs, here it is
Closes https://github.com/facebook/draft-js/pull/1249

Differential Revision: D6111817

fbshipit-source-id: f9c059688951a9bbfc3a0d5519a228f197898524",False
d7462373f25ef5fecc64169c6c896193b3747025,2017-10-18 23:34:40,Flarnie Marchan,"Expose path to Draft.css for usage by CSS pre-processors

Summary:
**what is the change?:**
CREDIT TO darobin for this change, originally made in
https://github.com/facebook/draft-js/pull/566

 ---

Some CSS pre-processors understand node_modules and are able to import without requiring an absolute path. However, without assistance from the module all that they can resolve is its root directory. This leads to import statements like the following:

```
import ""draft-js/dist/Draft.css"";
```

While this works, it requires internal knowledge of the package's layout. This requires digging around and if the layout changes, this breaks.

These pre-processors also recognise a style field in package.json, which is the equivalent of main for CSS. This allows one to import thusly:

```
import ""draft-js"";
```

It's a small change, but it helps!
Closes https://github.com/facebook/draft-js/pull/1442

Differential Revision: D6088534

fbshipit-source-id: fcede534a18620907adfb6a30391b9f722756e8c",False
221b6dc1588eb2c4fa20558ae14cbe61bb570c14,2017-10-17 06:35:35,Justin Vaillancourt,"Fix rich text utils backspace not clearing the block type at the start.

Summary:
**Summary**

When backspacing at the start of the first block using rich text utils, the block type should be cleared.

Example of me frantically trying to clear the first block type **without** this PR by pressing backspace at the beginning of the document:

![clear-first-block-type](https://cloud.githubusercontent.com/assets/424704/19821170/d3296d9a-9d11-11e6-990d-e2277bbfb833.gif)

Followed by an example of me clearing the first block type **with** this PR:

![clear-first-block-type-working](https://cloud.githubusercontent.com/assets/424704/19821197/01b4826c-9d12-11e6-853b-32417ec93f10.gif)

**Test Plan**
- Pull master.
- Open the rich text example.
- Create a list.
- Put your cursor at the first offset of the first block, backspace to reset the block type, notice that it doesn't work.
- Pull this branch.
- Open the rich text example.
- Create a list.
- Put your cursor at the first offset of the first block, backspace to reset the block type, rejoice in joy as the list item disappears.
- Celebrate. 🎉
Closes https://github.com/facebook/draft-js/pull/748

Differential Revision: D6065808

fbshipit-source-id: d4b9028e255be1bdf405cf228cfd16c877872c95",False
a8e87eacf813c3aaa882776e68c2493ee2c0dce7,2017-10-16 20:35:23,Karan Thakkar,"Attempt to fix same charcter selection and replacing bug.

Summary:
_Before_ submitting a pull request, please make sure the following is done...
1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
   - The test suite passes (`npm test`)
   - Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
   - You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

**Summary**

Fixes #398

**Test Plan**

[...]
Closes https://github.com/facebook/draft-js/pull/719

Differential Revision: D6060888

fbshipit-source-id: c56fad0850a469f8f2dbb06bebad78a67750e47a",False
469e8cf6dd7ff0cdb2e5adc73f88069eb88657e1,2017-10-16 05:34:33,Steven Luscher,"Revert D6056162: [draft] Highlight invalid text in red

Summary:
This reverts commit r3371761

bypass-lint

Differential Revision: D6056162

fbshipit-source-id: 7d0c49ee5c110c08f751a23e88417dc6c0e5a058",False
660a8b435c43f666f4cca60d6fa5eb8da1c47e09,2017-10-15 04:19:31,David Himmelstrup,"Change 'lookUpwardForInlineStyle' from O(n^2) to O(n).

Summary:
**Summary**

The function 'lookUpwardForInlineStyle' repeatedly called 'getPreviousBlock' which has the complexity O(n). This tanks performance when creating a document with lots of empty lines. Simply holding down the enter key will quickly cause the frame rate to drop below 1fps.

The fix is straightforward and, in my opinion, preferable to a while loop.

**Test Plan**

I did some manual testing. The code was able to correctly (and efficiently) find the correct style.
Closes https://github.com/facebook/draft-js/pull/1429

Differential Revision: D6060417

fbshipit-source-id: 8a14af25f776ac5263747e2fc4bbb665884ad970",False
9a4aa9aa9f5c0bbec981395fe0d9f96fccf7c2d5,2017-10-14 23:05:44,Hayden Bleasel,"Support React 16

Summary:
PR for #1411
Closes https://github.com/facebook/draft-js/pull/1422

Differential Revision: D6054952

fbshipit-source-id: 0fce5e1df124bfa12531d78b2a2f30b20ba4abe5",False
ec021e17d598b3fab5a6b80ecf8ede2afec2537b,2017-10-14 04:50:33,Sophie Alpert,"Highlight invalid text in red

Summary:
Draft is unhappy when text manages to get added outside of the DraftEditorTextNode span. I'd like to highlight that text in red to make it more noticeable so that people might notice what editing patterns trigger it.

I would have liked to do this universally for all Draft inputs (if a certain flag is turned on), but CSS doesn't make this possible: there's no way to style just the text content in a node without styling children, and there's no way to inherit a property from the grandparent element ignoring the parent's styles.

So instead you have to do this manually per editor callsite so that you actually know the correct text color. Those rules will look like:

```
.public/myEditor/root .public/DraftEditor/highlightInvalidText .public/DraftEditor/leaf {
  /* Draft.js errors are shown in red text when in a GK */
  background: red;
  color: white;
}

.public/myEditor/root .public/DraftEditor/leaf .public/DraftEditor/textNode {
  background: white;
  color: black;  /* <-- actual text color */
}
```

Reviewed By: flarnie

Differential Revision: D6056162

fbshipit-source-id: e7f0dfc058535f5666221e4f51ff3d01336e4c0a",False
808514109c121befc2788bacc7a158fe95630e6f,2017-10-10 05:49:36,Matt Krick,"Support React v16 when editor is focused after removed from DOM

Summary:
**Summary**
- calling `Style.getScrollParent(editorNode)` with `null` will result in an uncaught error
- `Ref#focus()` is often called within a `setTimeout` (even in some example IIRC). `Ref` doesn't get GCd, but the DOM node it points to may no longer exist. Since React v16 is so blazing fast, it's possible that we're trying to focus something that no longer exists.
- Without this bit of code, we'd have to call `findDOMNode` on the ref before calling `focus`. That's not great since putting `findDOMNode` is discouraged in application code.
Closes https://github.com/facebook/draft-js/pull/1409

Differential Revision: D5976879

fbshipit-source-id: f8f63525fdb6e76a111ea72edae1a620505f3e93",False
05881dccd683602f553283be8edab07b29bd706b,2017-10-05 07:10:17,Flarnie Marchan,"Update weekly meeting notes from Sept.

Summary:
This doesn't really need a review.
Closes https://github.com/facebook/draft-js/pull/1420

Differential Revision: D5978948

fbshipit-source-id: 9d21960ea6fd28c2216e76c03530de21fcfbb15c",False
c9aaa547e2a6a7efaa82c634218883eecb018c38,2017-10-04 22:05:13,Tommy,"Fix when anchorNode is undefined instead of null

Summary:
Fixes #1399

`nativeSelection.anchorNode` can be undefined instead of null, so I'm changing the condition to handle this use case.
Closes https://github.com/facebook/draft-js/pull/1407

Differential Revision: D5974852

fbshipit-source-id: bb24ba0e3bf041530bdbea555f26e61d2b33022f",False
3e00f4aa34d91b6e48ffd67acf141f3fc92d31df,2017-10-03 20:50:22,Flarnie Marchan,"Move Enzyme to devDependencies

Summary:
**what is the change?:**
see title

**why make this change?:**
This was mistakenly added to regular dependencies, when we only use it
for testing.

**test plan:**
`rm -rf node_modules && yarn install && yarn build && yarn test`

**issue:**
None open yet, but thanks for JLarky whose comment on
https://github.com/facebook/draft-js/pull/1385#issuecomment-332989959
prompted this.
Closes https://github.com/facebook/draft-js/pull/1415

Differential Revision: D5961436

fbshipit-source-id: bb9c22bf9f29a7cfaea70d2b869b2fb17f31db8c",False
b5d445ec47dba2131f0613549d17e55d85542e64,2017-10-03 05:05:33,Flarnie Marchan,"Minor ssr clean up

Summary:
Removed an inaccurate pragma and some outdated copy in the README of this example.
Closes https://github.com/facebook/draft-js/pull/1404

Differential Revision: D5956995

fbshipit-source-id: 497bf70a3f64495095a108232c11d33dd2422059",False
8ee0449da8f38aeb24b149aef5b397a12a4cb42a,2017-10-02 23:50:00,Eve Essex,"Right and Left Arrow Event Handling

Summary:
Exposes right and left keyboard events, as suggested in [this issue](https://github.com/facebook/draft-js/issues/219) by hellendag.

This will greatly simplify some of our arrow handling at [Artsy](https://github.com/artsy/positron/blob/master/client/apps/edit/components/content2/sections/text/index.coffee#L121).

The test suite is passing locally.
Closes https://github.com/facebook/draft-js/pull/1384

Differential Revision: D5954003

fbshipit-source-id: 90c3a7d6bb5070c455f56d60ccd64c5ad136fe59",False
12ff6e3acbb5ab79c6c02879572fa83c999db231,2017-09-30 01:19:45,Matt Krick,"Fix #1326 Safari can't focus with draggable parent

Summary:
**Summary**

DraftEditors that lived inside draggable parents were useless in Safari. Now they work.
Solution found here: https://github.com/react-dnd/react-dnd/issues/178#issuecomment-192021227

**Test Plan**

Use the fiddle in #1326 with the updated version.
For a quick n dirty, just add this to the stylesheet:
`div[contenteditable=""true""] { user-select: text;}`
Closes https://github.com/facebook/draft-js/pull/1356

Differential Revision: D5901625

fbshipit-source-id: 7d3797286e4040575b9b5503c776bff1e29b67a9",False
a29819dd3adb34e4bbd9fa087719cfbee37e0096,2017-09-29 03:20:15,Flarnie Marchan,"0.10.3

Summary:
React 16 is out! Lets gogogo~

![go_time](https://user-images.githubusercontent.com/1114467/30974583-d4a32d3a-a424-11e7-9ef0-76d0dd5efde8.jpg)
Closes https://github.com/facebook/draft-js/pull/1414

Differential Revision: D5932258

fbshipit-source-id: 3fdfe19f65e7f970c9cf89b495e08671b48de4f5",False
baa536e99917c1b47eb57d37d4089a5dd92803cc,2017-09-25 20:35:01,Nik Graf,"allow for React 16 as peerDependency

Summary:
**Summary**

As Sophie suggested adding React 16 RC helps to avoid peerDep warnings. see https://twitter.com/sophiebits/status/906661088472813568
Closes https://github.com/facebook/draft-js/pull/1385

Differential Revision: D5898819

fbshipit-source-id: 56dc61046d9fc5af1074af8eda7c45b57923573d",False
f1997e727bf9fdbb63d0b890bb34e5755388f972,2017-09-23 22:19:29,Flarnie Marchan,"Fix require statements in new JS test

Summary:
Internally we have different paths to get at Draft modules. Going to open some
issues to follow up on Github so that we don't run into this again.

Reviewed By: ericvicenti

Differential Revision: D5893809

fbshipit-source-id: 2725251fa7ca380f2065cfbcd640a4af0464ac4f",False
8f0769c3f9a42e92e2589a3850c9491c66f08ad9,2017-09-23 02:38:37,Flarnie Marchan,"Force update of `fbjs` to get fix for #14, #1381

Summary:
**what is the change?:**
Pin the `fbjs` dependency version to 0.8.15 or later.

**why make this change?:**
We need to get everyone updated to use the fixed version, to avoid a
scroll issue in Chrome 61+
See https://github.com/facebook/fbjs/pull/229

**test plan:**
Didn't test because we already are using this fix internally at FB.

**issue:**
fixes #1381
Closes https://github.com/facebook/draft-js/pull/1401

Differential Revision: D5892624

fbshipit-source-id: 6839e647b6ba0fb99d6ec118748cdeac808cbcdb",False
3da87b518fa090da1c30b866914fe06586bb97a2,2017-09-22 20:04:35,LiShunyang,"Add default value for blockRenderMap

Summary:
**Summary**

PR for issue 1211
https://github.com/facebook/draft-js/issues/1211

**Test Plan**

<s>no need</s>
**Edit by Flarnie:** added unit test
Closes https://github.com/facebook/draft-js/pull/1302

Reviewed By: zpao

Differential Revision: D5881334

Pulled By: zpao

fbshipit-source-id: b8d57b23a1654fe9cdcf84b74b25617413ef6248",False
5fa2554ea58dd102add3ccc2a83d636eccb18b91,2017-09-21 00:19:38,jackyho112,"Remove duplicate block map set expression in insertFragmentIntoContentState

Summary:
**Summary**

For https://github.com/facebook/draft-js/issues/1339. I got some time and this issue has not been dealt with for a while, so I figure I made a PR.

`blockMap.set` is called twice in `insertFragmentIntoContentState.js` with the same params. This PR removes the duplicate.

**Test Plan**

Make sure all the tests for `insertFragmentIntoContentState.js` pass.

flarnie
Let me know if there is any improvement needed! 😄
Closes https://github.com/facebook/draft-js/pull/1366

Differential Revision: D5871961

fbshipit-source-id: 677cf7cdb766b6a0835a6cddfab45657837dfc61",False
ab24d6b097dd8683862e523e2fc768aaeb7ee53b,2017-09-18 16:05:37,Flarnie Marchan,"0.10.2

Summary:
✨🛫✈️
I completed the manual test plan, and feel pretty confident in this release since it's been in sync with FB for weeks. :)
Closes https://github.com/facebook/draft-js/pull/1390

Differential Revision: D5851723

fbshipit-source-id: 5ea76a56f8405ea5566ba6303a83d409c7c4dde4",False
52095d6f6c703d7a007834148e5919dec5cb04b1,2017-09-18 07:35:09,Flarnie Marchan,"Update changelog for 0.10.2

Summary:
My last attempt at doing the 0.10.2 release was delayed due to finding a bug which we fixed and CI failing on Github.

Let's try again. The Changelog as mostly reviewed already in https://github.com/facebook/draft-js/pull/1376 by sophiebits so I will probably just merge this once I verify it has no typos.
Closes https://github.com/facebook/draft-js/pull/1388

Differential Revision: D5851528

fbshipit-source-id: 991c66d55a1b2ed9d95dccc336ece0364dd7d1b6",False
19b9b1c5007bcb3a4111ea31f8d9a8cda629a1ff,2017-09-15 07:05:49,Sophie Alpert,"Remove draft_accept_selection_after_refocus flag

Summary: Don't need this any more. Chrome 60 is out.

Reviewed By: zpao

Differential Revision: D5674557

fbshipit-source-id: 878f620f6e91aa1271d13ffa644cd47540b21e76",False
2cc61e1f8b99a1ccd1b0c9a1e82f1f99ac8e916c,2017-09-14 10:05:12,Flarnie Marchan,"Update weekly meeting notes

Summary:
Adding notes from the past two meetings. Doesn't really need reviewed.
Closes https://github.com/facebook/draft-js/pull/1372

Differential Revision: D5828179

fbshipit-source-id: 65f9fa4fd82e278202fa37afd8693bd73bfa48e7",False
d9225a29220239c431c632c6545b80f6c0901b72,2017-09-12 22:50:04,António Afonso,"Add EditorState Race Conditions documentation

Summary:
**Summary**
This new documentation page is under ""Advanced Topics"" and between ""Text Direction"" and ""Issues and Pitfalls"".
It documents the ways to have race conditions based on consecutive EditorState updates and best practices to avoid this issue.
This was motivated by issue #318.

It also updates the CSS to make all images' width to 650px which is the width of the right column content, hope that's fine. (this version of markdown (Marked) doesn't allow to set the image width).

**Test Plan**
Go to /docs/advanced-topics-editorstate-race-conditions.html and check the page loads.

Screenshot:
![localhost-8080-docs-advanced-topics-editorstate-race-conditions html](https://user-images.githubusercontent.com/78122/30224834-1b445976-9485-11e7-9387-d74c55f00621.png)
Closes https://github.com/facebook/draft-js/pull/1371

Differential Revision: D5814889

fbshipit-source-id: 4faee30e456f335d07e2fcc98169c242e6228a29",False
1ea57ab0b1a7e70f8f6211f96958e3bb74f2663a,2017-09-12 06:19:49,António Afonso,"Update callbacks reference to include the EditorState

Summary:
**Summary**
These 4 `Editor`'s properties: `handleReturn`, `handleKeyCommand`, `handleBeforeInput` and `handlePastedText` now also pass the latest editor state.

This is a follow up on #1371.

**Test Plan**
Go to `/docs/api-reference-editor.html#cancelable-handlers-optional` and check the method's signatures include the editorState.
Screenshot:
<img width=""677"" alt=""screen shot 2017-09-08 at 11 07 23 am"" src=""https://user-images.githubusercontent.com/78122/30225168-55aab596-9486-11e7-82e6-ee3d6ce9c79d.png"">
Closes https://github.com/facebook/draft-js/pull/1374

Reviewed By: sophiebits

Differential Revision: D5804964

Pulled By: sophiebits

fbshipit-source-id: 29a03e8b0e0af419eebbf11a01bfa7145407311c",False
95f7f9b4c874535db4b21105a5ae2b085b27231b,2017-09-12 02:49:56,Flarnie Marchan,"Make default text content of img blocks a little camera emoji

Summary:
**what is the change?:**
We don't allow pasting whitespace-only blocks - see https://github.com/facebook/draft-js/issues/231

In the past we set the 'src' as the text content of an 'img' block when
pasting/converting HTML, but sometimes the 'src' is really long and can
even crash the editor. Plus that's not really what users expect when
they paste an image.

An empty string as a default would be better but the code in
`convertFromHTML` needs refactored and for now I don't want to touch it.
The camera emoji is a cute and easy fix.

**why make this change?:**
Right now images are being dropped by `convertFromHTML

**test plan:**
Manual testing with examples/draft-0-10-0/convertFromHTML/convert.html

We should do a follow-up change to add a test that catches this.

**issue:**
https://github.com/facebook/draft-js/issues/1377

*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

[...]

**Test Plan**

[...]
Closes https://github.com/facebook/draft-js/pull/1378

Differential Revision: D5804382

fbshipit-source-id: f465a1a92155b02c5650acb9622e27e4e3714492",False
d49eb13fbe8d6fde6406736e9c2162864234b80c,2017-09-11 20:49:34,Sophie Alpert,"Improve Firefox logging a little more

Summary:
As title. `message` was an empty string but stringifying an NS_ERROR_FAILURE gives a result more like

```
[Exception... ""Failure"" nsresult: ""0x80004005 (NS_ERROR_FAILURE)"" location: ""JS frame :: wuxoyuzore.js :: <TOP_LEVEL> :: line 23"" data: no]
```

Reviewed By: flarnie

Differential Revision: D5802539

fbshipit-source-id: 197c08cc37ab9e1f873ddc734a00231570d1cbd0",False
3754b9be461081660089c852eea660c103943ac5,2017-09-11 20:21:23,Flarnie Marchan,"Add hook in travis to notify FB people when they break CI

Summary:
**what is the change?:**
Add a hook similar to https://github.com/facebook/relay/commit/a1eff1a49aa511426c09c481e942256c751c9281

**why make this change?:**
We want people who sync commits out from FB to be notified (and maybe
stopped?) if their change breaks CI on Github.

**test plan:**
Do it live

**issue:**
Follow up of https://github.com/facebook/draft-js/issues/1364
Closes https://github.com/facebook/draft-js/pull/1373

Differential Revision: D5802523

fbshipit-source-id: 795c29d865c6f0b36a89bb099c7092c9a96d56fd",False
82823124c665dba4d65f8c48356740aa8307dae6,2017-09-10 05:05:11,Sophie Alpert,"Add more logging for Firefox bug

Summary:
This will output something more like:

```
{
  ""anonymizedDom"": ""<div class=\""notranslate -cx-PUBLIC-DraftEditor__content\"" contenteditable=\""true\"" role=\""textbox\"" spellcheck=\""true\"" style=\""outline: none; white-space: pre-wrap; word-wrap: break-word;\"" data-labels=\""active element\""><div data-contents=\""true\""><div class=\""\"" data-block=\""true\"" data-editor=\""a8a8m\"" data-offset-key=\""c4805-0-0\""><div data-offset-key=\""c4805-0-0\"" class=\""-cx-PUBLIC-DraftStyleDefault__block -cx-PUBLIC-DraftStyleDefault__ltr\""><span data-offset-key=\""c4805-0-0\""><span data-text=\""true\"">[text 722 | selection anchor node, selection focus node]</span></span></div></div></div></div>"",
  ""extraParams"": ""{\n  \""activeElementName\"": \""DIV\"",\n  \""selectionRangeCount\"": 1,\n  \""selectionAnchorNodeName\"": \""#text\"",\n  \""selectionAnchorOffset\"": 0,\n  \""selectionFocusNodeName\"": \""#text\"",\n  \""selectionFocusOffset\"": 0,\n  \""message\"": null,\n  \""offset\"": 0\n}"",
  ""selectionState"": ""{\n  \""anchorKey\"": \""c4805\"",\n  \""anchorOffset\"": 0,\n  \""focusKey\"": \""c4805\"",\n  \""focusOffset\"": 0,\n  \""isBackward\"": false,\n  \""hasFocus\"": true\n}""
}
```

Note the `data-labels=""active element""` and the `| selection anchor node, selection focus node` in the anonymized DOM, and all the extra properties in extraParams.

This should help us debug getting `NS_ERROR_FAILURE` in Firefox when calling selection.extend().

Reviewed By: flarnie

Differential Revision: D5801650

fbshipit-source-id: f270b4507ee0110ea59211ff05528dbeeda878a3",False
5dc8debe0b9bd0971c55fa82d038c52b6947636d,2017-09-10 05:05:11,António Afonso,"Fix website's rich text editor example

Summary:
**Summary**
PR #1346 broke the example as it didn't update all the code needed for handleKeyCommand to correctly pass the editorState.

This change mirrors the same change applied to rich.html.

**Test Plan**
Go to the website's main page `/index.html`, write text on the editor and try to delete it, it should work as expected.
Closes https://github.com/facebook/draft-js/pull/1375

Differential Revision: D5800218

fbshipit-source-id: 3b24afcda75ead7c2854cd1236a3fba956c34768",False
163f8bc35a8a0bf702f118b2a1c1f7d4c109adac,2017-09-10 04:51:01,jackyho112,"Fix video component style issues in media example

Summary:
Fix two style issues on the `video` component in the media example on Firefox and maybe Safari(I could not reproduce it there) by setting its `white-space` css property to 'initial' from 'pre-wrap' inherited from the `.public-DraftEditor-content` div's inline styles.

For more information on the style issues, see https://github.com/facebook/draft-js/issues/1310.

Open `media.html` in the `media` folder in Safari and Firefox and check if the above-mentioned issues still appear.

Let me know if there is anything else I can improve on this PR. Thanks!
Closes https://github.com/facebook/draft-js/pull/1317

Differential Revision: D5751265

fbshipit-source-id: b5d690f94109d1e9e4721996e8b6b324f9735d4b",False
685e4cdf7f105dccd62469a4a9088740ad0131a7,2017-09-09 00:34:58,Sophie Alpert,"Fix comment in DraftEditor::focus

Reviewed By: zpao

Differential Revision: D5759850

fbshipit-source-id: 7928831b715b6b1de8a11d2f8ffb2df04c23f3ec",False
fefe40ab4d754b13650b36ba7addb2275a4c5513,2017-09-08 21:34:57,António Afonso,"Update handleKeyCommand examples and docs

Summary:
**Summary**
handleKeyCommand receives a second parameter with the latest instance of the editor state. When this function needs the editor state it should use this instance instead of any other reference.

This update reflects a change made to handleKeyCommand to also receive the editor state. Since it can be potentially changed by Draft during key handling any previous references might be of an old version of the state.

**Test Plan**
Loaded `examples/draft-0-10-0/{media/media.html, rich/rich.html, tex/}` in the browser and verified the text input worked as expected and in particular that we could delete deadkeys like `.
Closes https://github.com/facebook/draft-js/pull/1346

Differential Revision: D5751246

fbshipit-source-id: 63ac45facd21c0c87de983ebfbcf109ae0e486c9",False
eeb71f99c2d687b2094c7f43cc5989e8942e28dd,2017-09-08 04:55:52,Flarnie Marchan,"Update flow and eslint-plugin-react, fix lints

Summary:
**what is the change?:**
CI was failing because our version of flow was out of date, and changes
pulled from within FB had added lints and inconsistencies.

**why make this change?:**
To get CI passing so it will provide signal for PRs.

**test plan:**
`yarn test && yarn lint && flow src`

**issue:**
None, but flagged in PR https://github.com/facebook/draft-js/pull/1346
Closes https://github.com/facebook/draft-js/pull/1349

Differential Revision: D5746215

fbshipit-source-id: c6536f78cfd5bbc6d941312882dec967e693512e",False
e8d101121fb9dd9203a46d899124a7be4b0b2936,2017-09-08 04:55:50,alex bumbu,"Preserve block style when pasting plain text

Summary:
Preserve block style when pasting plain text. That would allow pasting into code blocks and lists and applying respective styles to new blocks.
That should work for any type of block: code, list, quote, heading...

Probably related github issues:

  - https://github.com/facebook/draft-js/issues/1276
  - https://github.com/facebook/draft-js/issues/1219

Reviewed By: sophiebits

Differential Revision: D5786405

fbshipit-source-id: 3c6d074b0c3fe200761164ec6c5ccf1a82df5072",False
81b1884311c27b801dddab12499e7e04df7137d7,2017-09-08 02:08:28,Flarnie Marchan,"Fix ship-it

We made an internal commit at FB to rename some files, but it should not
be mirrored out to the repository here. We need to set up a shim commit
here pointing to the diff revision # and ship-it id etc. so that ship-it
knows what to sync against.

Reviewed By: poshannessy

Differential Revision: D5754963

fbshipit-source-id: b726504c86f1f815518f65178afd4fa5d40f4f8b",False
4201e530e01eb618777f031ba7083a6b86327529,2017-09-02 06:04:28,Ziqi Xiong,"Revert changes to ContentState and EditorState from D5674355

Reviewed By: sophiebits

Differential Revision: D5759184

fbshipit-source-id: a8f169c5b86b2715a83e8feb247d0278c3edb25b",False
2f3bcbb9a2103603a4b218e42153c4f39c62c3dc,2017-09-02 03:04:39,Ziqi Xiong,"Add caption field to profile frame composer

Summary: This diff allows users to add a caption to their framed profile picture. The caption param is already supporting emojis.

Reviewed By: mitchfuku

Differential Revision: D5674355

fbshipit-source-id: 087ca58e7381cacc596705c1b1b653a15e24a1ca",False
0b22d713d556ccc4820850099ad6231493b3f7aa,2017-09-02 00:20:22,António Afonso,"Stop setting the url src as the textContent of the img

Summary:
WARNING: This diff introduces a **BREAKING change** from current Draft: when you paste an image it will no longer render the url of the image (it renders nothing).

= Main Issue =
This diff addresses the issue raised on https://github.com/facebook/draft-js/issues/1101

tl;dr of this issue is that by setting the url src as the textContent it creates a significant delay in parsing data: urls since they can easily be ~60KB. This happens because the content of the img will be parsed by draft and for each character there will be an entity reference and entity style entry.

= Solutions =
In the comments of the issue 2 solutions were proposed:
1) Ignore data: urls from being parsed from HTML.
2) Stop setting the textContent of the img node when parsing HTML.

In this diff I'm going with solution **2)** becase as flarnie points out in her comment, support to parse img tags was added with the decorator usecase in mind (and ignoring data: urls would make a decorator not render in this case), also, as an example, quip doesn't render anything when an image is pasted so we think this behaviour is reasonable.

The main downside of this approach is the introduction of a breaking change in the framework, but I think it's acceptable and I'm not expecting any big issue because of this (please correct me if I'm wrong).

= Implementation =
Ideally I wouldn't set anything on textContent but I'm forced too because otherwise Draft won't create an entity for it. Entity creation is only done if the current node being parsed has children, otherwise skipped: diffusion/E/browse/tfb/trunk/www/html/shared/draft-js/model/encoding/convertFromHTMLToContentBlocks.js;3261725$483.
My current solution is to set it to a single space, looks a bit clowny though.

Is the children restriction something we might want to change? The only use case I can see though is when we want to create entities just for decorators to act upon (which is this case).

= A Tale of Two URI implementations =
While fixing and testing I noticed that on our internal version of Draft it crashes when you try to paste a data url.
I looked into it and found that internally we have a version of URI that has plenty of checks: diffusion/E/browse/tfb/trunk/www/html/shared/core/URIBase.js;3262904$242 and it fails because `data:` is not an allowed protocol: diffusion/E/browse/tfb/trunk/www/html/shared/core/URISchemes.js;3263158$11. While on our public version we have a shim based implementation: https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/__forks__/URI.js.

I'm not expecting pasting data urls to be a common behaviour so not a big deal but we do use URI to check other src attributes in HTML. I recommend to add 'data' to the list of supported protocols. Any reason not to?

Is there any chance we could open source our version of URI? It's tricky testing Draft if we have two different implementations for this.

= Breaking Change =
Any advice on how to deal with this?
The CRMComposer tests explicitly tested the URL rendering, adding tylercraft to the diff to make sure this is fine.

Reviewed By: flarnie

Differential Revision: D5733880

fbshipit-source-id: 2825a083d261b55e469fd73d23257778a13d609e",False
0a895226c417dac43c41950be6129e667cab2755,2017-08-17 16:05:20,Caleb Meredith,"Re-enable Flow at v0.53.0 and add suppression comments

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

Differential Revision: D5648778

fbshipit-source-id: 761a88c93407823e30c8cb163cd308027ae0ede8",False
131a4a7a99b3fa9d62ad7e1dba1fe94648d44563,2017-08-17 13:49:54,Caleb Meredith,"Flow v0.53.0 Codemod #10

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: a53fe60193b4059d73249199877cf5b8afc61aa4",False
897f7272219977ddee80fb068428fdb153540e9f,2017-08-17 13:49:52,Caleb Meredith,"Flow v0.53.0 Codemod #9

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: 66be84ebf50021cffa01f525f8cfb55ea3caf175",False
e1d3f7657f053fedf3d29346d3a4de81399b068b,2017-08-17 13:34:57,Caleb Meredith,"Flow v0.53.0 Codemod #8

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: ce6ef0603e85b0bf373e64b77b9c95e55ceaf88c",False
4a89df4eca5749823bd2942906a5f988a8d51c32,2017-08-17 13:34:55,Caleb Meredith,"Flow v0.53.0 Codemod #7

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: e22a0038b5bf3a64bb3382fdef757c241cc4c39a",False
9d40ffb60dbdac56d5cbadf2e2c1d198dc764dfd,2017-08-17 13:34:53,Caleb Meredith,"Flow v0.53.0 Codemod #6

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: b7e824f7fd36a51d790d21a62717a666b1e2dd2a",False
1c99ad7cab7f9a69239ddffc03f64a90921dbc23,2017-08-17 13:20:03,Caleb Meredith,"Flow v0.53 Codemod #5

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: d9b032d51619f9827e819d08198ce6a2aeae0fc5",False
5e74b822f92a6c0851564f616a7a1f9585c09dd4,2017-08-17 13:20:03,Caleb Meredith,"Flow v0.53.0 Codemod #4

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: c2bd6183ed95176f1331b2d834c607cb276f1255",False
6d584d4a7bb047a7719e2fe7077976935e26065e,2017-08-17 13:04:59,Caleb Meredith,"Flow v0.53.0 Codemod #3

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: a37b2d6dbd09b90a1407f732001abb7aef21de79",False
a8560841a6acf047d130cb649732bcc81ee73d2b,2017-08-17 13:04:59,Caleb Meredith,"Flow v0.53 Codemod #2

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: e1204d44d8feec0c26d16a33bdfbdcb20497f6e9",False
8ab82e7cef396128864bda3d78924ae162692c96,2017-08-17 13:04:59,Caleb Meredith,"Flow v0.53 Codemod #1

Summary:
bypass-lint
ignore-conflict-markers
ignore-signed-source
ignore-nocommit

Reviewed By: avikchaudhuri

fbshipit-source-id: 7aec3d925c8b0c4d9b45c372d99ab67179ad2ece",False
00f2cbd1ac51e98c29917bd70a1038f8d7ee4bdc,2017-08-14 00:05:27,Flarnie Marchan,"Add weekly meeting notes from Aug. 4, Aug. 11th

Summary:
just updating meeting docs, doesn't really need review.
Closes https://github.com/facebook/draft-js/pull/1335

Differential Revision: D5619881

fbshipit-source-id: 7508687bcc69a8a5e9c4c6aea5d87ce276083f70",False
96688e10b22a778c76e03009da4b9f3d05eba5f7,2017-08-12 03:21:23,Ben Alpert,"Cautious range removal on blur without feature flag

Summary: Fixes https://github.com/facebook/draft-js/issues/1188. Closes https://github.com/facebook/draft-js/pull/1190.

Reviewed By: flarnie

Differential Revision: D5614905

fbshipit-source-id: 5d18d96e279b360cfa47b9156fc85e93424d33b5",False
e1d36af11eadc5cf4ebb900a98b81fb2aaabc246,2017-08-11 04:20:39,Dave Alongi,"jest.resetModuleRegistry -> jest.resetModules

Summary:
jest.resetModules() and jest.resetModuleRegistry are identical: https://github.com/facebook/jest/blob/a5a8a1304b0e71f40eabf5036dfe9455078dbe7c/packages/jest-runtime/src/index.js#L755

However, only jest.resetModules is documented and defined in flow-typed definition file for jest. Codemod the others away so we don't have to remember to add this manually to our jest typedef file everytime we sync it

This is mostly:

```
codemod -d html/js/ ""jest.resetModuleRegistry"" ""jest.resetModules""
codemod -d html/intern/js ""jest.resetModuleRegistry"" ""jest.resetModules""
codemod -d scripts/ ""jest.resetModuleRegistry"" ""jest.resetModules""
```

Then used tbgs to find any remaining and fix them by hand. (E.g. places doing jest.<something else>.resetModuleRegistry)

Also updated the jest typedef file to no longer include this function

bypass-lint
^ Annoying emails header lint rule.

Reviewed By: aaronabramov

Differential Revision: D5604961

fbshipit-source-id: 37bc1299dad9be19e672ad7df4a74ecabb75dc52",False
9a55eef67c7c819ecea377a4c95ca8b1bf0e5b56,2017-08-10 04:19:50,Flarnie Marchan,"Remove webkit check on 'clearRanges' hack

Summary:
The issue where a range is not cleared was showing up across all browsers, so
we removed the 'webkit' check and clarified the comment.

Related to https://github.com/facebook/draft-js/pull/1190

Reviewed By: spicyj

Differential Revision: D5580833

fbshipit-source-id: 3949d036654597c77adb6247310f3c6b8d364702",False
036e3a848e3593c97f4c3011e1ddc045e128a7af,2017-08-08 05:19:31,Ben Alpert,"More caution when removing all ranges in blur handler

Summary:
Now we only do it if the current selection is still in the wrong element..

Should mitigate https://github.com/facebook/draft-js/pull/1190.

Reviewed By: flarnie

Differential Revision: D5570526

fbshipit-source-id: 0b5b88542993773d71db0fffeb09c1b5c65c627e",False
744e9b4eb4810797a93c66591fea6f9cac533b4b,2017-08-04 03:05:34,Jesse Beach,"aria-haspop indicates popup menus. It is not needed here

Summary: `aria-haspopup` is used to indicate ""popup button""; buttons that, when pressed, show a little menu of options. It's not meant to indicate any element that has a dialog associated with it. In the case of draft.js, the `aria-expanded` attribute is used to indicate that the input has a dropdown with options.

Reviewed By: spicyj

Differential Revision: D5550366

fbshipit-source-id: 90249146a7f69f538ab2177842ee925825238ccb",False
7f0cab28386ec4bde8ec6289377bff9e53cd019b,2017-08-02 00:04:58,Jesse Beach,"Change aria-owns to aria-controls in draft.js

Summary:
'aria-owns' creates a parent-child relationship between the owner and ownee in the AX Tree. We really don't want the typeahead dialog to be a child of the input.

`aria-controls` sets up a controller-controllee relationship. This is the correct relationship for the input and its typeahead dialog.

**This is a breaking API change.**

Reviewed By: flarnie

Differential Revision: D5476399

fbshipit-source-id: fe69255351dcd173e08de1aa21d8ee0a6728b68d",False
f983cd86f07a925aa3cdf271178d3deb693e4f29,2017-07-29 23:34:27,Flarnie Marchan,"Add weekly meeting notes

Summary:
just keeping things up to date~
Closes https://github.com/facebook/draft-js/pull/1313

Differential Revision: D5524500

fbshipit-source-id: f1aec9bac05fc015184ba4ca2ff6b191b4a08a07",False
1dd67d69aa4e2ea5431cfcb6967d759168338ae1,2017-07-29 01:07:24,Flarnie Marchan,"Add weekly meeting notes from 7/21/2017

Summary:
Hopefully this helps folks in the community track what is happening with Draft.js.
�⚽💨
Closes https://github.com/facebook/draft-js/pull/1300

Differential Revision: D5518792

fbshipit-source-id: 14784052c6344d5b226b2abe2f7f70652251cacd",False
3494d45d32b64d6e82e4b3e8fcade6a2b5c6bd46,2017-07-28 07:50:43,Jesse Beach,"aria-haspopup and aria-expanded are null if role is textbox

Summary: `aria-haspopup` and `aria-expanded` should not be present (not even with a false value), when the role of the editor is not combobox.  Having these attributes present causes a screen reader to announce that the element is expandable.

Reviewed By: spicyj

Differential Revision: D5475018

fbshipit-source-id: bb5067619f8728503baaed4ef963860ddaa8a070",False
eb79fb02e70cc0fba4637d9f3394e0dee06f9ff3,2017-07-23 01:19:24,Julian Krispel-Samsel,"Corrected documentation typo, example code throws an error.

Summary:
**Summary**

`this.props` throws an exception. Because we don't have component state available at that point. It's pretty obvious but still, it can be a little confusing.

**Test Plan**

- n/a
Closes https://github.com/facebook/draft-js/pull/1238

Differential Revision: D5477594

fbshipit-source-id: ec2169666d3134595acbcb69902fd2ea4b6ae3b0",False
643c388de646945af3aecb4a362016a8103ade11,2017-07-22 23:06:36,Noah Lemen,"Clarify comment above `tryToRemoveBlockStyle`

Summary:
I found the comment above `RichUtils.tryToRemoveBlockStyle` a bit confusing while trying to understand the function's logic.

I would argue that the current comment's inclusion of information about where it is used is unnecessary, and makes it seem as if its interaction with those key commands was implemented inside the function itself.
Closes https://github.com/facebook/draft-js/pull/1135

Differential Revision: D5477479

fbshipit-source-id: a8cee503bf5459c63ac58504f5c112a1a249b64a",False
33e1167927798eac8623830d73190fc30e4f6d47,2017-07-22 06:05:41,Jesse Renee Beach,"Add aria-multiline attr to DraftEditor

Summary:
`aria-multiline` is used to indicate to assistive technology agents that a textbox is a multiline textbox. When `aria-multiline` is true, an AT should treat return key presses as carriage returns, not submit actions.

https://www.w3.org/TR/wai-aria-1.1/#aria-multiline

teeeeeeeested: `npm run test && npm run lint && npm run flow`
Closes https://github.com/facebook/draft-js/pull/1295

Differential Revision: D5464455

fbshipit-source-id: e0033db62f4b0529875ee77fe5b0635222b16af4",False
56114bdc7028135d7d7c011cd9e2ce3f45ce3d4b,2017-07-20 23:35:05,Flarnie Marchan,"Add docs on the lack of support for mobile web

Summary:
**what is the change?:**
Improvind docs by mentioning the lack of mobile web support

**why make this change?:**
For certain Android keyboards, and with IME in particular, Draft.js has
some known issues. We should document this so that folks are aware.

**test plan:**
Ran the website and manually tested.
![screen shot 2017-05-30 at 5 47 22 am](https://cloud.githubusercontent.com/assets/1114467/26583973/0bb462c2-44fc-11e7-89d8-f8bb02a07dda.png)

**issue:**
https://github.com/facebook/draft-js/issues/1224
Closes https://github.com/facebook/draft-js/pull/1228

Differential Revision: D5462589

fbshipit-source-id: 9354e7d9a73622927da69acded4db5b06b1a1c6d",False
47ed1be3138ecbc0169bc66848cae592654b6618,2017-07-20 02:19:27,Asaf Katz,"Removing unnecessary space

Summary:
Removing unnecessary space after from  Entities's Introduction
Closes https://github.com/facebook/draft-js/pull/1207

Differential Revision: D5428786

fbshipit-source-id: 13531f192b911b6f1e8c36ee1edcd15d5a32248b",False
1f9e1a28793de262731e22691b751c2cfa4d453c,2017-07-19 20:36:14,Alex Ryan,"Fix minor typo in docs

Summary:
Noticed a missing character in ""redering"" on ""Custom Block Rendering"" docs page.
Closes https://github.com/facebook/draft-js/pull/1239

Differential Revision: D5433774

fbshipit-source-id: dae4939ab68b35422921f05440f6e6efd4e2e51a",False
82bbec380a9e5973f67f0b998221878a0bd44197,2017-07-18 20:49:22,mks11,"using newer 'ref' syntax

Summary:
*Before* submitting a pull request, please make sure the following is done...

1. Fork the repo and create your branch from `master`.
2. If you've added code that should be tested, add tests!
3. If you've changed APIs, update the documentation.
4. Ensure that:
  * The test suite passes (`npm test`)
  * Your code lints (`npm run lint`) and passes Flow (`npm run flow`)
  * You have followed the [testing guidelines](https://github.com/facebook/draft-js/wiki/Testing-for-Pull-Requests)
5. If you haven't already, complete the [CLA](https://code.facebook.com/cla).

Please use the simple form below as a guideline for describing your pull request.

Thanks for contributing to Draft.js!

-

**Summary**

[...]

**Test Plan**

[...]
Closes https://github.com/facebook/draft-js/pull/925

Differential Revision: D5442872

fbshipit-source-id: a99321f173a3cb64fe01b83360dbe7f30cbe8adc",False
89260c0be7b00638780cf1ea5e4bd7d61d73ac03,2017-07-17 03:19:40,Flarnie Marchan,"Update fbjs and fbjs-scripts to pull in bug fix

Summary:
**what is the change?:**
Updated the versions of `fbjs` and `fbjs-scripts`

**why make this change?:**
Latest versions include a bug fix[1] that fixes #914

[1]: https://github.com/facebook/fbjs/pull/244

**test plan:**
0) Use `n` to set my local version of node.js to `7.6.0`, with npm
   v4.1.2

1) Ran `yarn upgrade && yarn build` and saw no errors

**issue:**
https://github.com/facebook/draft-js/issues/914
Closes https://github.com/facebook/draft-js/pull/1291

Differential Revision: D5432468

fbshipit-source-id: 2dda1e9efeef662a807c87abb0bab12340c6289f",False
ce7f8caf2a5575b1404845b806aa6973f50d1dfe,2017-07-17 02:49:33,Flarnie Marchan,"Add weekly meeting notes from July 7th and 14th

Summary: Closes https://github.com/facebook/draft-js/pull/1290

Differential Revision: D5432441

fbshipit-source-id: 1709a5ee540164f5859382adcec7c19d97e59b46",False
cbf97617c253208eeea18b4e6c31cc297fbc9151,2017-07-15 04:16:08,Ben Alpert,"Add trailing comma

Summary:
This makes OSS lint fail.

Created from Diffusion's 'Open in Editor' feature.

Reviewed By: flarnie

Differential Revision:
D5413446

Tags: accept2ship

fbshipit-source-id: a68974062eab16cd834784a5493ce781bb4b7798",False
19c71c9dbd7e1d0a9f665bbcb77c660d83cbac34,2017-07-15 04:10:41,Flarnie Marchan,"Empty commit to properly add the fbshipit-source-id

See https://github.com/facebook/draft-js/issues/1244

In my previous commit I had the wrong fbshipit-source-id.

fbshipit-source-id: f8f26ac6b6d22739cb0d1c73ae8fa613acf26758",False
514490b1322e1c123524eae97d4aea25b4da16ce,2017-07-13 21:32:30,Flarnie Marchan,"Fix-up diff for enabling 'ship-it' and 'import-it' (#1286)

**what is the change?:**
what is the change?:
Development on Draft.js is causing Github and our internal version to
get out of sync.

This pulls various changes from our internal version into the Github
project, so that they will be basically the same.

Some of the included changes;

Reorder requires via a codemod, maintained by an ESLint rule
(D5117037)
Fix 'first character prevention' bug that is triggered by Fiber async
rendering (D5161053)
Add 'z-index' to placeholder (D4769133)
Add possible fix for issue #1020 (D5261172)
Add 'flowfixme' comment (D5337485)
Fix 'flowfixme' comment (D5389367)

For reference, this patch was generated by the commands listed in
D5273910.

why make this change?:
We want to keep them in sync going forward, and will be enabling scripts
to automate mirroring changes back and forth.

test plan:
yarn install && yarn build && yarn test and manually tested examples.

issue:
related to #1244

fbshipit-source-id:a5d95c34f709c6fabcf0ceec876d4edb93881f85",False
5863399a3a1bcbbe9b090249504a70496a7af7cc,2017-07-13 03:15:41,Ben Alpert,"[draft] Fix typing into text nodes containing Tab

Summary:
lolwaffle chrome is a mystery. if you have like

```
<span>ABC\tDEF</span>
```

(where \t is a tab), typing *anywhere* in that span will break the span into two pieces leaving you with like

```
<span>AB</span>x<span>C\tDEF</span>
```

Test Plan: paste ""a\tbc"" into text field. type into it. no crashes.",False
1c6a49b8801183fe0c29458626c0b5dbe1238e59,2017-07-13 03:14:21,Ben Alpert,"[Draft] Fix first-character prevention with async rendering

Summary:
When typing the first character of a block, Draft always tries to call .preventDefault() on the beforeinput(/keypress) even for that character's insertion, because browsers are likely to mess up the DOM into a form we don't expect.

We check this by reading from the editorState and checking whether the selection is at the start of a block (either at the beginning of a line that is present, or if there is no text in a line yet).

In the case of React Fiber's async rendering, it was possible to get into a state where when inserting two characters AB, A's insertion would be correctly prevented and queued to occur via React rendering, but B's insertion would not get prevented, so it would happen natively even though in many cases A's rendering had not occurred yet.

We already had two copies of editorState we could consider to determine which path to take:

* ._latestEditorState is the last state we have enqueued a rerender for. We always read from this in most of our event handlers so that if you type multiple characters, they are queued in order and don't clobber each other, regardless of whether there has been a rerender in the meantime.
* .props.editorState is the last state that we've run cWRP/sCU/cWU/render on. In sync React, this always matches what we have actually rendered to the DOM (by the time we make it to an event handler). In async React, it doesn't, since we don't always run render in the same tick that we commit.

Checking isSelectionAtLeafStart on .props.editorState is more correct since it more closely resembles the current state of the DOM (and this logic should depend on the actual state of the DOM, not the model state), but it is still incorrect in some cases. I added:

* ._latestCommittedEditorState is the last state that we've committed to the DOM and run cDU on. In sync React, this matches .props.editorState. In async React, it is meaningfully different and does not get updated until the commit, while .props.editorState could get updated during a render that gets paused or aborted.

Changing the logic to call isSelectionAtLeafStart on ._latestCommittedEditorState makes it so we correctly determine when to prevent native character insertion. (I think.)

Test Plan:

Open plain text editor with React's useSyncScheduling set to false.
With the editor empty, press two characters on your keyboard simultaneously.
Previously, this would cause an error dialog (.removeChild of the <br> node within DraftEditorLeaf throws since it's already deleted); now it seems to reliably inserts both characters. I did this 40 or so times in a row without it crashing.
(If changed to .props.editorState but not ._latestCommittedEditorState, it fails about once every dozen or two times on my machine. Could easily be different on another machine due to scheduling randomness.)

I still occasionally saw an issue where you end up with both a <span data-text=""true""> and a <br data-text=""true""> rendered. I believe this is due to other bugs in async React, not any failing of Draft.",False
4ec743e568786e878f9dc1aa9d7ebc2ec49aec0a,2017-07-08 00:29:26,Flarnie Marchan,"Move DraftFeatureFlags to stubs (#1278)

**what is the change?:**
Moved 'DraftFeatureFlags' to 'stubs' directory, and make it export
'DraftFeatureFlags-core'.

**why make this change?:**
The 'DraftFeatureFlags' file is, *I think*, the last file which is out
of sync with our internal FB version of Draft. That is because we
actually use different flag configs within FB than the defaults for OS.

**test plan:**
`yarn install && yarn build && yarn test` and play with example files

**issue:**
issue #1244",False
7a5fd51fd34cdd8090f19dd5e72648ff7b4ea67d,2017-07-08 00:07:31,ambewas,"Update APIReference-Editor.md (#1179)

* Update APIReference-Editor.md

update API reference Editor to include onFocus and onBlur props

* Update APIReference-Editor.md",False
3dd036b53cd5f9a03e7b47a71a231a9fd6a9904c,2017-06-28 23:17:13,Flarnie Marchan,"Add docs about lack of support for mobile browsers (#1267)

**what is the change?:**
Based on issues from the community and internal experiments, we know
that there are severe bugs affecting some mobile web uses of Draft.js.
In particular, Android with certain keyboards and IME/rtl on Android.

**why make this change?:**
This information is important for folks when deciding whether Draft.js
is the best choice for their use case. It may also get more interest in
improving Draft.js for mobile web use cases.

**test plan:**
Opened the docs and visually inspected. (Flarnie will insert a
screenshot.)

**issue:**
Related to https://github.com/facebook/draft-js/issues/1224",False
52a755f1afcaef51213afb1c48974356782dcb7a,2017-06-26 21:45:05,Flarnie Marchan,"Add flow pragma to 'Draft.js' (#1262)

**what is the change?:**
Adds missing pragma.

**why make this change?:**
This was causing a problem for users in some build set-ups.
Fixes #982
Thanks @yuku-t for this solution. :)

**test plan:**
Ran `yarn build` and inspected `lib/Draft.js.flow` before and after this
fix. It has the `@flow` pragma after, and did not before.

**issue:**
https://github.com/facebook/draft-js/issues/982",False
9414ad5c9c8e07fc565257653d2318c260e355f8,2017-06-16 03:51:15,Oscar Morrison,move all .gitignores into toplevel (#1218),False
6bb4619660b42d3018888334700e8f314ebfaf1a,2017-06-16 03:13:22,Ben Alpert,Fix line breaking in docs,False
ac650418dfda100080796183eeef4ee4c390c2ad,2017-06-15 22:00:07,Flarnie Marchan,"Tweak syntax of accessing '_instance' in DraftEditor test (#1247)

**what is the change?:**
We either check for the 'getEditorKey' method on the
'renderedComponent._instance' or the
'renderedComponent._instance._instance'

**why make this change?:**
Internally we are using a different variation of the 'shallowRenderer'
and this test needs to run internally at Facebook as well as on Github.

This is not an ideal solution, but we can continue improving this test
once cleaning up the inconsistencies between Facebook and Github.

**test plan:**
`jest src/component/base/__tests__/DraftEditor.react-test.js`

**issue:**
https://github.com/facebook/draft-js/issues/1244",False
5904c3716496892dd9b19a9faf0e4997fbfaf7c0,2017-06-12 04:14:46,Flarnie Marchan,"Copy over misc. changes from Facebook (#1245)

**what is the change?:**
In order to enable auto-syncing between Github and www we need to get
both to a point were they are in sync.

This copies some misc. changes from the www version of Draft into the
Github version of Draft. We are pulling in some changes as well.

Includes changes from
D5070771 Fix errors with single new in context
  (Note about above: TIL ""by design you're not supposed to use new with Immutable.js data structures (well, except Records)."")
D5172412 [codemod] disable automock by default on as many remaining tests in www as possible @bypass-lint
D5070207 [www][flowify] Start adding Flow typechecks to Style
D4966517 [TF] Minor comments and nits for the DraftJs Composer
D5109581 Add logging to catch Firefox Draft.js error

**why make this change?:**
To enable auto-syncing, to speed up speed of development.

**test plan:**
`yarn test`
I'm pretty confident of these changes since they have all been present
in FB Draft for some time.

**issue:**
https://github.com/facebook/draft-js/issues/1244",False
722701c7bec539f0d90758e9ee8d61a620139be1,2017-06-03 23:42:10,Flarnie Marchan,Add weekly meeting notes (#1235),False
d541ab8ee378a434d539cd9fa7f03939e8d18b86,2017-05-30 21:48:45,Flarnie Marchan,Add meeting notes from last two weeks (#1229),False
b983e54f6d3f47d175da2c5e5bef17d494417e61,2017-05-18 20:31:03,jackyho112,"Add mention of draft css in overview doc (#1208)

* Add mention of draft css in overview doc

* Remove code example from Draft.css mention in overview doc",False
6d126b0302d457f0172d76439c55be7eab92919c,2017-05-09 22:51:06,Flarnie Marchan,Add documentation about textDirectionality prop (#1037),False
50ec6f9e6ea071c64bfe37f2165e543ef451cedb,2017-05-09 22:50:25,Flarnie Marchan,"Update weekly meeting notes from March-April 2017 (#1195)

**what is the change?:**
We had few things to note each week and were deferring updating the
meeting notes.

**why make this change?:**
Based on [issue #1193](https://github.com/facebook/draft-js/issues/1193)
it sounds like the meeting notes will provide signal that the project is
still maintained.",False
196bdab58166395efbb6bbc1f93861907827a7c8,2017-05-09 14:14:41,Flarnie Marchan,0.10.1,False
a399ea9ce7f5a4f6aa123b5937a7815f4e4313d4,2017-05-03 21:23:16,Flarnie Marchan,"Add 'Unreleased' version of v0.10.1 change log (#1183)

**what is the change?:**
Adding annotations for the upcoming v0.10.1 release.

**why make this change?:**
- saving time when actually doing the release
- transparency

**test plan:**
Visual inspection

**issue:**
https://github.com/facebook/draft-js/issues/1158",False
a251001e09ee7022ef1b24e08d51c05ae72e1785,2017-04-27 04:43:02,Mohamed Moussa,Removed unnecessary invariant usage (#1181),False
871b7fea7433a44ea3d4ace4cd3cfeece8198075,2017-04-25 21:48:27,Flarnie Marchan,"Add changelog link (#1178)

* 0.10.0

* Add missing link to CHANGELOG",False
ec1f2af7f9e19fc4fbfc41c27358abc7f142dd97,2017-04-25 21:30:04,Flarnie Marchan,0.10.0 (#1177),False
9d90b18357f0cec1f5a39b5c3ec7a5fa832eebc6,2017-04-25 01:28:29,Ben Alpert,More logging for selection failures (#1175),False
1f1e66505bff7cca21c773e36c9f163c84e4461c,2017-04-24 20:15:32,Flarnie Marchan,"Add es6 polyfill to all examples (#1171)

**what is the change?:**
Draft uses some ES6 syntax and assumes users will pair it with an ES6
polyfill. See
https://github.com/facebook/draft-js/blob/c12640f05e8328f5c97902c0c5e94a02ba9f58be/docs/Advanced-Topics-Issues-and-Pitfalls.md#polyfills

**why make this change?:**
When testing some examples in IE they were not rendering, and threw an
error because we use `String.prototype.startsWith` in Draft.

**test plan:**
Open the 'convertFromHTML' and 'media' example files in IE, and they
will render.

**issue:**
https://github.com/facebook/draft-js/issues/1165",False
42ac4cf5c846db16ee2d9100e905e7c04b4afc52,2017-04-24 20:06:53,Daniel Lo Nigro,"Fix ""universal"" demo on Windows. (#1168)

Closes #1166",False
2726d31fb40a3b2676632b49c65a65b883e99c77,2017-04-23 03:19:43,Ben Alpert,"Mark editor element as notranslate (#1162)

This should help a lot with ""Failed to execute 'setStart' on 'Range'"" exceptions we've logged in production and seen in bug reports.

Test Plan:
Type in editor, right-click in Chrome then ""Translate to English"", editing no longer breaks.",False
832cb681f19d0f1ebaf8e9caaa318da0da5e9852,2017-04-23 03:03:58,Flarnie Marchan,"Fix errors from react update (#1159)

* update use of createClass for React v15.5

* Update location of shallow renderer

The 'shallow' renderer was moved in React v15.5, and updating this
quiets a warning about it.

**issue:**
https://github.com/facebook/draft-js/issues/1157",False
3c91df47f58316c6b5a734ab49df9506c583a0ac,2017-04-23 01:23:36,Flarnie Marchan,"Add logging for hard-to-reproduce bug (#1156)

Since the main logging method is stubbed out, this should have no effect
on the open source Draft project. Adding this on Github in order to
continue syncing the internal and open source version of Draft, to
unblock releasing v0.10.1 of Draft.

Context of this change:
We have gotten reports of an error thrown from `setDraftEditorSelection`
that completely breaks Draft functionality once it occurs. It happens
very inconsistently, across multiple browsers, and we have not yet been
able to find the root cause or reproduce it reliably. This logging may
help us get more information about the problem.",False
783e258286f787b60d40ea8af3d68becce226d83,2017-04-21 20:07:07,Ben Alpert,"Fix mystery text deletion (#1155)

Type `wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww` in Chrome. Click at the beginning of the second line. Press space. It no longer deletes your text. That's a good thing.

T17377963",False
507925ad60638734872dba52efa2d0b66cd94e4b,2017-04-19 23:26:36,Ben Alpert,"Docs tweaks (#1139)

* Docs tweaks

- Fix reference to older contentState
- Change `href` to `url` for consistency with ""link"" example in case people copy-paste between both (which I did today)
- Fix indentation in README

* Update Advanced-Topics-Entities.md",False
213cd764f61cc64552bddd672ae1748529d55333,2017-04-18 21:23:04,Mohamed Moussa,"Update lint rules, flow version, and inline documentation (#1126)",False
9ccce668eaaa157282516415477ec30a242788f8,2017-04-18 08:29:28,Mohamed Moussa,Fixed incorrect entity documentation (#1149),False
59f4ad276d5bdb8d5de7582febddaf7c5c58ffb7,2017-04-18 08:28:07,Héliton Nordt,Update APIReference-ContentState.md (#1150),False
a652ed6f00ff04ee478876174b29691c79d89fd9,2017-04-17 23:48:03,Héliton Nordt,"Update Entities docs in Advanced Topics section to correct an error (#1141)

* Update Advanced-Topics-Entities.md",False
3894c64889f7aa25303adcecdff7c94c84ccd857,2017-04-07 04:04:38,Joshua Peek,Configure dist output to use UMD format (#1090),False
8cd420bc881b9c024f005dfe89694d4f14691608,2017-04-04 03:45:03,Mohamed Moussa,Fixed bugs with deletion between blocks and atomic block deletion test case (#1108),False
6f2bf66bacff3ffac234fc21ff3720344ff92776,2017-04-01 01:09:34,Flarnie Marchan,"[Part 2] Pass fresh editorState to edit handlers (#1113)

I had mirrored parts of this change from FB to github but missed some
things. This is the second part of the same change - context below.
Earlier part merged as https://github.com/facebook/draft-js/pull/1112
---
There have been bugs reported in cases where the users of Draft are
updating 'editorState' in their custom handlers for keyDown, paste, etc.
This can be a problem when they are using an 'editorState' that is in
the parent's props or state and is not in sync, at that moment, with the
editorState in Draft. This allows the parent to use the most updated
editorState in custom handlers.

This change was already reviewed by @spicyj and credit for this fix goes
to @alanouri for making this change.",False
3a390dac16466d798cdf8f997825be4cae4c55e5,2017-03-31 22:46:22,Flarnie Marchan,"Pass fresh editorState to edit handlers (#1112)

There have been bugs reported in cases where the users of Draft are
updating 'editorState' in their custom handlers for keyDown, paste, etc.
This can be a problem when they are using an 'editorState' that is in
the parent's props or state and is not in sync, at that moment, with the
editorState in Draft. This allows the parent to use the most updated
editorState in custom handlers.

This change was already reviewed by @spicyj and credit for this fix goes
to @alanouri for making this change.",False
cc6bed9b1200ae579698d41ace4bfd6f0ee88187,2017-03-31 21:56:51,Flarnie Marchan,Add bundles from 'universal' example to eslintignore (#1109),False
4cb115e6abb7d3134e0226f1a4cd5432604d0962,2017-03-31 04:28:29,Flarnie Marchan,"Add text directionality override prop to DraftEditor (#1034)

* Add text directionality override prop to DraftEditor

Credit for this change goes to @mmmoussa

 - Added an optional textDirectionality prop of type
   DraftTextDirectionality to the DraftEditor component which allows
   overriding the directionality of all blocks in the editor.
 - Fixed lint errors in the modified Draft.js files.

Note that we will be updating the DraftTextDirectionality type
definition to move it to the `fbjs` shared utils, possibly along with
related text directionality utilities.

* Hold off on updating docs with textDirectionality

Since we haven't released this new prop yet let's not add it to the
documentation until we do.

* Use BidiDirection instead of own directionality type

Thanks to @zpao for pointing out that fbjs has BidiDirction.",False
864ecf25126277451d7435310ce31bd9588fbafc,2017-03-31 04:28:16,Flarnie Marchan,"Expose props for disabling auto-correct, auto-complete, auto-capitalize (#1035)

Wanted: manual testing of this PR.

There is some really weird behavior in Android 5.0 when auto-correct happens.
More details here;
https://github.com/facebook/draft-js/issues/1010

Setting 'spellCheck' to 'false' didn't seem to be enough to stop this.

My quick fix for now is to expose more properties on Draft for
controlling autocorrect. This could also be useful to people in general,
since there are often complaints about autocorrect on mobile web.

Long term we will be addressing the root causes of the bugs with mobile
web, but this seems like a useful change regardless.

We did some testing with mobile web using these props.

Ideally I'd like to get testing done of each prop in each supported
browser, and document the effects. If anyone can help verify different
behaviors please comment here, otherwise I'll get to it soon.

Note that we'll update the documentation once this change is actually
included in a released version of Draft.js.",False
47c26cc778da654231df0808fcb9bb1d2052662d,2017-03-31 04:06:23,Mohamed Moussa,"Fix missing commas (#1107)

Updated comma-dangle eslint rule and fixed resulting errors",False
3b91e36317b59c4eee6cf719826f743e07c2567b,2017-03-30 03:27:52,Flarnie Marchan,"Add Feature Flags in Draft, and add Entity Deletion change under GK (#1104)

We use feature flags in the FB version of Draft to test new and
potentially unstable changes. This mirrors out the flags we currently
have and sets the stage for keeping things in sync going forward.

Now internal use of feature flags will not block syncing and releasing
Draft.

This is part of an effort to make releases simpler and more frequent,
and keep the internal and external versions of Draft in sync.

As part of matching up the internal and external Draft flags we added
the changes from PR #1065 by @mmmoussa, with the main change under a
flag that is set to false.

---Test Plan
Manually tested the examples in Chrome, and we will do the full test
plan before releasing v0.10.1.",False
eac6e2ef17c27aeb530d452fb33b6904ac4f8da6,2017-03-25 01:45:38,Flarnie Marchan,"Initial fix for text insertion bugs in Android 5.1 (#1033)

Related to issue #1011

There is a bug in Android 5.1 (not 5.0 oddly enough) that makes text
entry nearly unusable. It's documented in detail here -
https://github.com/facebook/draft-js/issues/1011

Logging everything shows that;
 - when we have a block with text and spaces, and start deleting the
   characters one by one, there is an 'onInput' for each deletion that
   updates the text.
 - when you delete the very last character, the 'anchorNode' of the
   domSelection has a type that is not a text node. So we skip updating
   at all, and that means the last character doesn't actually get
   properly deleted from editorState.
 - Then the next time something fully updates the editorState, that last
   character shows up again.

The root issue is that Android 5.1, when we tested it, was in
""composition"" mode and the current handlers are not really built to
handle text deletion properly in composition mode.

We're looking forward to finding a more complete solution to the root
cause - for now this change improves the usability on mobile and doesn't
break anything.",False
543831d9e40b360bd82d350b3cc7afb9b7c060a8,2017-03-25 01:41:06,Flarnie Marchan,"Revert ""Correctly delete immutable and segmented entity content when at the edge of a selection"" (#1095)

* Revert ""add documentation for `editorKey` prop (#1087)""

This reverts commit c12640f05e8328f5c97902c0c5e94a02ba9f58be.

* Revert ""Correctly delete immutable and segmented entity content when at the edge of a selection. Fixes #1063. (#1065)""

This reverts commit 413e63a12e0a145e7d05c993b825e19c4ece2996.",False
c12640f05e8328f5c97902c0c5e94a02ba9f58be,2017-03-24 22:05:37,Marcos Ojeda,"add documentation for `editorKey` prop (#1087)

* better description for polyfilling Draft in quickstart installation docs

just one of those things that i didn't pay much mind to until i was
trying to isolate a bug i'm having in ie that i'm testing using a c-r-a
sandbox.

* fixed git repo url in docs/sever readme

* add more detailed comments around editorKey prop

* add reference docs for editorKey prop in `<Editor />`",False
413e63a12e0a145e7d05c993b825e19c4ece2996,2017-03-18 01:27:59,Mohamed Moussa,Correctly delete immutable and segmented entity content when at the edge of a selection. Fixes #1063. (#1065),False
67ff1950cde77903d450fc311e5eee311962cb42,2017-03-15 21:41:28,Denis Iogansen,"Add `editorKey` prop for SSR (#796)

* add editorKey functionnality

* add simple tests for editorKey functionality

* fix flow error

* minimal working error case for universal rendering

adds a small express-backed universal react app that only accepts `/`
requests but that exhibits a client/server mismatch issue

* fix failing test when length of generated hash is small

* Update universal example

since this PR was created some changes were made and this updates the
example to fit with our other examples.

- moves into the version specific subdirectories
- updates package.json
- removes some ES6 destucturing temporarily because polyfill seems to be
  not loading correctly",False
559d4e4d46e7385e477cb91a7db6c662054b5749,2017-03-13 23:54:29,Lyonsclay,Change website main font-weight to normal. (#1069),False
82d396dafe35529b0433468dbd3ed146d9790c3a,2017-03-11 05:31:42,Flarnie Marchan,Add weekly meeting notes for 3-10-2017 (#1064),False
0022825422b3692ddfb69b262de7766228b6cebe,2017-02-27 20:52:37,Justin,"Small update keybinding docs. (#1023)

* Bind handleKeyCommand in the constructor.

It's bad practice to bind functions in render. Updated it to handle binding in the constructor. so it is only bound once.

* Update Advanced-Topics-Key-Bindings.md",False
d6cad2e2640144f65dcfc7d73d7653580054db41,2017-02-27 06:26:30,Tony Gentilcore,"Fix editor losing focus after first word on Android. (#907)

* Fix editor losing focus after first word on Android.

This patch narrows the scope of `restoreEditorDOM` to only blow away the
`DraftEditorContents` instead of the entire editor. The key difference is
that the `contentEditable` DOM element is not replaced, which means that
the soft keyboard isn't dismissed on Android.

Manually tested against ""Cut"" and ""IME"" tests:
https://github.com/facebook/draft-js/wiki/Manual-Testing#cutcopypaste
https://github.com/facebook/draft-js/wiki/Manual-Testing#ime

Fixes #888, Ref #626, Ref #102

* Fix editor losing focus after first word on Android.

This patch narrows the scope of `restoreEditorDOM` to only blow away the
`DraftEditorContents` instead of the entire editor. The key difference is
that the `contentEditable` DOM element is not replaced, which means that
the soft keyboard isn't dismissed on Android.

Manually tested against ""Cut"" and ""IME"" tests:
https://github.com/facebook/draft-js/wiki/Manual-Testing#cutcopypaste
https://github.com/facebook/draft-js/wiki/Manual-Testing#ime

Fixes #888, Ref #626, Ref #102",False
56590ef411240c26e94f316af60f6ea61273f3b2,2017-02-26 08:12:32,Daniel Lo Nigro,"Merge pull request #1031 from Daniel15/fix-web

Fix race condition in website builder script",True
53543341f2fdce4cad1732924d42cd116014713d,2017-02-26 08:05:56,Daniel Lo Nigro,"Fix race condition in website builder script

There was a race condition in the website generation script. It calls convert.js to convert Markdown to JavaScript, and then immediately looks for the resulting js files. However, convert.js uses the async version of `glob()`. This means that the code in generate.js that looks for these files can execute **before** the conversion in convert.js finishes, resulting in no pages being built. When this happens on TravisCI, it deletes all the pages on the site, due to the `rm -Rf *` in `publish.sh`. I've simply switched convert.js to use the synchronous version of `glob()` so that it's guaranteed to finish before the generation happens.",False
8ec47de63e524e8e45a7a5ce507e029e4de4fd4f,2017-02-26 06:47:03,Daniel Lo Nigro,"Merge pull request #1030 from Daniel15/oh-my-glob

Only include files in glob, not directory.",True
a93edfbcc94f8c71a2956d1bb094e9b702cc4dcc,2017-02-26 06:44:53,Daniel Lo Nigro,"Only include files in glob, not directory. References #1029",False
7e33073558dc6813a8b82b3e381b3029be03d386,2017-02-26 02:17:59,Daniel Lo Nigro,"Merge pull request #1028 from flarnie/tweakToFixWebsiteBuild

Add .gitkeep to /website/src/lib",True
b5fb6adfa116bcf206107e96540510b0bd474aec,2017-02-25 23:13:28,Flarnie Marchan,"Add .gitkeep to /website/src/lib

We need this directory to be present for the initial build of the
website.",False
295d6dccc47d4315c17c9702d704712f46a4e72e,2017-02-25 13:36:03,Daniel Lo Nigro,Fix links in docs sidebar,False
1b3da9ab550543d92e8c56bf6eb0613c5823bdd0,2017-02-25 13:34:13,Daniel Lo Nigro,"Fixes to website builder scripts
 - Include extensionless files in build
 - Update convert.js so it handles Windows newlines",False
7f83c9b942cddea2a65ec4fcaffabe554c9c3ef0,2017-02-25 13:10:16,Daniel Lo Nigro,"Merge pull request #1026 from Daniel15/draftjsorg-updates

Updates to move the site to draftjs.org",True
f8f940048b27f58f8b5ec6fc75236c2e92281da8,2017-02-25 13:01:51,Daniel Lo Nigro,Updates to move the site to draftjs.org,False
f69cf951fb325c37a24d0b74402fe8d483ddaf65,2017-02-25 12:44:53,Daniel Lo Nigro,Add CNAME,False
e4f87b04b3ed22134961c8ba7be4e8c66dadd4c4,2017-02-25 04:36:21,Flarnie Marchan,Add meeting notes from 02/24/17 (#1025),False
7a22007f228b0f77a47f18c98c36936a1e7cc91f,2017-02-24 21:17:28,Flarnie Marchan,Add meeting notes from 02-17-17 (#1021),False
799228d133e602261b70011c744cb0b5624ac457,2017-02-23 22:02:43,Ryan Loomba,Update copyright year to 2017 in footer on website (#1019),False
1893a1aed38ce0f9584ca18c2063f7ffa08e6a03,2017-02-16 00:24:20,Noah Lemen,"Test that `getDecorations` is called with correct arguments (#995)

* add EditorState test that checks `getDecorations calls` for correct argument order

* lint fix, remove unnecessary var",False
b076d7ba15b791e48fa90f3319c1376b0fda191a,2017-02-15 02:53:24,Flarnie Marchan,"Update contributors doc (#1009)

* Add Code of Conduct to CONTRIBUTING doc

Good stuff. Snagged from the
[React 'How to Contribute'](https://facebook.github.io/react/contributing/how-to-contribute.html)
page.

* Add stability philosophy to CONTRIBUTING doc

To address questions and concerns we have had internally and externally
about API changes.

* Fix missing newline

Thanks to @existentialism for catching this.",False
9dbcb6956f3ef17ffc30fffca854a10deabc1e91,2017-02-12 22:58:43,Flarnie Marchan,Add meeting notes from 2017-02-10 weekly meeting (#1008),False
4b67dfec36747b41d2f1e040e6514e584183d9ea,2017-02-10 22:12:36,Gordon Dent,"Add default value for type in convertFromRawToDraftState (#1004)

* Add default value for type in convertFromRawToDraftState
In instances where type is undefined or null, this would be used as type due to the way type is destructured from each `block` in `contentBlocks`. This commit adds to a default value which ensure any falsey is changed to `unstyled` ensure the returned ContentBlock always has a valid DraftBlockType as its type

* Add test for to validate behavior for falsey values",False
186b3a1e3d9e33edc0621350ef0abbdef6d8968c,2017-02-09 04:06:20,Flarnie Marchan,"Add newline and bold

Minor nits",False
4290abaff04b4cbee3940018d67f7a77028fd17c,2017-02-09 04:05:29,Flarnie Marchan,"Fix newlines

We needed some extra newlines to make this more readable.",False
9a80ffcbb9151f3961cc06918c9dda9d142a4320,2017-02-09 04:04:00,Flarnie Marchan,"Add H1 2017 Roadmap Update and '/meta' directory (#1003)

This roadmap was reviewed by the core contributors during a weekly
meeting and represents our current ideas about project direction.

The roadmap will evolve over time, and we'll be adding weekly notes in
this 'meta' directory in order to provide more fresh and detailed
updates about project direction.

Why use the 'meta' directory instead of a 'blog' or 'wiki'?
- People following the repo can get notifications push to them when 'meta' is updated.
- Allows roadmap to be living, breathing document with updates as time goes by
- Allows collaboration/discussion from community
- We are taking weekly meeting notes anyway; let people know that we are meeting and making progress

Similar to the (Relay repository's 'meta' directory)[https://github.com/facebook/relay/tree/master/meta].
Thanks to @wincent for advice about this.",False
7e2d1b8017f7bd02d0d717a38ba7c85b460eb78f,2017-02-07 21:08:19,Nikita Gusakov,"Update flow to 0.38 (#996)

fixes #958, references #963",False
a3b94009053e10a7c93dfaf223cadd4d14d646c4,2017-02-01 23:04:28,Noah Lemen,reuse <title> string for og:title meta (#984),False
6b01921a2a676bf26699769f78e38a2d16b34d0b,2017-02-01 23:03:26,Gabriel Aszalos,Corrected link to migration guide on entity pages (#992),False
067fe5be8550dd0b7633d856d2376b04bebeab7f,2017-02-01 22:58:39,Olena Sovyn,"documentation: fix links to the examples (#983)

fix version of the draft.js in the links to examples",False
4007f97112d26e757c1f8ea1f27e26f65bc7072f,2017-02-01 22:57:41,Olena Sovyn,documentation: fix name of the ContentState method (#988),False
be8e29f5cb65da171c663fde76397764c990b4ea,2017-02-01 22:54:32,Will Haering,Fixed broken link to v0.10 migration guide (#975),False
497c55ec54f798e375dbf6ae3dadc857514a47ce,2017-01-30 22:08:49,Flarnie Marchan,"Fix order of arguments for decorator strategy in docs (#981)

Fixes #973",False
9f23e3720695c3d5b62ea09f6d3d047f289f9fc8,2017-01-30 20:10:32,Olena Sovyn,"add the code to show how obtain myContentBlock (#966)

* add the code to show how obtain myContentBlock

add code that make it more easier to understand how the myContentBlock can be obtained for the SelectionState

* add the code to show how obtain myContentBlock

add code that make it more easier to understand how the myContentBlock can be obtained for the SelectionState",False
062ff7915345cfc419222ee47b1bf4fbf9ef266e,2017-01-30 20:08:52,Olena Sovyn,documentation: fix links in the methods list (#978),False
421f36df97cbbfeebc5bfe754849b8eb4a15ba9e,2017-01-30 20:08:30,Noah Lemen,add doc page titles as prefix for title header (#972),False
85ec6653c648bd58a227ab226ccbbc846d52f455,2017-01-30 19:54:06,Olena Sovyn,"documentation: fix version in the link (#980)

fix the version in the link to make the link to the decorator/tweet example valid",False
153c5cea11bd0018b614f41bba1fc6c9b2500181,2017-01-30 19:53:23,Olena Sovyn,"documentation: fix the arguments in the decorators (#979)

Fix the arguments order and quantity in the decorators strategy accordingly to the code expectations https://github.com/facebook/draft-js/blob/7390e2972145494146202c3d3480eb9509dc90d4/src/model/decorators/CompositeDraftDecorator.js#L71",False
34cc396c38e72d732d933ce432a0ef99f4c3e026,2017-01-30 19:49:35,Olena Sovyn,documentation: remove duplication in methods list (#977),False
b3ce0bc2863c3d350b9fb5257bc4884c50e9b4d9,2017-01-30 19:48:08,TANAKA WORLD,Fix typo in docs (#974),False
cacdc4711025c5bb96c9a048b92185bc883f99e1,2017-01-29 00:40:37,Flarnie Marchan,"Update docs for v0.10 (#968)

* Update Draft.js docs to use 0.10.0 syntax and examples

* Add 'API Migration' section to documentation and other minor edits",False
6d7749962d92a3b7fa0be89e6538a595a3a5333b,2017-01-28 23:41:44,mks11,Update Advanced-Topics-Entities.md (#942),False
20b55b42355d13cfb9c3006734098195b8d5b685,2017-01-28 23:41:01,Nikita Gusakov,Add DraftDecoratorStrategy type (#826),False
d0d097ff57d90f1bd881b38b95c989de9ffc7fbb,2017-01-28 00:23:11,João Alberto,Update README to install with Yarn (#960),False
d8d74830af8a7f1eaba7afc060f2dc130bf6a288,2017-01-28 00:21:29,Flarnie Marchan,"Add link to the JSFiddle (#964)

Just another nudge to help folks with showing how a bug is reproduced.",False
dba0c420cd5ea7df65d4f5691d61ccb7658a235c,2017-01-27 06:14:37,Flarnie Marchan,"Make 'decorator' optional and allow null consistenly in EditorState (#920)

This fixes a minor flow error coming up in a FB use case, and makes the
overall typing more consistent in this file.",False
63440317988cc6a7b89b9776a38ca76c726260f7,2017-01-27 05:58:59,Flarnie Marchan,"Fix Flow nits in DraftEditorProps (#918)

In one case it seems the return type was just incorrect. We also
clarified the comments for 'keyBindingFn' in order to avoid confusion -
previously due to some Flow issues we had almost changed this flow type
to be incorrect. See https://github.com/facebook/draft-js/pull/894

Also fixes a hanging comma lint.",False
f031cb912568ff1c06917bc55d9f8d51733e73ed,2017-01-15 23:20:52,Yifan Wang,adjust js object alignment in documentation (#945),False
b1d95d232abdc55eed1ea4ba3b62d236febb1269,2017-01-12 21:26:07,Flarnie Marchan,"Improved version of ""Fix modifying state during onChange ... #667"" (#871)

This fixes some issues with the fix originally merged from PR #667[2]

Credit to @balpert and @srmcconomy for this fix. For now I'm getting
them back in sync.

Also thanks to @davidchang for pinging me about landing this,
@colinjeane for reporting this bug in #917 and submitting a nearly
identical fix: https://github.com/facebook/draft-js/pull/919

@colinjeane since we already had this fixed internally I'm going to use
our approach to keep things in sync.

fixes #917, #849

[2]: https://github.com/facebook/draft-js/pull/667

We also had to tweak this compared to the current internal version to
accomodate a recent change that makes 'editOnBeforeInput' and the other
handlers take 'editor' as an explicit argument instead of assumming
'this' will be the editor;
https://github.com/facebook/draft-js/commit/e64c2c3f2a3654b925b18baff448100cfbbf3738

Note that we are updating the version of 'fbjs' required in order to get
access to the 'setImmediate' polyfill.",False
301d12ced979d03e12acc9a1474e54d89509691d,2016-12-31 13:11:21,David Chang,"Merge pull request #905 from marcelometal/marcelometal-patch-1

Improve README.md",True
b09b8680881c8d162289e874b4f6d4ef420a7dac,2016-12-30 18:57:04,Marcelo Jorge Vieira,"Improve README.md

Added syntax highlight",False
5540845a7ca24496ce52f899b62fd30dc108c382,2016-12-30 05:56:04,drsirmrpresidentfathercharles,Fix array lookup to .includes rather than .has (#867),False
b7fadfffec410b3332e056767f627324ecc5b725,2016-12-30 05:38:19,delijah,"Moving atomic blocks (#551)

* Implemented moveAtomicBlockBefore and moveAtomicBlockAfter in AtomicBlockUtils

* Renamed EditorChangeType 'change-fragment' to 'move-block' and added to docs

* Changed interface for moving atomic blocks:

- Just use one function called moveAtomicBlock instead of three
- Introduce DraftInsertionType for determining if a fragment shall replace another fragment, or if it shall be inserted before or after another fragment

* Using ES6 variable declaration and getStart/EndKey instead of getAnchor/FocusKey",False
5120924e4ed1a04f050ee58fa3a02016e83c373c,2016-12-30 05:18:19,Dawn Wright,Pass `block` to `customStyleFn` callback (#851),False
9030a865bb71cc9213efdb835e3c51b583e222de,2016-12-30 05:03:14,Brian Ng,Prevent discarding style override on split-block (#892),False
43c8762aa84d9f7e8299aaecc79837eec2dfd248,2016-12-30 04:55:32,Guilherme Vierno,"Ignores 0 width rects when calculating selection (#876)

Fixes #570, Fixes #290",False
84a4238302945303af3872f8247a3e0288423f5a,2016-12-29 02:37:36,David Chang,"Merge pull request #893 from existentialism/issue890

Add DraftEditorDefaultProps type",True
ea396e2915b7a48ccab72a5217a55f1b42a5bb93,2016-12-21 10:01:50,Brian Ng,Add DraftEditorDefaultProps type,False
437410bd9dfc18077064848bab09c8da7075f09e,2016-12-21 02:19:39,Tyler Craft,"EditorState.set() (#882)

* EditorState.set()

* inherited",False
f943a3020ff7cb38dbbc4cd0fd5649e2d0938843,2016-12-21 00:13:50,Tyler Craft,API Notice doc update (#883),False
a54dc993aef522b422825646ec2b98c5be8b9f15,2016-12-21 00:05:50,Tyler Craft,block doc update (#881),False
ac6ac9cf2ea17df770f0f908d2f984af2c98b6e6,2016-12-21 00:03:10,Tyler Craft,Update applyEntity doc (#880),False
a26a2b3bebe916526e8def9c4cb8aef02262abb5,2016-12-17 04:48:28,Flarnie Marchan,Add missing 'permanent' to two CSS files (#877),False
4c07e2ec5d9f2ede0243997a4c785101fc4203ea,2016-12-16 03:39:18,Tam Love,"Issue #865 Add 'Getting Started' section to `README` (#872)

* Update Readme.md

Updated Readme.md to include a Getting Started section using information from the documentation.

* Update Readme.md

Adjusted some headings to be H3 to appear as sub-headings in the Getting Started section to provide better reading flow.",False
7390e2972145494146202c3d3480eb9509dc90d4,2016-12-16 03:20:25,Colin Jeanne,Fix 0.10 compatibility break in getDecorations (#860),False
865be66d77d230b61465dcef3e65641b8a44e4a3,2016-12-14 10:35:43,Flarnie Marchan,"Update CSS Constants (#863)

Facebook has renamed these; just keeping things in sync.",False
2de3c450ff7882e24d9abd4d7a9017cd8905d0c7,2016-12-11 11:07:34,Oscar Morrison,"Update Overview.md (#841)

Simplifies code and minimizes new concepts.",False
19172635c693de848a930855a14da33eb4225fd3,2016-12-11 00:34:53,Flarnie Marchan,"Change underscore method names to bypass lint about private methods (#858)

Private methods should not be called as public methods. A recent PR
(https://github.com/facebook/draft-js/pull/814) added warnings to the
public-but-deprecated API of DraftEntity, and then moved the logic for
those methods into private methods that can be called within the
Draft.js framework.

These methods are ""private"" in the sense that we are only calling them
within Draft. They should not be used outside of the Draft library,
because they will be removed in an upcoming version of the library.

We have a transform step that causes issues when an underscore-prefixed
method is called outside of it's module, so changing the method names
seems like the easiest way to deal with this issue and still send the
message that they are private.

There is a way to turn off the transformation step on a file-by-file
basis but that would lead to touching more files than this approach, and
this code will be deprecated in the next release anyway.",False
429592c37daa1ae935aef1e35b10ed1b005560f5,2016-12-10 23:46:17,Flarnie Marchan,"Fix lints and flow errors for v0.10 (#856)

* Fix trailing comma lints

I'm not sure why ESLint didn't catch these at some point on Github - but
in any case we are fixing it now.

I ran the `trailing-commas.js` js-codemod and it only touched one file
for some reason. Probably I missed something about the jscodeshift API.
In any case, I fixed the other lints that our internal linter was
catching.

* Use DraftEntity type instead of EntityMap type in helpers

While supporting both the old and new APIs in Draft.js for Entity
manipulation, we are calling to the old DraftEntity module under the
hood instead of using the new system that would use an Immutable.js
OrderedMap called the EntityMap.

The DraftEntity module now has private methods for entity manipulation
that don't warn, and the public API which we are deprecating has
warnings and then calls the private methods.

In short, there are places where the flow typing wasn't right because
it was expecting EntityMap, and not DraftEntity.

I don't know why flow didn't catch this when we merged
https://github.com/facebook/draft-js/pull/814

test plan: `flow src`

* Fix flow error caused by passing command to RichUtils.handleKeyCommand

The 'handleKeyCommand' takes either a 'DraftEditorCommand' type or any
string.  This allows users to have their own custom editor command
types. I'm not sure how common this is, but our current flow typing
allows it.

The flow typing of 'RichUtils.handleKeyCommand' is more strict - it only
allows 'DraftEditorCommand' types, and not custom strings. This causes
an issue in one of our use cases, where we pass the 'command' received
in 'handleKeyCommand' through to 'RichUtils.handleKeyCommand'.

It seems like the 'RichUtils.handleKeyCommand' should have an API
similar to 'DraftEditor.handleKeyCommand', and so we're loosening the
flow type on 'RichTuils.handleKeyCommand'.

Test Plan: `flow`

* Fix flow error with DraftEditor.setClipboard

This was causing flow errors in our internal code because we expect that
'null' or 'undefined' is ok as an argument to 'setClipboard'.

Test Plan: `flow src`

* Fix flow and lint errors in CharacterMetadata

Again - I'm not sure why the github CI didn't catch these issues
earlier. I wonder if the issue with the typing of Immutable.OrderedMap
relates to the version of Immutable.js we are using or something.",False
3f424d1bdb2923a68a2e99672aeb2244a249bd7e,2016-12-10 00:59:00,Eric Famiglietti,Fix link. (#855),False
a1817a72f362d068380dfda685aea8d46e32d13b,2016-12-07 01:22:27,Ben Alpert,"Fix flow (#848)

My slip.",False
07892ba479bd4dfc6afd1e0ed179aaf51cd138b1,2016-12-06 13:01:57,Ben Alpert,"Fix modifying state during onChange triggered by beforeinput (#667)

Fixes #92.

If an onChange handler replaces every ""x"" with an ""abc"", then when you type ""x"", we trigger onChange from beforeinput and rerender immediately with the content ""abc"", then the browser still inserts an ""x"" character!

This fix is surprisingly simple: instead of triggering an update during beforeinput, we simply wait until the input event to do so. This means that when we rerender, the browser would have already inserted the ""x"" character and React will correctly delete it when rerendering.

Test Plan: In plaintext example, change the handler to

```
this.onChange = (editorState) => {
  var content = editorState.getCurrentContent();
  return this.setState({
    editorState: EditorState.set(editorState, {
      currentContent: Modifier.removeInlineStyle(content, content.getSelectionAfter(), 'OVERFLOW');
    }),
  });
};
```

then type. Characters don't get duplicated like they did before.",False
99bf098b6f5ad4b37858f8b25fe6c85733cc70ca,2016-12-04 07:40:09,Flarnie Marchan,"Part two deprecate but dont delete old entity api (#814)

* Add warnings and comments about deprecating old Entity API

We are deprecating the old DraftEntity API.

Why? Because
 - currently changing or adding entities won't trigger a re-render
 - the use of a non-Immutable storage for entities doesn't fit well with
   the rest of the Draft architecture
 - moves Entity storage out of global module; this just makes more sense
   as an API, rather than having it globally available.

This moves the logic for the old API into private methods, and adds
warnings and comments around the public-but-deprecated API methods.

We then use the private methods internally while we still support both
APIs.

A future version of Draft will actually remove the old API completely,
and these warnings and comments will help folks make updates to their
code to prepare.

We will release more documentation about this soon.

* Update syntax of tex example

This example was still using the old syntax, and the new warnings we
added alerted us to this fact when doing manual testing.",False
2dfea2a65ef5183e78bf7be11936ebc243c67ab5,2016-12-04 07:05:31,Flarnie Marchan,"Make contentState.createFromBlockArray work with old and new API (#838)

As part of the changing API the signature of
contentState.createFromBlockArray changed.

At some point (recently I think) this was changed to no longer support
the old API, and we didn't quite have the 0.9.1 style examples in place,
so it wasn't caught.

This adjusts the 'createFromBlockArray' to work with both the old and
new APIs.",False
16ed6e5a1e7c9d5a0d5718b9a50c8256ee33f938,2016-12-04 03:22:28,Mitermayer Reis,adding-missing-type-definition-to-blockrendermap - Adding missing type for DefaultBlockRenderMap (#831),False
b298df242dc88ba1c1cb7158aac35cc19b754e2f,2016-12-04 03:22:16,Mitermayer Reis,"Fix line breaks when pasting from word to draft (#828)

* Making sure that pasted paragraphs are not converged when pasting

* Adding documentation for introducing alias

* Simplifying the logic

* Adding flow types

* Updaing docs",False
6c6946b9683cfd909a077a394509d0bec7bf912c,2016-12-02 23:11:33,Tobias Andersen,"Add convertToHTML example for version 0.9.1 (#833)

* Add convertFromHTML example for 0.9.1

* Update docs with convertFromHTML example

* Remove image from convertFromHTML example in 0-9-1

* Update 0.9.1 convertFromHTML example to use the old Entity API

* Fix link to convertToHTML example in docs",False
b17eb8bb2844e3070b8232523ab4cd125fb6329f,2016-12-02 07:40:40,Tobias Andersen,"Add deprecated examples (#824)

* Move current examples into draft-0-10-0 dir

* Add examples for version 0.9.1 into draft-0-9-1 dir

* Use unminified version of react in all examples

* Update file paths for examples

* Update paths in gitignore, 'tex' package.json, and draftjs docs

 - updates the .gitignore to ignore node_modules in both the new
   locations of the 'tex' example
 - updates a path in the script used for the draft js docs website,
   which pulls styles from the 'rich' example for some reason
 - updates the path for 'npm install' in the 'tex' examples
 - updates all links in the markdown used to generate the draft js docs.",False
bd3eefaa1319ffbbde9d6d870e6ec8ef1a2c077a,2016-11-29 22:17:09,Ben Alpert,Fix merge conflict from #740 and #820,False
e64c2c3f2a3654b925b18baff448100cfbbf3738,2016-11-29 21:49:31,Ben Alpert,"Change handlers to pass `editor` as an argument (#740)

* Change handlers to pass `editor` as an argument

This allows Flow to type them better and catch bugs.

* Fix Flow errors exposed by added types

No behavior change.",False
d1d3defb79decf9e9faa408e5c08f10981e46037,2016-11-29 12:39:19,Ben Alpert,"Improve typing in Korean on Windows (#820)

(Landed at Facebook as D4056089 over a month ago, copying back out.)

Summary:
If we have a state update enqueued but the rerender hasn't happened, and a select event comes in, we can't do anything useful with it because although we could compare the last rendered editor state with the DOM selection, we can't make a rational choice for how to update the latest queued editor state with the DOM selection. (Previously, this code was throwing away any content change which would lead to a loss of inserted chars in many Windows IME scenarios.)

In particular, if you type in Korean w/ Windows IME then press space,

* compositionend arrives, causing us to set a 20ms timeout for resolving the composition,
* at that time, the text is already inserted in the DOM
* then keydown 32 comes in, which (due to my recent changes) makes the composition resolve immediately
* we enqueue a rerender with the composed text
* our 'select' polyfill also turns the keydown into a select event, and that select event has the *new* cursor position corresponding to the text that is already inserted to the DOM

Basically, the DOM has 안녕하세요, the last editorstate is """" with selection [0, 0], the queued editorstate is ""안녕하세요"" with selection [5, 5], and you get a selection event [5, 5].

Since there's nothing useful we can do with this, we now ignore the selection event. The risk here is that we now are ignoring important selection events and the editor state selection lags behind the DOM selection. isaac and I don't know of any scenarios in which this would matter -- if we do find some, we might be able to instead change this code to re-check the selection after a rerender to make sure that we have the latest selection.

Test Plan:
Type dkssudgktpdy then Space with Korean keyboard on Windows Chrome, Windows Firefox, Windows IE, Windows Edge, Mac Chrome, Mac Firefox. It either does the right thing (inserting ""안녕하세요 "") or it does the same thing as cstools which doesn't have any of my changes from this week.

Type normally, move the cursor, select all, copy, backspace, repeated backspace in the same browsers.",False
104f66e2c951c8c1f8b89cba5fffad67e88b498c,2016-11-29 08:16:48,Iroshan Vithanage,Added code syntax to `\n` (#817),False
0cf448ef089f42ab8a478ed6515fe88493f45f4a,2016-11-28 07:47:28,Flarnie Marchan,"Deprecate DraftEntity before removing (#790)

A previous PR had completely removed 'DraftEntity' the module and moved
control over entities into ContentState.[1] This changed several public
APIs of Draft.js in a non-backwards compabible way.

[1]: https://github.com/facebook/draft-js/pull/376

To make it easier to migrate multiple use cases to the new Draft.js API,
and because the transition is too complex for a simple codemod, we are
releasing a version that supports both the new and the old API and then
later releasing a version that breaks the old API completely.

In order to renew support for the old API while also supporting the new
API, this PR
 - restores the DraftEntity module and associated tests/mocks
 - calls into DraftEntity methods under the hood of the new API

We tried to leave as much of the new API code in place and unchanged as
possible, so that things will be easier when we are fully removing
DraftEntity and switching to the new approach.

Next steps:
 - A PR to add warnings and comments about the deprecation of the old
   API
 - Add this, the warnings, and other recent PRs to 0.10.0 alpha version
 - Add documentation about migrating from deprecated to new API
 - Release 0.10.0; support both APIs
 - Make PR that basically undoes this one, moving entity control into
   ContentState, and release that as version 0.11.0, with warning that
   it no longer supports the deprecated API.",False
3fd9f9c84f48e0ae961d9d5a1cda4d2b6859c89d,2016-11-27 06:00:36,Flarnie Marchan,"Fix flow typing of 'ReactDOM' (#812)

Flow wasn't finding the 'ReactDOM' node module. In the past it was (I
assume) finding this dependency inside of the React package - but in
React 15.4.0 the ""secret"" copy of ReactDOM was split out completely
into it's own module.[1]

It seems like we should be able to use `scripts/module_map.js` to
specify the mapping of `ReactDOM` to `react-dom` but updating that was
not making a difference to Flow, so I added a mapping option to the flow
config.

[1]: https://facebook.github.io/react/blog/2016/11/16/react-v15.4.0.html#separating-react-and-react-dom",False
2c72b2fe453d55afc37b99a5ec71f0f1a2ac44b3,2016-11-27 02:27:56,Paul O’Shannessy,"Restore 15.4 range, fix module-map (#801)",False
843cb5cc41c4e3498ef043ec8e72ced93883e2fe,2016-11-23 21:25:57,StGeass,Fix advanced topics custom block render docs: Remove extra line in default block render map list (#803),False
003741d547083e5eb1ab8bc8db501d7a65444f09,2016-11-22 22:42:58,Flarnie Marchan,"Temporarily limit versions of React allowed (#800)

It appears that some change in React 15.4.0 is causing builds to fail in
CI. [See issue #779.](https://github.com/facebook/draft-js/issues/799)

While we figure that out, let's limit the versions that will be used.",False
db5e4368b49be4a8cce766a1b0db5e3f57a9b0c2,2016-11-16 08:37:27,David Chang,"fix link that wasn't in markdown format

fix https://github.com/facebook/draft-js/issues/784",False
4dd0e6f368a6e84ce042db51b40338ebc857aba9,2016-11-09 23:44:15,David Chang,"Merge pull request #774 from smtheard/patch-1

[documentation] Include reference to example for convertFromHTML",True
71f5e6d575e5af936ec7f4c9f0cf94a891b127cb,2016-11-09 23:42:31,Stefan Theard,update code snippet to match html example based on @davidchang  input,False
ef5569e24fc3bf5f6dc8f9c6a4194bd6253e4096,2016-11-09 02:49:29,Stefan Theard,"Include reference to example for convertFromHTML

This doc page is the first place people find when looking for information on convertFromHTML but the original code sample is not very useful. This hopefully will give people a better idea of how to use the function and then a reference to where I found the code snippet.

Should close #236 as well.",False
341a49d01a492ff5a55a3ee8056e007538e2289a,2016-11-04 07:47:55,David Chang,"Merge pull request #761 from inlinestyle/by-update-editor-state-set-inline-style-override-docs

Update api docs for EditorState.setInlineStyleOverride",True
1f991cf0a474e740be931660a91140014b6fd6ae,2016-11-03 21:14:49,Ben Yelsey,Update api docs for EditorState.setInlineStyleOverride,False
05d020c2348bd325ae93b386348d96241a81d0f2,2016-11-01 23:29:25,David Chang,"Merge pull request #735 from superKalo/feature/link-example-edit-existing-url

Feature / Link Example: Pre-fill the URL Input with the Current URL (if any)",True
6d5c4e91ddf42d7fa3f6ef310f8afae6378b07d4,2016-10-31 21:49:52,David Chang,"Merge pull request #746 from makenosound/fix-createfromblock-array-empty

Ensure `ContentState.createFromBlockArray` creates with an empty array",True
67deea8153c993fa8fb8689158654cac24444051,2016-10-28 07:04:28,Max Wheeler,Ensure `ContentState.createFromBlockArray` creates with an empty array.,False
8ac72f723fb2d9102db833a9b060dfd66df65652,2016-10-26 22:24:03,Tyler Craft,"add image support for convertFromHTML, along with new example (#734)

* add image support for convertFromHTML, along with new example

* Update example page title

* Chrome fix

* clean up requires",False
5a36195d124990a082498665f6824ca96ab51e09,2016-10-25 03:42:18,David Chang,Update README.md,False
0e48cf5e09d6d60a5c4de0cd0255927a763ced9e,2016-10-24 15:40:14,superKalo,Fixed: cover the case when the selection is not in the beginning,False
1f3284de1b11f37d924f585a0a56201893de341d,2016-10-24 15:20:26,superKalo,"Added: pre-fill the link prompt input with the current url
When adding a new link on top of another link, pre-fill the input with the current url value.",False
bb6175cb5038acee8abec3c0a696e4eef5b30e01,2016-10-20 06:19:53,David Chang,Update Advanced-Topics-Custom-Block-Render.md,False
e0c6e1db2ed82af802023e25b16cfdfc4c89cd88,2016-10-20 06:18:58,David Chang,"clarifying on element: wrapper relationship

per https://github.com/facebook/draft-js/issues/725",False
449fea4723498143ae3c99a2a1702c6dcedae78f,2016-10-20 02:57:48,Ben Alpert,"Fix repeated backspace, other internal components (#727)

I can't describe entirely why the DraftEditor.react change here is necessary, but this is closer to what we had before #666.

The editOnSelect change fixes holding down Backspace in Firefox -- before this, the cursor would jump to the start of the input.",False
07b1eb847fb801d61b41a7a03c7c26c80cca5478,2016-10-18 00:51:08,Ben Alpert,"Fix dead key deletion (#666)

* Remove unused render guard logic

* Fix dead key deletion

If you type Option-E, Backspace, then the in-progress accented character should be deleted. Similarly, in 2-Set Korean, if you press A, Backspace, the character should be deleted. Both of these don't work correctly yet, but this commit fixes it.

Currently, when you press Backspace, we are in composition mode and we receive a compositionend event then a keydown event for the backspace. Our composition handler doesn't exist composition mode immediately but rather waits 20ms to see if it gets a compositionstart event immediately (and if so, does not exit). It seems like if we receive a compositionend event then a keydown, we always want to exit composition mode immediately and re-interpret the keydown in edit mode. Here I do so.

This change is made trickier by the fact that each event handler reads from `this.props.editorState`, which doesn't get updated until the next rerender (that is, not synchronously). To combat this, we store the most current editor state in an instance variable and refer to it from all of the event handlers. (If we don't do this then the backspace isn't interpreted correctly by editOnKeyDown because the character data from compositionend hasn't been inserted into the editor state, so we'd end up effectively dropping the entire composition as well as deleting the preceding character.) In this commit, only editOnKeyDown needs the latest state but I changed the others for consistency. In cases where the parent always updates editorState in the same tick (as we recommend in the docs), there should be no behavior change.

Note: This also brings us closer to being able to handle cases where we don't always receive editorState synchronously -- instead we could store our own copy of the editorState locally but overwrite it with props when we receive new ones. It doesn't work yet though.

Test Plan: In plaintext example, type Option-E, Backspace (with US keyboard) or A, O, Backspace, Backspace (with 2-Set Korean keyboard). In both cases, the entire composition is deleted correctly.",False
91293499645ea991a30a98c1c20c22996661765a,2016-10-14 05:45:55,Paul O’Shannessy,"Upgrade babel-preset-fbjs (#705)

This fixes 2 issues when Draft is a dependency of a project that is
using Flow.
- `typeof` import now rewritten correctly
- `__DEV__` declaration is now inlined",False
478e0efd4390c6a629cf27e5ad97b4ca93b72734,2016-10-05 22:54:54,CT Wu,"Fix react-unknown-prop warning in the tweet example (#620)

* Fix react-unknown-prop warning in the tweet example

Ref: [https://facebook.github.io/react/warnings/unknown-prop.html]()

* Add data-offset-key",False
1559e9f753d217fb9c3c85f4cf13169641d7ebc5,2016-10-05 02:35:14,Anchen,"Fix/tex example (#699)

this pull request fixed broken Tex example by removing outdated syntax that changed
in #376.

refer issue to #697",False
8c9afc4db65677f730561f4f7d3f862860ec1c69,2016-09-27 03:56:29,Patrick El-Hage,Fix URL linking to RichUtils module (#687),False
36b0e719bd73d899e21225fa31721f3de7b487ee,2016-09-27 03:53:39,Flarnie Marchan,"Fix link and media examples (#679)

The link and media examples were using an outdated syntax that changed
in [#376](https://github.com/facebook/draft-js/pull/376).

Old syntax:
```
const entityKey = Entity.create('LINK', 'MUTABLE', {url: urlValue});
```

Correct:
```
const contentStateWithEntity = contentState.createEntity(
  'LINK',
  'MUTABLE',
  {url: urlValue}
);
const entityKey = contentStateWithEntity.getLastCreatedEntityKey();
```

Also while working on this, removed the 'require' of 'Entity' in the
'entity' example.",False
69890ed57b5f4256cc93ae8e9ea178296851a23e,2016-09-21 22:33:15,Ricky Vetter,"Merge pull request #677 from flarnie/fixIssuesDocs

Update docs to remove 'React ContentEditable Warning' issue",True
830f687d8403d9421f8f2fd53a4cdd16650cbbb0,2016-09-21 04:48:40,Flarnie Marchan,"Update docs to remove 'React ContentEditable Warning' issue

The issue with 'React ContentEditable Warning' was resolved when React
added the 'suppressContentEditableWarning' option[1] and then we used it
in Draft.js[2]. This doesn't need to be in the docs any more.

[1]: https://github.com/facebook/react/pull/6112
[2]: https://github.com/facebook/draft-js/pull/98",False
98a84cd4154ae8254c81152005d2b11918a7db66,2016-09-21 01:45:17,Stepan Parunashvili,"fix keyseq error (#663)

Summary

convertFromRawToDraftState had a typo in the code, keyseq should have been keySeq. Seen on #660

Test Plan

Run the entity example, and make sure the convertFromRaw function works",False
b35ab7f534a6d1e401810d64d695ccff4bc1bb97,2016-09-20 11:12:43,Flarnie Marchan,"Update Flow version to 0.32.0; fix flow error in DraftEditorDragHandler (#670)

Version 0.32.0 of Flow introduced a flow error into Draft.js. We are
using 0.32.0 internally at Facebook and need to fix this Flow error in
order to upgrade to Draft.js 0.9.0 internally.",False
d5935f2f02bce263a7093e64945c5b5b26fdb20f,2016-09-20 08:13:49,Ben Alpert,Remove unused DraftBlockTag (#669),False
c6274c592fc1aef58b8e30c289f323f5ede148fc,2016-09-16 00:43:27,Łukasz Adamczak,Add missing contentState argument to strategies (#658),False
6b70caef74e0be698949dbd9626754e436810c74,2016-09-14 22:46:07,Tyler Craft,"Edit on paste truthy fix (#654)

* editOnPaste always created a block",False
5473e5b375574f01591de98ce8c0645ee1b57dd6,2016-09-14 05:55:17,Paul O’Shannessy,"Use a stricter lint config (#653)

This will ensure Travis will fail for what were previously warnings.
This also fixes an existing issue.",False
5d19b1d4684b58ff05e0f7199ac66406da400f4e,2016-09-14 05:52:48,Quinn Rohlf,"RichUtils onBackspace: remove entire atomic block (#613)

Previously, RichUtils ""removed"" atomic blocks via
Modifier.removeRange/removeRangeFromContentState.
This was problematic, because it preserves the
atomic block properties and merges the end block
content, resulting behavior where atomic block
data would transfer to unstyled blocks.

This change addresses those issues by removing
the atomic block entirely from the blockMap.

Fixes #554",False
8f679a52dab54f2b54764b497f3f962e888346e5,2016-09-14 05:31:40,Paul O’Shannessy,Upgrade eslint-config-fbjs & switch flow plugin (#651),False
a0c1ce9aee485a24a57d3c2fb583466efaff1c1f,2016-09-14 05:31:29,Stepan Parunashvili,Add an example jsfiddle to the issue template (#650),False
5d5f1b4b89c509d17697965ce9a0d596ed220c43,2016-09-14 05:30:45,Johannes Lumpe,"[WIP] Moving entities into content state #185 (#376)

* Initial demo changeset for entities in content state

* lowercase string

* add entity methods to content state

* remove `DraftEntity` module

* remove some `DraftEntity` requires

* fix linting issues

* fix flow issues

* update `DraftPasteProcessor` and `convertFromHTMLtoContentBlocks` to work with passed-in `ContentState` instance

* remove last traces of `DraftEntity` module

* allow second argument for `createFromBlockArray`

* use `contentState.getEntity` instead of pulling out entity map first

* match exported function name

* re-sort requires/imports to: classes, functions, types

* respect 80 char limit

* switch from random entity key to number

* pass around `EntityMap` instance instead of `ContentState` when creating new html fragment

* set new `entityMap` when regenerating block tree during editor state update, as the ""current"" content does not yet contain it

* change entity key to be a numerical string to prevent enity-not-found error  when using stringified key

* fix flow errors",False
4e4ad9805d3e112ae30df20becbd3f0ba0de5683,2016-09-14 04:33:31,Flarnie Marchan,0.9.0 (#652),False
eee83f5b0bf349633583c2bdcef8ee39a8032fef,2016-09-14 03:08:31,mferranti,#648 - Include endKey selected block on hasAtomicBlock analysis (#649),False
5f7187989157c9a05f8ce93b7c7250fbfa409cdf,2016-09-13 23:59:43,Dmitrii Abramov,jest@15.1.1 (#639),False
684e37d2b3346e0d7ec6ef54ecd3a1fdaa39c1b6,2016-09-13 23:54:34,JiangShui Yu（浩睿）,"Add parameter intro to convertFromHTML document(#643) (#644)

fixed #643",False
a16bc55bf8297af627e8a4cfe5f283f88e7fc8bd,2016-09-07 00:05:06,Isaac Salier-Hellendag,"Fix failing test and lint (#633)

Fix internal test failure and lint issues for internal sync.",False
0873a4c567c29a0be6660093276963c97b1dfb7e,2016-09-06 06:43:03,Ben Alpert,"Enable tab/shift-tab in rich example (#611)

Also sync rich example with homepage.",False
d1ec6f5b84d9ba56dbf94702a49f8809159cc2bd,2016-09-05 22:31:49,Ben Alpert,"Fix React children mutation warning (#610)

Fixes #590.",False
c456bcb51a7379abc49200709c0e6d3ae4f59adb,2016-09-05 04:56:44,Flarnie Marchan,"Add table styles to documentation (#629)

We have a PR to add a new page to the docs,[1] and it includes a table
showing the mapping of block types to elements. However, we don't have
good styles for tables in the documentation.

[1]: https://github.com/facebook/draft-js/pull/387

Adding these styles should unblock that PR so we can merge it and update
the Draft.js website.",False
ea29a44f745b17d5cc793ccc5fe4f967df04d4ad,2016-09-05 04:55:58,David Chang,"small docs corrections, update handleKeyCommand docs to return DraftHandleValue type (#630)",False
8ee97d17da073baf9fc5d71adbc3597779e7522d,2016-09-05 04:55:24,Ron Baker,"Minor fixes (#628)

* Fix typo analagous

* Fix typo existance",False
e035cc3b99124f9f97a8ed42d69658d24059b34c,2016-09-04 19:50:45,Mitermayer Reis,"Adding missing documentation to BlockRenderMap and updating documentation for data conversion (#387)

* Adding documentation to BlockRenderMap

- Including documentation for BlockRenderMap
- Updating the data conversion for convertToHTML",False
5be5f0bdc04c682c76a6ebeb17cbec35e2d0615d,2016-08-19 22:41:18,Kevin Lacker,"Put Draft.js on its own Google Analytics account (#605)

Instead of vjeux's personal one that is shared with other projects.",False
3747afb0f0b6251968a83745a9bbe53c000d134f,2016-08-19 06:24:11,Paul O’Shannessy,"Remove react import, use React$Element (#604)",False
9ce1bab81cd006666a1a47b724e7c06f97c4ea1f,2016-08-18 01:41:24,Bryan Smith,"Preserve depth of all block types when converting to raw (#588)

fixes #381",False
4538fc39bccb055ac6a3825f067196a18b1261bd,2016-08-18 01:40:46,Bryan Smith,Add change-block-data to EditorChangeType docs (#591),False
b4afd3c6aa5dd7203362beff3d1b020738a69cf6,2016-08-17 22:03:36,Johannes Lumpe,"Convert handler signature to return a `DraftHandleValue` value, instead of a boolean - #339 (#340)

* Added new type file and updated editor props return types

* Checking for `handled` return value, instead of boolean

* Updated type description

* Updated docs

* Use `isEventHandled` utility to check for handled event instead of raw string comparison

* handle `true` value for backwards compatibility",False
628aeb6fc760cacb292efb30b9a69cdf3da4a106,2016-08-16 22:31:13,Tyler Craft,Update version in package.json,False
4d8482b3f59bd97de74b21cb871733e6afecca15,2016-08-12 22:09:54,Tyler Craft,0.8.1 (#597),False
837ee1b7f00a4d1608f2a462c40da2707eb124e0,2016-08-12 22:00:46,Tyler Craft,Tex example deps fix (#596),False
205d87da4176312770d512288a231abd64e40c75,2016-08-12 21:15:09,Paul O’Shannessy,Include object-assign in deps (#595),False
1aa8db18e0be3cf34cf567eaec8c26a684415ab9,2016-08-10 02:28:31,Isaac Salier-Hellendag,Lint fixes (#589),False
173076f2440c19268b52fa64309e9e44cecec9fa,2016-08-09 23:42:25,Isaac Salier-Hellendag,"Merge pull request #585 from tylercraft/draftjs-08

Release 0.8.0",True
d9d4c342785a5588f6055bdb8a18bbe6db4430e6,2016-08-09 23:39:16,Isaac Salier-Hellendag,"Merge pull request #587 from hellendag/read-only

Fix nested editable elements in readOnly editor",True
7ff71193f0124b6cc77b3294d6a05a1a9a7ca1ee,2016-08-09 22:40:10,Isaac Salier-Hellendag,"Fix nested editable elements in readOnly editor

The introduction of `user-modify: read-write-plaintext-only;` ends up breaking readOnly editors with nested editable content, as the cursor jumps back to the top-level editor when focus changes.

Fix this by applying the `user-modify` value only if the content node is editable.

Test Plan:

  - Run TeX editor.
  - Click a formula. Type inside the textarea. Verify that I can do so.",False
0b26f6bdf1249594897fabc2f3477d742a2b11ff,2016-08-09 00:55:27,Tyler Craft,Release 0.8.0,False
161dfa1787de1bcf69e5950d47999c748a776390,2016-08-04 10:26:10,Isaac Salier-Hellendag,"Merge pull request #354 from bold/customStyleFn

Adds customStyleMap for more control over inline style ranges #342",True
f2060e863de7e35f7d7efb592f63982864f1e8d9,2016-08-04 10:23:17,Isaac Salier-Hellendag,"Merge pull request #563 from vierno/code-tweaks

Code tweaks for FragmentIntoContentState tests",True
d236aeaa285cfe869fb766f2e2db58d91be031ca,2016-08-04 10:22:56,Isaac Salier-Hellendag,"Merge pull request #569 from gscottolson/patch-1

Docs: Update return type for `tryToRemoveBlockStyle`",True
591bb802d91ee819819e0adc8d5754bd4b7c19f7,2016-08-04 10:22:33,Isaac Salier-Hellendag,"Merge pull request #564 from SecurityInsanity/master

removes snoflwake tex linting, and lints examples",True
889cabcc0adb91d82d82942822d1efce001db8b6,2016-07-29 02:29:52,G. Scott Olson,"Update return type for `tryToRemoveBlockStyle`

Correctly specify return type of `ContentState`
https://github.com/facebook/draft-js/blob/9d3da64afb2a514fc4d3117e47b05e4f87df1d25/src/model/modifier/RichTextEditorUtil.js#L395",False
92991b8f69b2f0e0d9850ecd6a0826c98dde751f,2016-07-27 18:36:52,Eric Coan,"removes snoflwake tex linting, and lints examples

fixes #536

this removes the special tex example linting. that had it's own
copy of eslint linting just itself. after removing eslint i removed
dependencies i didn't see were being used. after that it failed to
build, not reconizing the jsx/import statements. so i added the two
babel presets to handle that. (react, and es2015 presets).

next this starts linting the `examples/` directory. this should
introduce no new warnings/errors. as only the tex example had two
things that didn't comply (trailing commas, which have been fixed).",False
9b5666e560371155229408aa2060b59c1e830216,2016-07-26 22:07:41,Guilherme Vierno,Code tweaks for FragmentIntoContentState tests,False
4cb881139e34b9bac84ed5847e010e3a495bd56f,2016-07-25 02:43:36,Isaac Salier-Hellendag,"Merge pull request #374 from mitermayer/adding-extra-supported-whitelist-for-entities

Adding more attributes to convertFromHTMLToContentBlocks entity whitelist",True
4e65d539a9a973f5eb2cd4c91d8dd168fb859b72,2016-07-25 02:28:09,Isaac Salier-Hellendag,"Merge pull request #559 from mjomble/link-paste

Added test cases for pasting mailto: and javascript: links",True
e4c66ad219f03d8450fd651634f254b776530256,2016-07-24 18:32:26,Andres Kalle,Added test cases for pasting mailto: and javascript: links; corrected indentation,False
b5d87c2765f7a6e72cd0ae6618682e8d0c5556a3,2016-07-19 09:35:32,Ben Alpert,"Merge pull request #545 from SecurityInsanity/master

fixes selection-state with -webkit-user-modify",True
9ffe7018621dd9e49505e1f729600c9f7f147489,2016-07-18 21:33:54,Eric Coan,"fixes selection-state with -webkit-user-modify

turns out chrome (at least) would incorrectly not erase the placeholders
with -webkit-user-modify being applied where it was.
this was totally an oversight on my part not testing after taking
the lucidity designs comment in PR 509.

Testing this time in my normal suite of browsers (firefox, chrome, safari)
this commit moving the selection state to just target .public/DraftEditor/content
fixes the selection state problem.",False
26182e36549803698e86594d0c273b7dfbfdebcf,2016-07-17 06:02:46,Isaac Salier-Hellendag,"Merge pull request #477 from ouchxp/master

Decorator do not have `data-offset-key` attribute. Fix `getSelectionOffsetKeyForNode` function",True
6cd4391f9d82e59f9cbf233fe9b697d22dc8d91b,2016-07-17 05:50:39,Isaac Salier-Hellendag,"Merge pull request #509 from SecurityInsanity/master

removes iOS format tooltips everywhere",True
6a75729726c0f6b54112b51506843553b78771ab,2016-07-17 05:49:33,Isaac Salier-Hellendag,"Merge pull request #518 from zpao/travisupdate

Update Travis CI config",True
745c175d486204e1467bff7abe2ae819f6b2d168,2016-07-17 05:48:36,Isaac Salier-Hellendag,"Merge pull request #530 from vierno/metadata-block-insertion

Use block level metadata into fragment insertion",True
3c50c4c383b150cee44efeb50f3eff206ef93793,2016-07-17 05:43:03,Isaac Salier-Hellendag,"Merge pull request #533 from mjomble/patch-1

Accept pasted mailto: links",True
932349e2f4c62d8bd1ce0c7ffef20b4e18fed043,2016-07-16 22:54:03,Eric Coan,Moves iOS tooltip to root content,False
60b6538f83d4b3a1d293421759255c3104684a7b,2016-07-13 04:04:11,Paul O’Shannessy,"Merge pull request #535 from zpao/eslint-fbjs

ESLint upgrade, use new fb lint config, fixes",True
88f4074b85867cbaae0444809681efe9f3aa023e,2016-07-13 03:31:22,Paul O’Shannessy,Fix existing lint warnings,False
873a2deb999dd415f1d9f03df0f05b3c8ec63040,2016-07-13 02:42:18,Paul O’Shannessy,Use eslint-config-fbjs for lint,False
96c320b7b6c4a5985b0d1ae1814d711d15b19625,2016-07-12 22:19:34,Andres Kalle,Accept pasted mailto: links,False
b12d7244b9068018a6850d0b88f8bd5bd6dd97d8,2016-07-12 01:25:57,Guilherme Vierno,"Use block level metadata into fragment insertion

Fixes a situation when you insert new blocks with metadata,
eg using Modifier.replaceWithFragment. If the fragment have data,
it wouldn't be present on the resulting ContentState.

insertFragmentIntoContentState now uses the metadata of the
block or blocks inserted.

Adding test scenarios with the new functionalities.",False
4da7d0a00fbfdcb3db4869d8e824f2c43e2e1c00,2016-07-07 06:12:10,Paul O’Shannessy,"Add build to Travis matrix, check everything is requireable

This ensures that we won't commit a change that breaks the build. The
postbuild hook ensures that every compiled file is requirable. This
*shouldn't* be an issue but it's a good thing to protect against.",False
e35d8dfa11e41e3cb42dd1ae24b65dc667eaad5f,2016-07-07 06:12:09,Paul O’Shannessy,"Expand the matrix for finer grained results

This allows Flow results to fail distinctly from tests, making it easier
for contributors to understand their issues quickly.",False
3ebdda1dca6319334b208056d4b38cf44d690087,2016-07-07 05:26:06,Paul O’Shannessy,"Update Travis CI config

- reorder for better readability
- add the Node v4 build requirements
- start pruning and updating npm deps so the cache doesn't get stale",False
c24785476fdfdd898bf553c29036a40436dda58e,2016-07-07 05:25:27,Paul O’Shannessy,Update Flow comment supression regex (#514),False
789c525dee69c89bb0a88cdf4a810618088fb4fb,2016-07-07 05:12:28,Paul O’Shannessy,"Update fbjs dep to 0.8.3 (#517)

This should ensure that Flow will pass and nobody should get stuck with
a version of fbjs that isn't compatible with the version of Flow we use.",False
7905886766326a3f40fe917e9ff0c1a0c53bd8bb,2016-07-06 05:57:28,Isaac Salier-Hellendag,"Merge pull request #513 from hellendag/templates

Create PR and Issue Templates",True
77702809fd063149ae8ca882ed6e5fc0f71881d7,2016-07-06 05:55:57,Isaac Salier-Hellendag,Remove React jsfiddle template for now,False
000bf2039e2d23d8e14aa0024ae8ad891c1e8414,2016-07-06 05:52:07,Isaac Salier-Hellendag,placeholders,False
43055e2e3a0bd4133b1d8c6e11ec556dffb4fca4,2016-07-06 05:51:33,Isaac Salier-Hellendag,A little more text,False
c2e18a33c726157b013ec805e472e676e97a9bdf,2016-07-06 05:47:46,Isaac Salier-Hellendag,Forgot my PR template,False
6aa7d70b5706ac41a930ad60a07b359c6859fdff,2016-07-06 05:39:19,Isaac Salier-Hellendag,Add templates for Issues and PRs,False
8fb61e9f8be9f330a3ce7f5ec1fac1b645bdd656,2016-07-06 04:04:27,Jeff Morrison,"www -> Flow v0.28

Reviewed By: mroch

Differential Revision: D3517879

fbshipit-source-id: 041ada5ccdd0464b9a261954d96518fcb14c528c",False
d9a1898985549e22b9854719f85ac099e7a0ab25,2016-07-06 00:19:10,Paul O’Shannessy,"Generate .js.flow files

Summary:
> I've done this before, it'll only take a few minutes
> — zpao, before he realized upgrading Babel was a prereq

The main goal here was to generate `.js.flow` files and fix #366. Then I needed to upgrade Babel, which meant using the new fbjs preset, which then needed to be updated as it wasn't as done as we thought since Draft has different considerations than fbjs. So now we need https://github.com/facebook/fbjs/pull/147 and https://github.com/facebook/fbjs/pull/148 to land there and ship before we can take this.

The [diff of lib/](https://gist.github.com/zpao/32c511aa1151aef1009eccb4f1cf0a5f) is pretty boring. Mostly it's a result of a few things:
- the helpers are different, this is particularly noticeable for classes
- code generation around comments got better - previously block comments near rewritten nodes (notably `require`) would be moved but now stay where they should
- conversely there are a bunch of newlines being inserted now. win some, lose some.
- a few errant `__esModule` markers
Closes https://github.com/facebook/draft-js/pull/389

Reviewed By: hellendag

Differential Revision: D3512297

fbshipit-source-id: 440de7b0f8110a850d20aa2dc420fd5638e1878a",False
bec44d508c170223a55955abb32f59b92a9cbc75,2016-07-04 14:40:21,Eric Coan,"removes iOS format tooltips everywhere

fixes #214

thanks to @bradleyayers excellent digging it turns out there's a
CSS property you can assign to disable the bold/italics/underline
for iOS. although you can techincally apply this style seperately
, since the editor breaks due to the unexpected dom mutations i
think it's best if this actually gets defaultly added to the root
of the editor. which this commit does.",False
249d7b865ecddf3800212703bf606264d72fd1f9,2016-07-04 09:18:15,ouchxp,Fix style and comments according hellendag's note,False
bda9b78a54e7b456e8833f41df2138349d3e7b03,2016-07-04 07:49:12,Isaac Salier-Hellendag,"Merge pull request #508 from LordLambda/master

removes window.prompt from media example",True
8099c0d34823de81d88b03304e0794ef2a855ced,2016-07-04 06:21:22,Eric Coan,"removes window.prompt from media example

fixes #463

this fixes two things:
1. it fixes #463 where if you inserted a blank string for a piece
of media the editor state would be set to null.
2. the media example no longer uses window.prompt which previously
broke selection state. instead using an input like the link example.

it should be noted though that with this commit it's possible to
insert a blank url for media. i initially was going to add protection
for this, but after looking at the link example it appears the link
example doesn't care if you enter a blank link.

looking at the media objects generated for mp3/mp4 the play bar is still
there, and image is a whitespace. i'll happily add in a safeguard if
it's determined that's ""unwanted"" behavior. however I decided to stick
with consistency with the other examples for this commit.",False
dff7d16e6ec8a9cd715de95159856bbb0f84319f,2016-07-04 00:31:37,Isaac Salier-Hellendag,"Merge pull request #492 from CLowbrow/docs-paste

Add style un-setting to paste handler",True
7fe617d065a7d23a3a81ff35db0cb1d8011df141,2016-07-01 06:19:21,Cedric GESTES,"block level metadata

Summary:
This commit add support for block level metadata.

It is the same feature as https://github.com/facebook/draft-js/pull/157

This PR does not rely on entity, but just add a data field to ContentBlock.

hense block metadata are store in contentState and are supported by undo/redo.

Why not using entities?
- Entity are not made for block. what does type and mutability would map to?
- Entity are planned to be integrated into contentState anyway (see #185)
Closes https://github.com/facebook/draft-js/pull/216

Reviewed By: spicyj

Differential Revision: D3123774

fbshipit-source-id: 27fdf0090d8faafba2848cb72f584987af3bbe0e",False
b0ee1a80e8365765a49f1e35c756f1e96f14d797,2016-06-28 02:05:40,Alex Z,"Update ambiguous handlePastedText docs

Summary:
handlePastedText docs don't say what the return value does. This came up in the slack.
Closes https://github.com/facebook/draft-js/pull/495

Differential Revision: D3489439

fbshipit-source-id: 1ce7a1f585332daa60c5e1f114884b0941021dd6",False
c6d74aed6acf5fb06d88a0529c4744f9cf308772,2016-06-27 04:01:06,Alex Zelenskiy,Add style un-setting to paste handler,False
3574709da8e811a7d8b91ff5a2fe1b0f10b69d69,2016-06-25 06:34:21,Paul O'Shannessy,"Codemod to use comma in Flow Object Types

Reviewed By: cpojer

Differential Revision: D3440404

fbshipit-source-id: e8030e9f468037c19c18c45c98d23f4817585ab4",False
0d5124ead59cef45d3620e4098b1a456f634d359,2016-06-21 22:18:58,Paul O’Shannessy,"Lock gulp-header at 1.8.2

Summary:
This works around the regression that 1.8.3 introduced.

Fixes #475.
Closes https://github.com/facebook/draft-js/pull/479

Differential Revision: D3463512

fbshipit-source-id: 27a6792c27ec0490e3e7d55b8d32159fde038518",False
27a83d2bc4b69f8800e7a771b90960ce83676e76,2016-06-21 04:41:54,miter,Fixing tests,False
73cd60aa6065e01552c874ba7b3ba8a05622c5f8,2016-06-20 21:19:02,Bradley Ayers,"Switch to the more conservative Immutable.js ~3.7.4 version to avoid upstream flow definition errors.

Summary:
The `3.8.x` versions of Immutable.js have changed `#toOrderedMap(): OrderedMap` to `#toOrderedMap(): Map` which breaks Draft.js — so I propose we use `~3.7.4` instead of `^3.7.4`.

Draft.js's definition of `BlockMap` is `OrderedMap<string, ContentBlock>` which is not compatible with `Map`.

In the interim (until Immutable.js makes a decision as to whether `#toOrderedMap(): Map` is correct) using the `3.7.x` range allows Draft.js `master` to pass flow checks.
Closes https://github.com/facebook/draft-js/pull/468

Differential Revision: D3456991

fbshipit-source-id: 0e9a176d800d3216d30b00ae1da1a682ee93273b",False
10105599918fb58dd4b41a4880b9e3ccbae61e61,2016-06-20 10:53:45,ouchxp,Decorator do not have `data-offset-key` attribute. Fix the implementation of `getSelectionOffsetKeyForNode` function to resolve the `data-offset-key` from decorator's children and fix tests.,False
32c0412d464e4951550d07dd95d0ce7fdf12e87b,2016-06-20 09:03:58,Eric Coan,"handle xml carriage return, and zero width spaces

Summary:
Fixes #274

ignores carriage returns from xml entities, and also their zero-width-spaced
bretheren.
Closes https://github.com/facebook/draft-js/pull/361

Differential Revision: D3456170

fbshipit-source-id: da585741c000f87d9b236d573c4e9d5315c595c2",False
49766c290c379018a2dc306b6558d22e226807a6,2016-06-18 00:34:00,Paul O’Shannessy,"Upgrade Jest

Summary:
Might as well.
Closes https://github.com/facebook/draft-js/pull/472

Differential Revision: D3451299

fbshipit-source-id: fadefd301f78637c0041b8949f181f0114faf1ef",False
306ec47764f86ffe0da52fc3d47160e305531aeb,2016-06-17 05:53:13,miter,Removing Flow Object casting,False
0ca47db11111a9dee8aae0f419448653a7646e35,2016-06-17 03:24:56,miter,Merge branch 'master' into adding-extra-supported-whitelist-for-entities,True
b84ac070fde0017d97789010233e0427dbefb838,2016-06-17 03:23:27,miter,Merge branch 'master' into adding-extra-supported-whitelist-for-entities,True
98ac53ff34fa28c8bc8d93f5a14f9d8ee73661ce,2016-06-16 23:04:01,miter,"draftBlockRender-compatibility-with-custom-blocks - Making sure user …

Summary:
Having the nullthrows defined for the blockRenderMap meant that any custom block that defined a type would have to also add to the blockRenderMap.
Closes https://github.com/facebook/draft-js/pull/372

Reviewed By: ezequiel

Differential Revision: D3444496

fbshipit-source-id: 02b82474cba790d5423234ef4afe0e18b6853cda",False
1ffa0cc0e64c5417b4eaa63371a3a6cc7640b457,2016-06-16 05:49:07,miter,"minor-fix-for-getting-supported-tags - Making sure the supported tags…

Summary:
Making sure that we always return a valid array of tags

- Before this fix we could sometimes have 'null' as part of the set depending on how the blockRenderMap has been defined, since they could have defined just a wrapper renderer and no element.
Closes https://github.com/facebook/draft-js/pull/373

Differential Revision: D3441519

fbshipit-source-id: 10da42187dde77058cb5a92fc53d9aef4279b033",False
6eee19c0338c69ffdc91f68e695791febabd1c08,2016-06-16 05:34:01,Loic,"Remove extra spaces from the text decoration style

Summary:
Fix IE issue raised in #377
Closes https://github.com/facebook/draft-js/pull/378

Differential Revision: D3441476

fbshipit-source-id: cafc837bb0ae52d75ab50364420142e2afcc939e",False
314dc5ad918ef3ae4f1feb15bf9fb50458a38ee9,2016-06-16 05:34:01,Paul Young,"Fix a typo in the comment for blockRenderMap

Summary:
FWIW, this doesn't appear to be used in any generated documentation.
Closes https://github.com/facebook/draft-js/pull/447

Differential Revision: D3441359

fbshipit-source-id: d29c6d29fdad646a965c27d09ebfaefffc7ff6df",False
217e5132209c79b9c5bbca7582624e67be231d39,2016-06-16 05:19:01,Aviral Dasgupta,"Correct RichUtils.handleKeyCommand return type in docs.

Summary: Closes https://github.com/facebook/draft-js/pull/460

Differential Revision: D3441314

fbshipit-source-id: 26731776baaa5567754743c06d3dd75b0d1856cd",False
083f3f6beb73e43969c9f41d8a121a134ad24c68,2016-06-16 02:49:06,Eric Coan,"removes non-existant ""undo/redo"" from docs

Summary:
fixes #462

in the api reference for editor state under the ""push"" method there
was a link to a non-existant ""advanced undo/redo"" page. since this page
didn't exist we should just remove it, and add it back in if it ever
comes to fruition.
Closes https://github.com/facebook/draft-js/pull/469

Differential Revision: D3439705

fbshipit-source-id: 9250cbd3d82ffc6bc1cc7baec101e0afda42d7a2",False
f233b42ccdff63406c8e0c39fdb61af0e76c5f4f,2016-06-16 00:34:27,Brooks Lyrette,"Now uses internalClipboard when present and in Safari.

Summary:
After looking at how CKEditor I realized I was overthinking this. No extra clipboard library was need. The clipboard was already being stored.

The only drawback to this solution is that formatting is only preserved when cut and pasted within one editor instance.

Fixes #147
Closes https://github.com/facebook/draft-js/pull/285

Reviewed By: spicyj

Differential Revision: D3245884

fbshipit-source-id: 38a77227d6cad16e5114a419acc4ff792a55a453",False
3181012f7b171d4f6acd2c1b33cd01ab14af5798,2016-06-14 05:34:01,Jeff Morrison,"v0.27.0: www

Reviewed By: gabelevi

Differential Revision: D3422049

fbshipit-source-id: 55361b4c405a99e7d07e33c23c33ebb4ba93e9bd",False
bd74cf78af6a7f61a6b9bd7a7f493f0d9cc27307,2016-06-13 13:10:12,miter,Refactoring minor updates,False
d68fee0d53711014ffcb7d42f3ca2d641e677e98,2016-06-01 23:57:16,David Byttow,Removes unnecessary undefined check,False
f9ae680e5ee9ed2a995d007bd1def247df89685e,2016-06-01 23:50:38,David Byttow,Fixes previous merge conflict,False
a545ff959144deb754a82eec5d9b1f01a1385e97,2016-06-01 23:49:51,David Byttow,Fixes optional and adds a little bit of documentation,False
f6d5a3b5efab15b9db268ca6c9b49730da157eef,2016-06-01 23:49:51,David Byttow,Adds customStyleFn for more control over inline style ranges #342,False
8689bcd0a9b3aff402db0720789f3d4028645ef1,2016-05-28 05:40:33,Sam Pepose,"Codemod: replaced `jest.fn().mockReturnValue(x)` with `jest.fn(() => x)`

Reviewed By: cpojer

Differential Revision: D3360170

fbshipit-source-id: c133a2a2677b7dc72e2b8fbbdf1c9d70c4d69d85",False
1ce48f67728681fcb7c24a73ac26fa8b97a6e909,2016-05-20 07:33:57,Basil Hosmer,"explicit type args in static_upstream

Reviewed By: zpao

Differential Revision: D3315855

fbshipit-source-id: 147ca8b5faf8ad292c3cc8e171cec3b25412d09d",False
c6337f2af75db79850c9cab3c35b836f9170400c,2016-05-17 22:03:59,Gabe Levi,"Update static_upstream to use v0.25.0

Reviewed By: jeffmo

Differential Revision: D3308267

fbshipit-source-id: 43d72045bca7471eaae25fbf1b76dffd5ea6702a",False
325421dc7d049e6bd950abe7f61773225bf0e79d,2016-05-12 02:13:09,Johannes Lumpe,"Typo-fix: added missing paren

Summary: Closes https://github.com/facebook/draft-js/pull/383

Differential Revision: D3289131

fbshipit-source-id: 820ad689e19143e11b5486cdb83aa6cb71452dfa",False
ae55bee446558a3fadb57b28a443ec5517c45780,2016-05-11 23:22:21,Ben Briggs,"Improve variable use and names in joinChunks

Summary:
When making my own modifications to this function this bugged me a bit. Renamed `lastInB` to `firstInB` to match what it actually is and add parity for chunk `A` by adding a `lastInA` instead of manually slicing every time.
Closes https://github.com/facebook/draft-js/pull/379

Reviewed By: ezequiel

Differential Revision: D3286667

fbshipit-source-id: b30a1ff8fccc1d1e4accd29b3cfa3e099ed00c10",False
5476a16fb79a72b1e13e28a7d64541c763e220c8,2016-05-10 01:47:22,Marcel Cutts,"Corrected extremely minor typo in convertFromHTMLToContentBlocks.js

Summary:
A comment within `convertFromHTMLToContentBlocks.js` uses 'hare' when it should be 'here'.
Closes https://github.com/facebook/draft-js/pull/370

Reviewed By: ezequiel

Differential Revision: D3264867

fbshipit-source-id: f68c07a49c37ffce860307517ea26b5dd8683d07",False
4c682eef054973a0e4b814992aa6e235330e671c,2016-05-09 23:57:17,Johannes Lumpe,"Preserve pasted block type when pasting at the beginning of a block

Summary:
Fixes https://github.com/facebook/draft-js/issues/302.
Closes https://github.com/facebook/draft-js/pull/356

Reviewed By: ezequiel

Differential Revision: D3276799

fbshipit-source-id: 601d6603097396c74e2007e591f842d14385bba1",False
6ee39888022a5fb463ae1991fa9208ee1563b452,2016-05-06 10:40:48,miter,"adding-extra-supported-whitelist-for-entities - Making sure that entities also support other common attributes

- Including className, rel, target, title for entities. This is very important when using for pasting or importing HTML for compatibility with already existing apps",False
d2360b6ded6fae6acc4d845972763a9959528c95,2016-05-04 05:47:37,Isaac Salier-Hellendag,"Release 0.7.0

Summary:
Please see #355 -- the next release will most likely be in early June. :)
Closes https://github.com/facebook/draft-js/pull/364

Differential Revision: D3256442

fb-gh-sync-id: 3f3a4904565d720dcbe0a4755713115f17807c94
fbshipit-source-id: 3f3a4904565d720dcbe0a4755713115f17807c94",False
575e051369e11ecb9a362e843f557acc36d934b7,2016-05-03 22:37:20,Isaac Salier-Hellendag,"Rich example: Remove P

Summary:
I think this adds confusion, and it breaks spacing. I'd be happy to have a different example for this, but I don't think this is the right way to exemplify the block render map.
Closes https://github.com/facebook/draft-js/pull/362

Differential Revision: D3253192

fb-gh-sync-id: 557ba9096c66fb15af5c665d07db4b030c61ec5d
fbshipit-source-id: 557ba9096c66fb15af5c665d07db4b030c61ec5d",False
04bbb39c8c32c7bbd910145e0e71823f20d7f8b9,2016-05-02 21:12:22,Richard Park,"Fix rich example

Summary:
`rich` example is currently not working since `immutable` library and  `customBlockRenderMap` are not properly used. Updated after signing CLA.
Closes https://github.com/facebook/draft-js/pull/360

Differential Revision: D3247535

fb-gh-sync-id: d8d8b6ef567e3d65ab3d19c2501d65789a68a413
fbshipit-source-id: d8d8b6ef567e3d65ab3d19c2501d65789a68a413",False
9d3da64afb2a514fc4d3117e47b05e4f87df1d25,2016-05-01 08:22:29,Isaac Salier-Hellendag,"Fix deletion behavior around atomic blocks

Summary:
There is currently a selection state bug for deletion behavior around atomic blocks. Namely, removing an atomic block from a neighboring block will remove the atomic block but leave the cursor in an invalid state.

Make it so that atomic blocks will be removed during:

- Forward deletion from the last offset of a preceding block
- Backward deletion from the zero offset of a following block

tasti and I discussed whether there should be some special behavior for forward deletion from an empty preceding block, i.e. removing the current block and moving the cursor upward, but this seemed magical.

We can try this out and adjust the behavior as needed.
Closes https://github.com/facebook/draft-js/pull/332

Reviewed By: ezequiel

Differential Revision: D3245579

fb-gh-sync-id: a250cf87515f225d13e1da30023b9fb681e06ef5
fbshipit-source-id: a250cf87515f225d13e1da30023b9fb681e06ef5",False
3001e47907ce5ac28a0d5a25b0e144c48127d09a,2016-05-01 08:17:21,Johannes Lumpe,"Fixed applying entities across multiple blocks

Summary:
Fixes https://github.com/facebook/draft-js/issues/349
Closes https://github.com/facebook/draft-js/pull/350

Reviewed By: spicyj

Differential Revision: D3243261

fb-gh-sync-id: 1ad571819a839c256e2a91628e288ba7e0aba9b4
fbshipit-source-id: 1ad571819a839c256e2a91628e288ba7e0aba9b4",False
e2037984f32de4d3c267f6d43e0588fd124c0168,2016-05-01 08:13:04,miter,"adding-support-for-paragraph - making blockTypes configurable

Summary:
This fixes issue https://github.com/facebook/draft-js/issues/204

- Including paragraph on converter
- Updating website and demo
- Updating example
Closes https://github.com/facebook/draft-js/pull/205

Reviewed By: ezequiel

Differential Revision: D3147267

fb-gh-sync-id: ae51df9b838597066a699dced879b2795e59db26
fbshipit-source-id: ae51df9b838597066a699dced879b2795e59db26",False
5c957ad75d299fd77b098bed3965f753defc4d9a,2016-04-29 01:32:21,Sota Ogo,"Keeping the visual and aural experiences the same

Reviewed By: jessebeach

Differential Revision: D3232302

fb-gh-sync-id: 60cc28da92b34d14775b39532d491c0bc5ff6e02
fbshipit-source-id: 60cc28da92b34d14775b39532d491c0bc5ff6e02",False
0ef9dcb0b5da9d14cf7cd6335b48a410b638080f,2016-04-28 01:13:09,Sota Ogo,"Remove the use of the title attribute

Reviewed By: hellendag

Differential Revision: D3226729

fb-gh-sync-id: 236a3397ae8f0979975572262746e4a0115a24c8
fbshipit-source-id: 236a3397ae8f0979975572262746e4a0115a24c8",False
6e73b435fbf2643339e80aac9944912b30167c5f,2016-04-28 01:13:08,Isaac Salier-Hellendag,"Release 0.6.0

Summary: Closes https://github.com/facebook/draft-js/pull/343

Differential Revision: D3230727

fb-gh-sync-id: 000133d5f45648f42e7e913db108448e5f8dd1a6
fbshipit-source-id: 000133d5f45648f42e7e913db108448e5f8dd1a6",False
b252b70533e1420192b2f44e4e4c39ebe061bbfa,2016-04-27 04:47:23,Johannes Lumpe,"Prevent loss of entity during spellchecking

Summary:
Right now entities are lost when using the spellchecking feature of a browser. This change fixes that.

- [x] Fix `IMMUTABLE` entity undo bug
- [x] Completely remove `IMMUTABLE` entity and insert characters if spell change adds characters
- [x] Completely remove `IMMUTABLE` entity and insert characters if spell change changes characters
- [x] Completely remove `IMMUTABLE` entity and insert all characters if spell change removes characters
- [x] Completely remove `SEGMENTED` entity and insert characters if if spell change removes characters
- [x] Completely remove `SEGMENTED` entity and insert characters if character within entity is changed
- [x] Completely remove `SEGMENTED` entity and insert characters if character is added within entity
Closes https://github.com/facebook/draft-js/pull/276

Reviewed By: spicyj

Differential Revision: D3219189

fb-gh-sync-id: 58550b9bfc8e3c6589a425b2d481f6d6f6a1c19e
fbshipit-source-id: 58550b9bfc8e3c6589a425b2d481f6d6f6a1c19e",False
e66673d4f1776a3cd58a5e9100b09f0bd96d8244,2016-04-27 00:55:17,Ricky Vetter,"Let cmd+backspace delete new line character.

Summary:
This adds extra logic to allow cmd+backspace to check for empty selections
at the beginning of a line a delete the new line character instead of doing
nothing. This behavior matches Chrome textarea.

Closes #295
Closes https://github.com/facebook/draft-js/pull/301

Reviewed By: hellendag

Differential Revision: D3219188

fb-gh-sync-id: 42c945d125d1a4b62ab3ec88bcda6a2f364e7bc5
fbshipit-source-id: 42c945d125d1a4b62ab3ec88bcda6a2f364e7bc5",False
e2949e4ba26a3daa7de639e9cf8de736db05456e,2016-04-26 15:57:20,cpojer,"Update to Jest 11.0.2.

Summary:
I ran a codemod and broke draft-js. Updated to the latest version. Had to fix one test that in open source wasn't behaving. I think this fixes it properly, must have been a Jest bug before :)
Closes https://github.com/facebook/draft-js/pull/341

Differential Revision: D3223859

fb-gh-sync-id: 03ea20ebcb14caa40103ffa06c3561c0faaa645d
fbshipit-source-id: 03ea20ebcb14caa40103ffa06c3561c0faaa645d",False
0f75b0292659d63a59ef3aa6ef73bcdc1f4b356b,2016-04-26 14:47:24,Christoph Pojer,"Codemod to new Jest APIs

Reviewed By: kentaromiura

Differential Revision: D3223799

fb-gh-sync-id: a5e4786df5b861a90bae0e0504af6b6ceb787f52
fbshipit-source-id: a5e4786df5b861a90bae0e0504af6b6ceb787f52",False
d8823c95eb3488b491fd05b909666db190d32d96,2016-04-25 04:02:22,Isaac Salier-Hellendag,"Fix return types in Data Conversion doc

Summary:As noted in #333.
Closes https://github.com/facebook/draft-js/pull/336

Differential Revision: D3218108

fb-gh-sync-id: 6623e6646672ed733b4e0bf87a25ea740bba3cfa
fbshipit-source-id: 6623e6646672ed733b4e0bf87a25ea740bba3cfa",False
555f646bd942f960691499411495a0bdfbb73a8c,2016-04-22 04:58:55,Paul O’Shannessy,"Use React 15 for the website (client-side)

Summary:It doesn't use v15 for the server-side generation. That requires changes to react-page-middleware and I just wanted to get this up quickly.

Fixes #323
Closes https://github.com/facebook/draft-js/pull/330

Differential Revision: D3210313

fb-gh-sync-id: 29779759cc0a14802144c0ee84d69f07a4a14dff
fbshipit-source-id: 29779759cc0a14802144c0ee84d69f07a4a14dff",False
d67d3e8b035d165fb397daebc8f19b82a6fbdc8b,2016-04-22 00:32:24,Remko Tronçon,"Make 'Return' key go through command flow

Summary:As suggested by hellendag in https://github.com/facebook/draft-js/pull/216#issuecomment-197979832

This allows customization of custom block  split behavior when hitting 'Return'.
Closes https://github.com/facebook/draft-js/pull/264

Reviewed By: CLowbrow

Differential Revision: D3169102

fb-gh-sync-id: 6eab0913a78b8f95c0c624ba25f7c33cd5033753
fbshipit-source-id: 6eab0913a78b8f95c0c624ba25f7c33cd5033753",False
9efb9af73a4e42e70c8aa0a5025912d4571280c7,2016-04-20 23:02:19,Isaac Salier-Hellendag,"Document EditorChangeType

Summary:Also remove some unused values and alphabetize the enum.
Closes https://github.com/facebook/draft-js/pull/315

Differential Revision: D3202473

fb-gh-sync-id: 2a30eadfc15a83d1ac2af18e0c7cc036c0851d77
fbshipit-source-id: 2a30eadfc15a83d1ac2af18e0c7cc036c0851d77",False
419ea3d1132ea8e75a793bcb675fc81ac71166d1,2016-04-20 22:27:16,Paul O’Shannessy,"Upgrade fbjs to 0.8.1 to force that dependency for flow

Summary:Mostly this should trigger Travis CI to upgrade I think, but also it's technically right and I should have done this in my Flow change.
Closes https://github.com/facebook/draft-js/pull/328

Differential Revision: D3202328

fb-gh-sync-id: e5fd0993a3d10b2e2df1fe3f2f92d9246a48f620
fbshipit-source-id: e5fd0993a3d10b2e2df1fe3f2f92d9246a48f620",False
47e369510316e8f885df520cdb13d61d94e39f84,2016-04-19 08:29:06,Paul O’Shannessy,"Upgrade flow to 0.23

Summary:Simplified version of #313. We don't actually need the Promise definition here (anymore?), though I did ship it in fbjs@0.8.1.

I also added the flow version we expect to the flowconfig so we'll hard fail there if we ever mismatch.
Closes https://github.com/facebook/draft-js/pull/322

Differential Revision: D3195262

fb-gh-sync-id: dc6bc1db8b0a1b941656bccfa9a8ff22335c5e0a
fbshipit-source-id: dc6bc1db8b0a1b941656bccfa9a8ff22335c5e0a",False
ee082faaa2e7bd57ef755e1674511aa9aa11fb26,2016-04-16 02:12:19,Isaac Salier-Hellendag,"Fix examples

Summary:The recent change to `convertFromRaw` left some examples broken.

Also update TeX example to React 15.

Fixes #307 and #308.
Closes https://github.com/facebook/draft-js/pull/314

Differential Revision: D3186362

fb-gh-sync-id: b52c7ea61415580b554d69b646449d141442b7c7
fbshipit-source-id: b52c7ea61415580b554d69b646449d141442b7c7",False
d020f38751e5c34884e2ed062af6ee901896266c,2016-04-16 00:48:08,Remko Tronçon,"Documentation Updates

Summary: Closes https://github.com/facebook/draft-js/pull/300

Differential Revision: D3185861

fb-gh-sync-id: 12394994555e1089762a9f20ee8dbef6c3e2810a
fbshipit-source-id: 12394994555e1089762a9f20ee8dbef6c3e2810a",False
fadf9ace40e5f1e869e50f75fa3a97769bf95aa2,2016-04-15 14:27:23,Gabe Levi,"Deploy v0.23.0 to static upstream

Reviewed By: samwgoldman

Differential Revision: D3182102

fb-gh-sync-id: d41bda76d7472fbe0e7109cd88f97597021126da
fbshipit-source-id: d41bda76d7472fbe0e7109cd88f97597021126da",False
844b85e6576b0575a716bbfe0381336737482b53,2016-04-14 02:57:22,Ian Storm Taylor,"change convertFromRaw to return a ContentState, fixes #230

Summary:This way convertFromRaw and convertToRaw are parallel, both dealing with ContentState instead of one returning an array of ContentBlocks. Fixes #230.

hellendag Let me know how this looks! I didn't see any tests for the converters, and I haven't used Flow before, or contributed to any Facebook repos.
Closes https://github.com/facebook/draft-js/pull/239

Reviewed By: spicyj

Differential Revision: D3109637

fb-gh-sync-id: 6f9cd8796c4e29eed037d22ea20de90cbe69e18f
fbshipit-source-id: 6f9cd8796c4e29eed037d22ea20de90cbe69e18f",False
ed54d816a883c30d68fed5c3c3b2ed48fd5840d4,2016-04-13 22:27:23,Isaac Salier-Hellendag,"Add ContentState.getFirstBlock()

Summary:Also do some documentation cleanup.
Closes https://github.com/facebook/draft-js/pull/299

Reviewed By: CLowbrow

Differential Revision: D3170417

fb-gh-sync-id: 1d07793326610905b3256bfc5058c93ff422cac2
fbshipit-source-id: 1d07793326610905b3256bfc5058c93ff422cac2",False
55a3f58f1aa0d386b9b1c47b5910818e840a7312,2016-04-13 22:02:25,jaaberg,"Add the release talk to the docs

Summary:Fixes [#163](https://github.com/facebook/draft-js/issues/163). Been in the loop for over a month, so I thought it was time to get it in.

Placed it under overview section in the docs.
Closes https://github.com/facebook/draft-js/pull/288

Differential Revision: D3173936

fb-gh-sync-id: b5f09d4246acb50fbe5f2fdfce6c40e59f8060b0
fbshipit-source-id: b5f09d4246acb50fbe5f2fdfce6c40e59f8060b0",False
329563f5dc470cb267deb7c92803b322296106d1,2016-04-13 03:43:36,Johannes Lumpe,"Use inline-block for proper button wrapping

Summary:This fixes https://github.com/facebook/draft-js/issues/222
Closes https://github.com/facebook/draft-js/pull/279

Differential Revision: D3170667

fb-gh-sync-id: 72e4efb7dffd0aa1310abc67ac0a5f2514854b62
fbshipit-source-id: 72e4efb7dffd0aa1310abc67ac0a5f2514854b62",False
e15d6b2cd54c7bd5a1c6e3700fb224e47864053a,2016-04-12 23:12:22,Isaac Salier-Hellendag,"Release 0.5.0

Summary:Now that we've got some more changes live on facebook.com, we can get the current master out as a release.
Closes https://github.com/facebook/draft-js/pull/297

Differential Revision: D3168835

fb-gh-sync-id: cae701017d3c37d264f71db10ec481677694921a
fbshipit-source-id: cae701017d3c37d264f71db10ec481677694921a",False
5ce1591ca5b2ca9b5b4fb71d5d4efbf46e99317f,2016-04-12 22:17:25,Remko Tronçon,"docs: Fix incorrect anchor

Summary: Closes https://github.com/facebook/draft-js/pull/298

Differential Revision: D3168538

fb-gh-sync-id: 64642e2d89bdf61ff8f5b469a9c89ea16523f0dd
fbshipit-source-id: 64642e2d89bdf61ff8f5b469a9c89ea16523f0dd",False
af69c3ed4c8d635120fd1668e6c81efb5549d8a8,2016-04-12 21:18:06,jaaberg,"Remove h3-h6 from the lightweight editor demo

Summary:Removed the H3-H6 from the demo as it is just a lightweight demo, and H1-H2 should be enough to get the point across. As suggested by hellendag in [#222 (comment)](https://github.com/facebook/draft-js/issues/222#issuecomment-199341556).
Closes https://github.com/facebook/draft-js/pull/287

Differential Revision: D3168315

fb-gh-sync-id: 9c30caf8fe970d504f3242bd7a5a24acc9e55e53
fbshipit-source-id: 9c30caf8fe970d504f3242bd7a5a24acc9e55e53",False
50fd445c6c516c36801967e15865e01ddcad6b3b,2016-04-12 21:12:29,Sam,"Method needed to be bound

Summary:Added pre-bind for `handleKeyCommand`
Closes https://github.com/facebook/draft-js/pull/294

Differential Revision: D3168316

fb-gh-sync-id: 1bea0f0d8844dc8ca3762be42ee7ab00339f7176
fbshipit-source-id: 1bea0f0d8844dc8ca3762be42ee7ab00339f7176",False
62953cac18f37b692d5745123e386d9b24db6c75,2016-04-12 21:12:29,Remko Tronçon,"Documentation fixes

Summary:Fix incorrect & missing anchors in docs.
Closes https://github.com/facebook/draft-js/pull/281

Differential Revision: D3168317

fb-gh-sync-id: f8d3011a1706d8e9735eb8ecfad7ef5fe32bd8cc
fbshipit-source-id: f8d3011a1706d8e9735eb8ecfad7ef5fe32bd8cc",False
72cc76fab1f00e7120efce2d5f7f98b6c5b2134c,2016-04-07 04:42:38,Isaac Salier-Hellendag,"Release 0.4.0

Summary: Closes https://github.com/facebook/draft-js/pull/273

Differential Revision: D3147269

fb-gh-sync-id: 43877fc0a71b1f6d0d0996b8d32c97e803c6ee5e
fbshipit-source-id: 43877fc0a71b1f6d0d0996b8d32c97e803c6ee5e",False
b636434e00cd7a8924f73f703fd32e28bd651798,2016-04-06 23:37:20,Bryan Smith,"Add EditorState.setInlineStyleOverride

Summary:As discussed on Slack, this change adds a convenience method to `EditorState` for setting the inline style override without resorting to the undocumented `EditorState.set` method.
Closes https://github.com/facebook/draft-js/pull/247

Reviewed By: spicyj

Differential Revision: D3123611

fb-gh-sync-id: b7635ea5cfc012635122751902938d55201cdbbe
fbshipit-source-id: b7635ea5cfc012635122751902938d55201cdbbe",False
0096d9873e5f7e98145c0a835a52a42f54003306,2016-04-06 12:47:20,tasti,"Rename media to atomic

Reviewed By: hellendag

Differential Revision: D3139263

fb-gh-sync-id: 44b724e2a975d9f12d71f4ef936ab7dd16ab5165
fbshipit-source-id: 44b724e2a975d9f12d71f4ef936ab7dd16ab5165",False
358dc595f0820f2703d95e81b96b5e8271e1f878,2016-04-06 06:42:26,Brooks Lyrette,"Opt-Space no longer scrolls (Chrome OSX)

Summary:`Option + Space` no longer causes scrolling. This was only happening in Chrome/OSX. This was happening in the keyDown handler not the keyPress handler.

I'm not sure if I like adding the ' ' to the editor in editOnKeyDown. Maybe I should implement this as a command?

Fixes #19
Closes https://github.com/facebook/draft-js/pull/244

Reviewed By: spicyj

Differential Revision: D3132586

fb-gh-sync-id: b94bd73094a58ce9b39528df34b899ae62366761
fbshipit-source-id: b94bd73094a58ce9b39528df34b899ae62366761",False
75908adf1890cac7e4802582e783bf3922ea2677,2016-04-06 04:00:57,Johannes Lumpe,"Fix cursor behavior for soft new lines

Summary:Forcing a selection will cause the browser to behave properly and show the cursor for multiple new lines.
Closes https://github.com/facebook/draft-js/pull/255

Reviewed By: spicyj

Differential Revision: D3132587

fb-gh-sync-id: 93d94cfae96e7233b573623cd8076fa212a87182
fbshipit-source-id: 93d94cfae96e7233b573623cd8076fa212a87182",False
8ac9cf31deca5b021ff2ae0a98a8e32ecf9f6d14,2016-04-05 23:22:24,Remko Tronçon,"Documentation updates

Summary:Added some missing documentation.

I didn't really document `RichUtils`, I just added a placeholder so it's at least easy to find out which methods are available without having to resort to the source code (and the names should be self explanatory enough for it to be good for now).

Resolves #263
Closes https://github.com/facebook/draft-js/pull/269

Differential Revision: D3139568

fb-gh-sync-id: 34cfa671c189b561c6a84c5ba991be224019dbe1
fbshipit-source-id: 34cfa671c189b561c6a84c5ba991be224019dbe1",False
226d3616c6edf5937bdc5a9c8696efb0df57e6d7,2016-04-01 05:17:26,tasti,"Add a media example

Summary:Looks like people were interested in seeing an example using media (https://github.com/facebook/draft-js/issues/46).

I created an example that shows how to use Custom Block Components to attach audio, image, and video into the editor.

Side note:

The docs (http://facebook.github.io/draft-js/docs/advanced-topics-block-components.html) led me to believe it's much simpler to render custom blocks. However, more steps (see `insertMedia(...)`) were needed to wrap around the media for it to work well. The `tex` example (https://github.com/facebook/draft-js/blob/master/examples/tex/js/modifiers/insertTeXBlock.js) has the same code to handle this. Can we provide this as a utility function?
Closes https://github.com/facebook/draft-js/pull/67

Reviewed By: hellendag

Differential Revision: D2989709

fb-gh-sync-id: 76c11119760c61d9935e4dd14030fb85485355d2
fbshipit-source-id: 76c11119760c61d9935e4dd14030fb85485355d2",False
67c5e69499e3b0c149ce83b004872afdf4180463,2016-03-30 02:42:26,tasti,"Custom block component wrapper

Reviewed By: hellendag

Differential Revision: D3053015

fb-gh-sync-id: f6371d5a799d3a9603289fc3c60f5fae3457d3ee
fbshipit-source-id: f6371d5a799d3a9603289fc3c60f5fae3457d3ee",False
ef76da80ef548b8a086a8c3090e632b306d4da90,2016-03-30 02:32:26,miter,"gulp-development-task - Adding a dev gulp task

Summary:- Having a development task for gulp allow us to do TDD a lot quicker and exploratory testing using the html files
Closes https://github.com/facebook/draft-js/pull/242

Differential Revision: D3110358

fb-gh-sync-id: 50f105e0ec9d8e180b057b2f025b33408628ccc7
fbshipit-source-id: 50f105e0ec9d8e180b057b2f025b33408628ccc7",False
cc67a42eb236172343a3dc39ee13495a3ee7ed01,2016-03-29 23:52:24,miter,"adding-flow-to-travis - adding flow to travis

Summary:Adding flow to travis builds

using the `flow-bin` node module since it makes easier for people to test locally and it is the recommended way from https://github.com/facebook/flow
Closes https://github.com/facebook/draft-js/pull/245

Reviewed By: CLowbrow

Differential Revision: D3109560

fb-gh-sync-id: 6b031e6fb0d72b8dedfbaa82e622cb4ab09e0767
fbshipit-source-id: 6b031e6fb0d72b8dedfbaa82e622cb4ab09e0767",False
227eea82bb555a3d74c72fb1ca7c134695ac73ae,2016-03-29 00:42:48,Brooks Lyrette,"Editor now gracefully handles ctrl +m

Summary:When `ctrl + m` is pressed the block is split.

Closes #218
Closes https://github.com/facebook/draft-js/pull/235

Reviewed By: spicyj

Differential Revision: D3104393

fb-gh-sync-id: 8d8ecaae4a376fdfa5eb8938ad003752e30cd279
fbshipit-source-id: 8d8ecaae4a376fdfa5eb8938ad003752e30cd279",False
771c9ae3aa3322f144d3df08640fcfd22392f8cd,2016-03-25 23:17:25,Mayank Hinger,"Enhancement: Adding handlePastedText handler to handle pasted text in?

Summary:As discussed in the issue #195, adding handlePastedText handler to handle pasted text in Editor and removing nullThrows import (unused) to fix lint warning.
Closes https://github.com/facebook/draft-js/pull/209

Reviewed By: CLowbrow

Differential Revision: D3076174

fb-gh-sync-id: c8b467568760eb2715118b9fa1cd3197530f1539
fbshipit-source-id: c8b467568760eb2715118b9fa1cd3197530f1539",False
7b0ffc5d24de1fd49cca972ec8ff798e8424ad5e,2016-03-25 00:47:24,Ray Nicholus,"Hotfix/block type inline style override

Summary:This fixes #228. I also fixed a few existing lint violations and added a simple but useful test to verify this behavior change.
Closes https://github.com/facebook/draft-js/pull/229

Reviewed By: CLowbrow

Differential Revision: D3093673

fb-gh-sync-id: e5a49f286311b537d07a281911def78606904f59
shipit-source-id: e5a49f286311b537d07a281911def78606904f59",False
a472db9335a1ecf8fe4b8b18afe93561e0eb695e,2016-03-24 23:53:53,Brooks Lyrette,"Improved documentation for EditorState.

Summary:Added documentation for `moveSelectionToEnd` and `moveFocusToEnd`. These were missing from the documentation.

Closes https://github.com/facebook/draft-js/pull/227

Reviewed By: spicyj

Differential Revision: D3093447

fb-gh-sync-id: 5a685ec2d4e51897455194f6e92c42d39ab696b0
shipit-source-id: 5a685ec2d4e51897455194f6e92c42d39ab696b0",False
ffce7490161e5728f3498e8e0e0501ec6a5fdfa6,2016-03-23 06:22:25,Isaac Salier-Hellendag,"Release 0.3.0

Summary: Closes https://github.com/facebook/draft-js/pull/225

Differential Revision: D3085667

fb-gh-sync-id: 8b0b4d605f5fbeffd7a4e9e87abd70957a59aa7b
shipit-source-id: 8b0b4d605f5fbeffd7a4e9e87abd70957a59aa7b",False
6a0bb1296d353998f007847ee250365f2cee7848,2016-03-18 00:17:27,miter,"missing-headers-on-convertFromHTMLToContentBlocks - Including missing…

Summary:This fixes issue https://github.com/facebook/draft-js/issues/206

- Adding missing headers for convertFromHTMLToContentBlocks
Closes https://github.com/facebook/draft-js/pull/207

Reviewed By: ezequiel

Differential Revision: D3053014

fb-gh-sync-id: 8cf5eaab6b85352d177620e1421023da0b92e295
shipit-source-id: 8cf5eaab6b85352d177620e1421023da0b92e295",False
0c1ec86dc2d74e3a79f5e46c5f788c5e3d098d2b,2016-03-17 23:47:22,Patrick Dillon,"Extract inline styles from contentBlock

Summary:Addresses #153 by extracting the style key strings from the content block.
Closes https://github.com/facebook/draft-js/pull/217

Reviewed By: ezequiel

Differential Revision: D3060659

fb-gh-sync-id: 7752f4f6477e61d239c9b945857fd1acca77ff42
shipit-source-id: 7752f4f6477e61d239c9b945857fd1acca77ff42",False
31fadb27c8dec1f98c3aa48a04812f25679f073e,2016-03-13 04:02:22,G. Scott Olson,"Improve `html` styles

Summary:When the browser is narrower than `.container` or taller than the content, `<html>` `background-color` is visible:

<p align=""center"">
  <img src=""https://cloud.githubusercontent.com/assets/220979/13725333/ff857572-e863-11e5-92bf-33f8626014cc.png"" width=""400"">
</p>

_You can also see this issue if you decrease the browser’s zoom level._

**Changes:**
- De-dupe the `html` selector
- Move `body` `background-color` to `html`
- Remove `body` rule
- :abc: `html` properties
Closes https://github.com/facebook/draft-js/pull/201

Differential Revision: D3045903

fb-gh-sync-id: 53a4b4f211fb3329f33ed7e1054b51c8fd7d703d
shipit-source-id: 53a4b4f211fb3329f33ed7e1054b51c8fd7d703d",False
b7a7b555ccfb50773e23fa6e2e0097c9c052a6fe,2016-03-13 03:37:20,Mayank Hinger,"Exporting getVisibleSelectionRect

Summary:Exporting getVisibleSelectionRect utility as discussed in the last comment of #169. This is needed to get the boundingClientRect for the visible DOM selection.
Closes https://github.com/facebook/draft-js/pull/199

Reviewed By: spicyj

Differential Revision: D3042677

fb-gh-sync-id: 81f08c004eebba412dff70f224a2519fdb3a6808
shipit-source-id: 81f08c004eebba412dff70f224a2519fdb3a6808",False
7d575904b9a8e5cac762a17c5c6ef5689e915993,2016-03-12 00:47:23,Andrey Lunyov,"Summary:

Reviewed By: spicyj

Differential Revision: D3040295

fb-gh-sync-id: 409881cb25b7257b20e4ec7a32986bbaf174eaa1
shipit-source-id: 409881cb25b7257b20e4ec7a32986bbaf174eaa1",False
17559052075ed4cfb08d38d7e128d4ff3d7432aa,2016-03-11 23:52:22,Paul O’Shannessy,"Make some dist build changes

Summary:- Inline `process.env.NODE_ENV === 'production'` checks
- Compress CSS
- Add copyright headers to dist files

It's not a *huge* difference on the size front but definitely better. And the copyright thing is something we should do regardless of the rest.
<img width=""591"" alt=""screen shot 2016-03-09 at 4 26 17 pm"" src=""https://cloud.githubusercontent.com/assets/8445/13655376/bc78d212-e613-11e5-8f39-0268bf4d32f2.png"">
Closes https://github.com/facebook/draft-js/pull/189

Differential Revision: D3034186

fb-gh-sync-id: ede05fcc42f4d3831edcd809adb204f3f6ddf8f2
shipit-source-id: ede05fcc42f4d3831edcd809adb204f3f6ddf8f2",False
ebd782c76438094969930911988633cde41f4685,2016-03-11 23:37:59,Paul O’Shannessy,"Ensure we're using latest fbjs alpha

Summary:Fresh installs will be already be using this but upgrades might not be, so lets just guarantee it
Closes https://github.com/facebook/draft-js/pull/193

Differential Revision: D3041517

fb-gh-sync-id: 3092033de7152bdd267e8b48c58892764c930ebd
shipit-source-id: 3092033de7152bdd267e8b48c58892764c930ebd",False
981483ce0483482e98345f9196c761c862dc74f8,2016-03-11 22:52:22,Kenneth Ormandy,"Updates Quick Start examples to run as expected

Summary:Hey! Thanks so much for the hard work on this project. I’m just making my way through the documentation now, and I couldn’t get the Quick Start examples to run until I made the following changes.

I have very little React experience, and even less with ES2015 stuff—it’s entirely possible I just misunderstood something in all these cases. Regardless, the examples didn’t work as-is for me, and to the best of my understand, these changes fix that.

The one change I made that was maybe more of an opinion was turning:

```js
const {editorState} = this.state;
return <Editor editorState={editorState} onChange={this.onChange} />
```

…into:

```js
return <Editor editorState={this.state.editorState} onChange={this.onChange} />
```

…which just reduced the complexity for me at the beginning, and had more in common with the initial Input example.
Closes https://github.com/facebook/draft-js/pull/180

Reviewed By: spicyj

Differential Revision: D3034470

fb-gh-sync-id: c99ba4e24dd42a2c5a0634dfcc6c8faab8cd5b7c
shipit-source-id: c99ba4e24dd42a2c5a0634dfcc6c8faab8cd5b7c",False
360f7375eb92bd06eb00930588bcd36b6689026c,2016-03-11 00:43:44,Alex Z,"Expose html to block converter through Draft object

Summary:Optional second parameter to pass in a function that will generate a dom element from whichever implementation.

Should help with #55
Closes https://github.com/facebook/draft-js/pull/174

Reviewed By: hellendag

Differential Revision: D3023635

fb-gh-sync-id: 71b83c05610279d67c6e84f29565ed645bc4be30
shipit-source-id: 71b83c05610279d67c6e84f29565ed645bc4be30",False
c0f241482b393d31937409e0104d1d67b8cc7952,2016-03-10 07:17:25,Isaac Salier-Hellendag,"Improve internal paste behavior

Reviewed By: spicyj

Differential Revision: D3025262

fb-gh-sync-id: c22dfcc271e0867ad0e0e81f76d4a51a08cca860
shipit-source-id: c22dfcc271e0867ad0e0e81f76d4a51a08cca860",False
52717871b1871d107b86a40b44488506b5fa268f,2016-03-10 06:37:27,Paul O’Shannessy,"Run build on prepublish so we don't publish incomplete packages

Summary: Closes https://github.com/facebook/draft-js/pull/186

Differential Revision: D3033435

fb-gh-sync-id: 8b344b681508e26fa878d093c2e666eb9b49da78
shipit-source-id: 8b344b681508e26fa878d093c2e666eb9b49da78",False
b920ea9de03022987a6e8bb4bb40acc8fe1a9e0f,2016-03-10 04:27:24,Isaac Salier-Hellendag,"Release 0.2.2

Summary:Oops. Looks like I need to run build before publishing.
Closes https://github.com/facebook/draft-js/pull/184

Differential Revision: D3032243

fb-gh-sync-id: e1c3c50df95f186e86c2e14dce96fe83214a4513
shipit-source-id: e1c3c50df95f186e86c2e14dce96fe83214a4513",False
2b7e3cceae70e74caf6aff588fa1ca10680dffa0,2016-03-10 03:22:22,Isaac Salier-Hellendag,"Expose DraftEditorBlock

Summary:This is needed for people who are wrapping `DraftEditorBlock` in custom components.

cc #124
Closes https://github.com/facebook/draft-js/pull/173

Differential Revision: D3031572

fb-gh-sync-id: 6818f49a59ddc56edc9fa44477f706242ec9ae06
shipit-source-id: 6818f49a59ddc56edc9fa44477f706242ec9ae06",False
bc250a096e3430f43b08eac917a69edb0671328b,2016-03-10 02:02:23,Isaac Salier-Hellendag,"Release 0.2.1

Summary:Quick turnaround to get React 15 RC and `suppressContentEditableWarning` in.
Closes https://github.com/facebook/draft-js/pull/183

Differential Revision: D3031186

fb-gh-sync-id: 23e2e881ce567bd9dab9d93a9a4235fb180609b2
shipit-source-id: 23e2e881ce567bd9dab9d93a9a4235fb180609b2",False
2a8dd168d8e1008922a682d9f4f18d83c73370d5,2016-03-09 10:08:40,Nik Graf,"upgrade to React 15 & suppress contentEditableWarning

Summary:```
npm WARN EPEERINVALID draft-js@0.2.0 requires a peer of react@^0.14.0 but none was installed.
npm WARN EPEERINVALID draft-js@0.2.0 requires a peer of react-dom@^0.14.0 but none was installed.
```
Closes https://github.com/facebook/draft-js/pull/179

Differential Revision: D3028633

fb-gh-sync-id: 03110f8dc77ace8147176562702ec6c80449218a
shipit-source-id: 03110f8dc77ace8147176562702ec6c80449218a",False
11f3de6f55d62bfe2dbe84ea8fb374150a9c49d7,2016-03-09 07:27:21,Isaac Salier-Hellendag,"Release 0.2.0

Summary: Closes https://github.com/facebook/draft-js/pull/178

Differential Revision: D3027987

fb-gh-sync-id: 578a74ee6dacb1e88b11d2689f278cf4c5afbd0a
shipit-source-id: 578a74ee6dacb1e88b11d2689f278cf4c5afbd0a",False
2990c519d217135c74461eb3ec47864b18f2e4cd,2016-03-05 05:39:05,Isaac Salier-Hellendag,"Move critical editor style into JS

Summary:There have been a number of bug reports caused by Draft.css not being included. The main one is that the editor can start flipping out if `white-space: pre-wrap` is not applied.

Users should generally be including Draft.css, and should be aware of behavior gaps if they choose not to. Documenting this accordingly.
Closes https://github.com/facebook/draft-js/pull/159

Reviewed By: spicyj

Differential Revision: D3013416

fb-gh-sync-id: 6423b84be619fa1013ef7babba30be8956456a97
shipit-source-id: 6423b84be619fa1013ef7babba30be8956456a97",False
9d7d5af9fddea0b127496d9261b15ba71a106974,2016-03-04 03:32:32,Benjamin Kniffler,"Allow to pass handleDrop, similar to handleDroppedFiles

Summary:This will allow to handle drops and suppress the default behavior if
necessary.
Closes https://github.com/facebook/draft-js/pull/145

Reviewed By: ezequiel

Differential Revision: D3004761

fb-gh-sync-id: 39aef0b8f8388ef6a1cb05917afc82a79e9a190b
shipit-source-id: 39aef0b8f8388ef6a1cb05917afc82a79e9a190b",False
70b271597bca692fd47b3832016c9bf3407bf4e8,2016-03-03 08:58:18,Isaac Salier-Hellendag,"Add decoratedText prop to DecoratorComponent

Summary:Resolves #140 and #68.

Tested with `console.log(this.props.decoratedText)` in render method of TokenSpan in entity.html.
Closes https://github.com/facebook/draft-js/pull/144

Reviewed By: ezequiel

Differential Revision: D3002917

fb-gh-sync-id: 2451c82c74c0835217edcc7923c4430ae5ae3969
shipit-source-id: 2451c82c74c0835217edcc7923c4430ae5ae3969",False
4b24a9a9060baf3edc80c98601c2841fca3a8a6b,2016-03-03 04:18:53,Isaac Salier-Hellendag,"generateBlockKey -> generateRandomKey

Summary:I'd like to generate an editor-level key, too. Might as well reuse the same module, since it's useful.
Closes https://github.com/facebook/draft-js/pull/135

Reviewed By: spicyj

Differential Revision: D3000350

fb-gh-sync-id: e708a29fcccfdbcbbeeb0e981ab6e5cc01d52635
shipit-source-id: e708a29fcccfdbcbbeeb0e981ab6e5cc01d52635",False
505d5f73b80000944133ff67e7d2ca41390efc50,2016-03-02 04:22:29,Matthew Russell,"Typo fix in getBlockForKey example

Summary: Closes https://github.com/facebook/draft-js/pull/134

Differential Revision: D2996962

fb-gh-sync-id: 542b449c38e3c679852283b184f03528b329c74a
shipit-source-id: 542b449c38e3c679852283b184f03528b329c74a",False
3e838bca62b4dc6378ef73c7152249b597099834,2016-03-02 03:57:33,Isaac Salier-Hellendag,"Use Slackin link for Slack invites

Summary:Still not sure if we'll be moving over to Discord, but in the meantime this will streamline things.
Closes https://github.com/facebook/draft-js/pull/131

Differential Revision: D2996725

fb-gh-sync-id: 1b0c51682d4e79754da9ab23fa876fb64685a050
shipit-source-id: 1b0c51682d4e79754da9ab23fa876fb64685a050",False
bdcf351446b4d56df0a90c71a8380b8b7b63ff50,2016-03-01 23:57:31,Paul O’Shannessy,"Use es6-shim, mention polyfill requirement in docs

Summary:Should fix #83
Closes https://github.com/facebook/draft-js/pull/123

Reviewed By: zpao

Differential Revision: D2995005

fb-gh-sync-id: bf7df7fd4a19efdb560c00ea3131c6fc7911ba44
shipit-source-id: bf7df7fd4a19efdb560c00ea3131c6fc7911ba44",False
76b9778844842fcdaaac2b4cf37e5dcc568a8e78,2016-03-01 23:47:30,miter,"Including extra headings to the DraftPasteProcessor

Summary:…to DraftPasteProcessors

- Including missing headings
Closes https://github.com/facebook/draft-js/pull/118

Reviewed By: tasti

Differential Revision: D2989580

fb-gh-sync-id: a7e6c44e61eb19a7629213ce1d6eedbb499267af
shipit-source-id: a7e6c44e61eb19a7629213ce1d6eedbb499267af",False
a747ceb20c561b928f9ea8b9fe8ac1e5f0066364,2016-03-01 10:57:31,Isaac Salier-Hellendag,"getVisibleSelectionRect

Reviewed By: spicyj

Differential Revision: D2988045

fb-gh-sync-id: 91cd7db02efd0accdd5db1e044e94225033b1cc0
shipit-source-id: 91cd7db02efd0accdd5db1e044e94225033b1cc0",False
94c6824e55449f8dbe9f88831e8663133b8c7a00,2016-02-29 01:02:29,Isaac Salier-Hellendag,"Add Slack signup info to readme

Summary: Closes https://github.com/facebook/draft-js/pull/115

Differential Revision: D2987800

fb-gh-sync-id: 801b982e5271db5b719ced055a32c19c72cd7912
shipit-source-id: 801b982e5271db5b719ced055a32c19c72cd7912",False
38860d5339b24548e54b2147662bb23501ccf36c,2016-02-29 00:27:28,Brijesh Bittu,"Fix the link example to render links when rich text containing links are pasted

Summary:Make the example for links consistent by using the same key (`url`) as defined by `draft-js` paste instead of `href` and use `LINK` in `Entity.create` instead of `link` to maintain consistency as suggested in [issue 112](https://github.com/facebook/draft-js/issues/112).

This PR enhances link example by:
* Rendering links in pasted rich text.
* Handling `ENTER` key press for link's url input box besides clicking on.
Closes https://github.com/facebook/draft-js/pull/114

Differential Revision: D2987774

fb-gh-sync-id: db461f8ecfc3590f185e4a7ef3041c771a0272dd
shipit-source-id: db461f8ecfc3590f185e4a7ef3041c771a0272dd",False
86793334d0a6a21ae0f6f0371366612d235547a7,2016-02-28 09:12:41,Gabe Scholz,"Fix linter warnings

Summary:Fixes linter warnings.

Also adds linting to the CI build, but warnings still exit with `0` which doesn't cause the suite to fail. I'm not even sure whether you guys want the suite to fail on this condition; though the contributing docs asks users to make sure that the linter passes before submitting a PR.
Closes https://github.com/facebook/draft-js/pull/78

Reviewed By: spicyj

Differential Revision: D2987193

fb-gh-sync-id: bfcf661be729fd9f27c65a8237973ce6ff25cb16
shipit-source-id: bfcf661be729fd9f27c65a8237973ce6ff25cb16",False
b213d5b903cf366c25b690429d8df7fc8998b31d,2016-02-28 09:12:35,Isaac Salier-Hellendag,"Exclude trailing block for type toggling if at zero offset

Summary:Resolves #86.

In cases where the user triple-clicks on a block, then toggles the block type, it feels weird to have the trailing block also change block type.

The `SelectionState` resulting from the triple-click is correct, but to improve the interaction here, let's discard the trailing block for this modifier.
Closes https://github.com/facebook/draft-js/pull/111

Reviewed By: spicyj

Differential Revision: D2987166

fb-gh-sync-id: 66dea913955ac5eef354f3222ac5afd7e6fdb92d
shipit-source-id: 66dea913955ac5eef354f3222ac5afd7e6fdb92d",False
4c7fa43ce2a1457acc7e77bf71914ee5bd636a9d,2016-02-28 04:37:29,Isaac Salier-Hellendag,"Link example: Use regular input instead of window.prompt

Summary:Repairs #91. See discussion there for details.
Closes https://github.com/facebook/draft-js/pull/110

Differential Revision: D2987111

fb-gh-sync-id: 1254972193a530b8432c3147bf6a021c0d6341de
shipit-source-id: 1254972193a530b8432c3147bf6a021c0d6341de",False
1e099d4aa4e626a21f420ad5ee25c3236aa5cc6b,2016-02-27 09:22:30,Kyle Kelley,"Check devEngines on pretest

Summary:To support users on 5.x and `npm 3`. All the examples worked for me, including the TeX one.

Follow up to #31.

Thank you so much for this library, I've been wondering about handling `contentEditable` cleanly with React for editor components for some time. :heart:
Closes https://github.com/facebook/draft-js/pull/37

Differential Revision: D2986309

fb-gh-sync-id: 1bc9202064594582dafd3104be19119ae09cf494
shipit-source-id: 1bc9202064594582dafd3104be19119ae09cf494",False
34a97f246825a4db5f36646ff88463f974b85fab,2016-02-27 08:52:34,miter,"extra-headings-support - Adding support for other blockmode headings

Summary:- adding support for other blockmode headings
Closes https://github.com/facebook/draft-js/pull/96

Reviewed By: spicyj

Differential Revision: D2981702

fb-gh-sync-id: ed14c7fd66291071b8d1ced493c19540909b335e
shipit-source-id: ed14c7fd66291071b8d1ced493c19540909b335e",False
8d38f105ebc2364613489156e795d2a04530ed6e,2016-02-27 08:24:53,Isaac Salier-Hellendag,"Re-render DraftEditorLeaf when style changes

Reviewed By: ezequiel

Differential Revision: D2985255

fb-gh-sync-id: 9f88e8c29efbccfa2612313bb3af60c67cdbdfae
shipit-source-id: 9f88e8c29efbccfa2612313bb3af60c67cdbdfae",False
bb8a1434493351d11dd276db8f67ea327f1f3e1b,2016-02-27 05:22:31,Ben Alpert,"Fix some lint errors in website

Summary:Fixes most errors and some warnings, especially the autofix ones.

- copyright headers
- no unicode in source files
- `.indexOf('javascript:')` is legit; suppress the eslint error
- trailing commas, semicolons

bypass-lint

Reviewed By: hellendag

Differential Revision: D2981752

fb-gh-sync-id: 5ceb842c215c5787aa2c981a1eae3254f19ef687
shipit-source-id: 5ceb842c215c5787aa2c981a1eae3254f19ef687",False
555fe1f6b2945d42d0a7d4b4d1af73e273d8dcbf,2016-02-26 11:57:31,tasti,"Change button + nav color to match theme

Summary:Some colors were left over from the flux template. So, I got rid of the greens and threw in some reds.
Closes https://github.com/facebook/draft-js/pull/94

Differential Revision: D2980484

fb-gh-sync-id: d7567b098f05195b6d336f12410e8ccc2482f00e
shipit-source-id: d7567b098f05195b6d336f12410e8ccc2482f00e",False
1abef7a5dba041cafd8fd1887e4b03082b1f14bd,2016-02-26 11:55:19,R. Andrew Ohana,"Correct and clarify docs for handleBeforeInput

Summary:Currently the docs state that a `beforeInput` event is passed as an argument to the `handleBeforeInput` prop. This is incorrect, only the characters to be inserted are passed.
Closes https://github.com/facebook/draft-js/pull/76

Reviewed By: spicyj

Differential Revision: D2980486

fb-gh-sync-id: e924947f9f6729f4766813cbd736184815135f48
shipit-source-id: e924947f9f6729f4766813cbd736184815135f48",False
7c2c1fe5763d48b42ad8c6dda22bde13caaead3e,2016-02-26 06:51:47,tasti,"Only make code-block unstyled if blockBefore isn't a code-block

Summary:Fixes https://github.com/facebook/draft-js/issues/54 using suggestion.
Closes https://github.com/facebook/draft-js/pull/59

Reviewed By: tasti

Differential Revision: D2977232

fb-gh-sync-id: D2977232
shipit-source-id: D2977232",False
c129993774c00962e179a64b1413db71ac55a5f8,2016-02-26 06:35:29,Ben Alpert,No UTF-8 in source files,False
6ef2ffd9a0ff68490bacb058d53e67e68d071a45,2016-02-26 00:43:21,Isaac Salier-Hellendag,"Merge pull request #89 from brwr/brwr-make-key-binding-importable

Export getDefaultKeyBinding and KeyBindingUtil",True
44c9f871f4983ec286fcdb58b985626c79c97f7c,2016-02-26 00:01:11,James Brewer,"Export getDefaultKeyBinding and KeyBindingUtil

In [Advanced Topics: Key
Bindings](https://facebook.github.io/draft-js/docs/advanced-topics-key-bindings.html)
there is an
[example](https://facebook.github.io/draft-js/docs/advanced-topics-key-bindings.html#example)
where both `getDefaultKeyBinding()` and `KeyBindingUtil` are used, but
neither are exported by `draft-js`. This PR exports both
`getDefaultKeyBinding()` and `KeyBindingUtil` from `draft-js`.

Also in the above example, `getDefaultKeyBinding()` was not imported.
This PR adds `getDefaultKeyBinding()` to the imports for the example.",False
cb04af7a5c8efdb950e589312a66dd923a522c07,2016-02-25 11:07:20,Isaac Salier-Hellendag,"Merge pull request #82 from mitermayer/fix-missing-keys

Fixing missing keys",True
628753ccf3e79a9805e8c04aab1f9a7d9dbb3e50,2016-02-25 11:04:34,miter,Fixing missing keys,False
7b96215a518268e4e07ad6bbc8cbe04c8b122d3a,2016-02-25 09:58:11,Isaac Salier-Hellendag,"Merge pull request #80 from brwr/brwr-add-utf8-meta-tag-to-overview-docs

Add mention of UTF-8 meta tag to Overview docs.",True
3cb88ea0ca2c9a31a54a9a00766b255197d18557,2016-02-25 08:43:41,James Brewer,Add mention of UTF-8 meta tag to Overview docs.,False
5eaa7dd9ef1449a1daf3670dff6a9defc0914dae,2016-02-25 06:45:38,Ben Alpert,Sync changes from internal,False
1e88bd2b11ce916cfefcdbce15d25b81424a0e97,2016-02-25 05:54:04,Ben Alpert,"Merge pull request #66 from spicyj/cx

Transform cx modules in gulp",True
47fc43dbd5cde9ef32c0222fc2fe585142e0ea8c,2016-02-25 05:49:28,Ben Alpert,"Transform cx modules, var() in gulp

This lets us reuse the original files directly.",False
bea4d01bd8759be2151736b2f4f0973f3af1115b,2016-02-25 03:20:51,Ben Alpert,"On Travis, fail build if any page fails (like RN)",False
e163e8ff36185c3842645e5c9795d8601644cc48,2016-02-25 02:53:29,Isaac Salier-Hellendag,"Merge pull request #64 from jerrysu/master

Fix some CSS classnames",True
86acb9a0680c462d5be5700ed30b9e55dd567a0a,2016-02-25 00:50:49,Ben Alpert,Set user on Travis,False
2a8e490d9797725a6873374a27a5b15a0348322f,2016-02-25 00:19:33,Jerry Su,Fix some CSS classnames,False
7bbbb55d6fc191e9df84397f9b21b0433a9451b1,2016-02-25 00:14:35,Isaac Salier-Hellendag,"Merge pull request #57 from CentaurWarchief/README-badges

Add Travis and NPM (version) badges to README.md",True
ca80dbbccbdfac96226e53a1c8c57039716d6830,2016-02-24 07:21:17,Ben Alpert,Build before pushing website,False
6aceb9b0da398e478a223b6cd4612a4d3bd74663,2016-02-24 07:08:41,Andrey,Add Travis and NPM version badges,False
80358ac528364495a39a187620073b689fb34e37,2016-02-24 03:13:29,Isaac Salier-Hellendag,"Merge pull request #48 from spicyj/tr-web

Autobuild website on Travis",True
58d62ca40e57b3720750dc033f571ee089d0bfa1,2016-02-24 01:05:43,Ben Alpert,Autobuild website on Travis,False
3893e30f1371fba4c0fb2b8297b8f92f665ed0a2,2016-02-23 23:59:44,Isaac Salier-Hellendag,"Merge pull request #38 from pooyaj/examples-link-remove-consts

removed two instances of unused content constants.",True
f5e6cf50558f5797b079db80fcda706664c74e14,2016-02-23 23:46:46,Ben Alpert,"Merge pull request #29 from ZuTa/mkdir

Fix missing src/draft-js/lib/ dir",True
aa7c647a6579e813242694c35f1a8dfdad4bc93d,2016-02-23 11:36:31,Pooya Jaferian,removed two instances of unused content constants.,False
83af9bc8236f21ebd843214e7894f63dcc115123,2016-02-23 07:43:46,Isaac Salier-Hellendag,"Merge pull request #31 from zpao/check-engines

Check engines before building",True
b8f41e28986b60ceaea4830602ae208b8e2dd05b,2016-02-23 07:04:18,Paul O’Shannessy,Check engines before building,False
3d8506ca756f739f8c9c46ea7fea0ae327614de3,2016-02-23 06:36:31,Isaac Salier-Hellendag,"Merge pull request #30 from dustin-H/patch-1

[docs] Fix return type of convertFromRaw (See #28)",True
fb2a88132f1b1fb5f5221b9d19a53af66f32460b,2016-02-23 06:35:45,Isaac Salier-Hellendag,"Merge pull request #25 from tasti/fix-typos-in-docs

Fix typos in docs",True
a7fcad4aec770808efde2c74c90935c19959d2c2,2016-02-23 06:35:00,Isaac Salier-Hellendag,"Merge pull request #23 from alextaylor000/alextaylor000-fix-quickstart-rich-styling-doc-typo-1

Fix typo in QuickStart-Rich-Styling.md",True
cfd5af2c1a9ff7da9e8dbc2e161a84cd7d0049f8,2016-02-23 06:34:44,Isaac Salier-Hellendag,"Merge pull request #24 from NYDrewReynolds/patch-3

[docs] Fix broken link in API Reference ContentBlock",True
12f643a1d3f5f9fb53ac34bb156a27babda622ef,2016-02-23 06:12:36,Taras Zubyk,put .gitkeep inside src/draft-js/lib/,False
aa48ab74736d5687c7acb58256c24fd647227c90,2016-02-23 05:59:22,Dustin Hoffner,"[docs] Fix return type of convertFromRaw (See #28)

Closes #28",False
d4fb7cade7f7a69dcfb93f5d390bf6bce8b4d083,2016-02-23 05:51:36,Taras Zubyk,create missing src/draft-js/lib/ dir,False
1ed60d9d30a91b403cb73bc3872a3b6001a96b56,2016-02-23 04:49:51,tasti,One more typo,False
210adb73fa5d598ce6f01a05ca3b616ee93f0bdb,2016-02-23 04:48:00,tasti,Fix typos in docs,False
7b12a1475d2160205a1b4cd49f353de9faf82a62,2016-02-23 04:19:30,Drew Reynolds,[docs] Fix broken link in API Reference ContentBlock,False
241e815ab8ffb8dac13b98e0238326188eafeef9,2016-02-23 04:18:19,Isaac Salier-Hellendag,"Merge pull request #12 from jeffreylin/patch-1

[docs] Fix broken link in Advanced Topics Entities",True
3b1c7ee7f0ecfd277db71366fa309eebab1592ef,2016-02-23 04:18:12,Alex Taylor,"Fix typo in QuickStart-Rich-Styling.md

In `_onBoldClick`, `editorState` wasn't defined and caused the Bold button to become inoperable.",False
01f29c39391a8ccb3377ffb1b3dac536968872fc,2016-02-23 04:17:39,Isaac Salier-Hellendag,"Merge pull request #11 from razh/link-example

Fix logState calls in entity and link examples",True
57e23c7b58898e4422ab5b4191434c895f068514,2016-02-23 04:14:19,Isaac Salier-Hellendag,"Merge pull request #22 from NYDrewReynolds/patch-2

[docs] Fix broken link in API Reference ContentState",True
c2d491c06f73fe4d4119990fb63a6ab36b3d7bc9,2016-02-23 04:13:34,Isaac Salier-Hellendag,"Merge pull request #15 from ankurp/patch-1

Use const instead of var",True
3d4fe2215c3736d9f1afb731ada355af2f8172d4,2016-02-23 04:03:40,Ben Alpert,"Merge pull request #21 from NYDrewReynolds/patch-1

Fix broken link in Advanced Topic Inline Styles",True
f4e89e63a12e4c17568b446a3dac9388db6bcc7d,2016-02-23 04:03:32,Drew Reynolds,[docs] Fix broken link in API Reference ContentState,False
9c294758b0104cb8a3da25d935e8f17b93ba5108,2016-02-23 03:59:51,Isaac Salier-Hellendag,"Merge pull request #16 from vitorbal/master

[docs] Change examples to use ES6 Classes",True
9a22784c99c44c1efa3f2d187bfb1e1deb66cabd,2016-02-23 03:57:07,Drew Reynolds,Fix broken link in Advanced Topic Inline Styles,False
bc124271b171edc5e42560856233eaf30fbef387,2016-02-23 03:24:59,Vitor Balocco,[docs] Change examples to use ES6 Classes,False
c3cd3932191425e58405c8ecf5ebc683a6abeff2,2016-02-23 03:12:37,Ankur Patel,Use const instead of var,False
f5c08635c0c6732229b6b792fd907d944b885e88,2016-02-23 02:54:08,Jeffrey Lin,[ez] Fix typo draf -> draft,False
fdec8d529591457a943c56721db5104e22e2a48f,2016-02-23 02:46:12,Jeffrey Lin,"Fix broken link

Currently links to https://facebook.github.io/draft-js/docs/docs/advanced-topics-block-components.html which has /docs/ repeated twice. =P",False
7170a40816c86a326542c1207a07c38c4508a95e,2016-02-23 02:39:09,Raymond Zhou,Fix logState calls in entity and link examples,False
5df303bdb651dc897b061a90ff0212d6d5b653a8,2016-02-23 02:01:32,Paul O’Shannessy,"Merge pull request #6 from wyze/patch-1

Add syntax highlighting to API Basics documentation",True
11ddcfea579e12806f9875b5e018e47dfe17e17d,2016-02-23 02:00:38,Paul O’Shannessy,"Merge pull request #8 from mihalik/patch-1

Update broken example links in Inline Styles doc",True
5082be80383f42465d03441022d4ab2d4e95f83e,2016-02-23 02:00:20,Paul O’Shannessy,"Merge pull request #9 from jerolimov/patch-1

Fix tex example (add missing react-dom dependency)",True
969b54a65fd7532b56ef4a7c77598065ae9e7ae9,2016-02-23 01:58:54,Neil Kistner,Add syntax highlighting to docs,False
997def5882259776bb2f42fc55a15473771a3043,2016-02-23 01:55:21,Christoph Jerolimov,Fix tex example (add missing react-dom dependency),False
b25762d8bfedf7191dc4ebed6cae5677553524f7,2016-02-23 01:52:18,Paul O’Shannessy,[docs] Ignore generated content,False
78397800e0ba6538329727f259f6917b0be015a5,2016-02-23 01:49:23,Paul O’Shannessy,"Merge pull request #5 from farhanpatel/master

Typo in Advanced-Topics-Entities.md",True
657444c32916d974c0ab0e39c2d153cbf647ab80,2016-02-23 01:48:25,Farhan Patel,Fix typo in advanced-topics-entities.js,False
f35556cfce3c7e8f25524d5a2e2258b2a7d916de,2016-02-23 01:48:12,Dustin Mihalik,"Update broken example links in Inline Styles doc

This looks like the file that generates this page:  http://facebook.github.io/draft-js/docs/advanced-topics-inline-styles.html

Updating two links to point to the correct path.",False
4e791e05495de5dfc54dca5678b3ef2189a80d04,2016-02-23 01:46:01,Paul O’Shannessy,Fix link in readme,False
29875a758288089b2bd2c394de873c40d784bac0,2016-02-23 01:35:20,Farhan Patel,Typo in Advanced-Topics-Entities.md,False
06891490069d3ccfb89caf53f33a7545d39fc3ec,2016-02-23 01:06:49,Paul O’Shannessy,Make package public so we can publish,False
54fbc9b38b4c372a47c4c137d6d1bfe7179d8818,2016-02-23 00:41:09,Paul O’Shannessy,[docs] Fix getting started code,False
342576bf7186d07c82a41d9ca8169130669747d6,2016-02-22 23:54:28,Isaac Salier-Hellendag,Open source Draft.js 🎉,False
